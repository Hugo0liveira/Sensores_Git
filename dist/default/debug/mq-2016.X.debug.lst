

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Aug 30 18:50:21 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2,group=3
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2,group=3
    64                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text50,local,class=CODE,merge=1,delta=2
    68                           	psect	functab,global,class=ENTRY,delta=2
    69                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    71                           	dabs	1,0x7E,2
    72     0000                     
    73                           ; Generated 22/03/2023 GMT
    74                           ; 
    75                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution. Publication is not required when
    89                           ;        this file is used in an embedded application.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC16F886 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0089                     	;# 
   146     008C                     	;# 
   147     008D                     	;# 
   148     008E                     	;# 
   149     008F                     	;# 
   150     0090                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0093                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0095                     	;# 
   158     0096                     	;# 
   159     0097                     	;# 
   160     0098                     	;# 
   161     0099                     	;# 
   162     009A                     	;# 
   163     009B                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     009E                     	;# 
   167     009F                     	;# 
   168     0105                     	;# 
   169     0107                     	;# 
   170     0108                     	;# 
   171     0109                     	;# 
   172     010C                     	;# 
   173     010C                     	;# 
   174     010D                     	;# 
   175     010E                     	;# 
   176     010F                     	;# 
   177     0185                     	;# 
   178     0187                     	;# 
   179     0188                     	;# 
   180     0189                     	;# 
   181     018C                     	;# 
   182     018D                     	;# 
   183     0000                     	;# 
   184     0001                     	;# 
   185     0002                     	;# 
   186     0003                     	;# 
   187     0004                     	;# 
   188     0005                     	;# 
   189     0006                     	;# 
   190     0007                     	;# 
   191     0009                     	;# 
   192     000A                     	;# 
   193     000B                     	;# 
   194     000C                     	;# 
   195     000D                     	;# 
   196     000E                     	;# 
   197     000E                     	;# 
   198     000F                     	;# 
   199     0010                     	;# 
   200     0011                     	;# 
   201     0012                     	;# 
   202     0013                     	;# 
   203     0014                     	;# 
   204     0015                     	;# 
   205     0015                     	;# 
   206     0016                     	;# 
   207     0017                     	;# 
   208     0018                     	;# 
   209     0019                     	;# 
   210     001A                     	;# 
   211     001B                     	;# 
   212     001B                     	;# 
   213     001C                     	;# 
   214     001D                     	;# 
   215     001E                     	;# 
   216     001F                     	;# 
   217     0081                     	;# 
   218     0085                     	;# 
   219     0086                     	;# 
   220     0087                     	;# 
   221     0089                     	;# 
   222     008C                     	;# 
   223     008D                     	;# 
   224     008E                     	;# 
   225     008F                     	;# 
   226     0090                     	;# 
   227     0091                     	;# 
   228     0092                     	;# 
   229     0093                     	;# 
   230     0093                     	;# 
   231     0093                     	;# 
   232     0094                     	;# 
   233     0095                     	;# 
   234     0096                     	;# 
   235     0097                     	;# 
   236     0098                     	;# 
   237     0099                     	;# 
   238     009A                     	;# 
   239     009B                     	;# 
   240     009C                     	;# 
   241     009D                     	;# 
   242     009E                     	;# 
   243     009F                     	;# 
   244     0105                     	;# 
   245     0107                     	;# 
   246     0108                     	;# 
   247     0109                     	;# 
   248     010C                     	;# 
   249     010C                     	;# 
   250     010D                     	;# 
   251     010E                     	;# 
   252     010F                     	;# 
   253     0185                     	;# 
   254     0187                     	;# 
   255     0188                     	;# 
   256     0189                     	;# 
   257     018C                     	;# 
   258     018D                     	;# 
   259     0000                     	;# 
   260     0001                     	;# 
   261     0002                     	;# 
   262     0003                     	;# 
   263     0004                     	;# 
   264     0005                     	;# 
   265     0006                     	;# 
   266     0007                     	;# 
   267     0009                     	;# 
   268     000A                     	;# 
   269     000B                     	;# 
   270     000C                     	;# 
   271     000D                     	;# 
   272     000E                     	;# 
   273     000E                     	;# 
   274     000F                     	;# 
   275     0010                     	;# 
   276     0011                     	;# 
   277     0012                     	;# 
   278     0013                     	;# 
   279     0014                     	;# 
   280     0015                     	;# 
   281     0015                     	;# 
   282     0016                     	;# 
   283     0017                     	;# 
   284     0018                     	;# 
   285     0019                     	;# 
   286     001A                     	;# 
   287     001B                     	;# 
   288     001B                     	;# 
   289     001C                     	;# 
   290     001D                     	;# 
   291     001E                     	;# 
   292     001F                     	;# 
   293     0081                     	;# 
   294     0085                     	;# 
   295     0086                     	;# 
   296     0087                     	;# 
   297     0089                     	;# 
   298     008C                     	;# 
   299     008D                     	;# 
   300     008E                     	;# 
   301     008F                     	;# 
   302     0090                     	;# 
   303     0091                     	;# 
   304     0092                     	;# 
   305     0093                     	;# 
   306     0093                     	;# 
   307     0093                     	;# 
   308     0094                     	;# 
   309     0095                     	;# 
   310     0096                     	;# 
   311     0097                     	;# 
   312     0098                     	;# 
   313     0099                     	;# 
   314     009A                     	;# 
   315     009B                     	;# 
   316     009C                     	;# 
   317     009D                     	;# 
   318     009E                     	;# 
   319     009F                     	;# 
   320     0105                     	;# 
   321     0107                     	;# 
   322     0108                     	;# 
   323     0109                     	;# 
   324     010C                     	;# 
   325     010C                     	;# 
   326     010D                     	;# 
   327     010E                     	;# 
   328     010F                     	;# 
   329     0185                     	;# 
   330     0187                     	;# 
   331     0188                     	;# 
   332     0189                     	;# 
   333     018C                     	;# 
   334     018D                     	;# 
   335     0000                     	;# 
   336     0001                     	;# 
   337     0002                     	;# 
   338     0003                     	;# 
   339     0004                     	;# 
   340     0005                     	;# 
   341     0006                     	;# 
   342     0007                     	;# 
   343     0009                     	;# 
   344     000A                     	;# 
   345     000B                     	;# 
   346     000C                     	;# 
   347     000D                     	;# 
   348     000E                     	;# 
   349     000E                     	;# 
   350     000F                     	;# 
   351     0010                     	;# 
   352     0011                     	;# 
   353     0012                     	;# 
   354     0013                     	;# 
   355     0014                     	;# 
   356     0015                     	;# 
   357     0015                     	;# 
   358     0016                     	;# 
   359     0017                     	;# 
   360     0018                     	;# 
   361     0019                     	;# 
   362     001A                     	;# 
   363     001B                     	;# 
   364     001B                     	;# 
   365     001C                     	;# 
   366     001D                     	;# 
   367     001E                     	;# 
   368     001F                     	;# 
   369     0081                     	;# 
   370     0085                     	;# 
   371     0086                     	;# 
   372     0087                     	;# 
   373     0089                     	;# 
   374     008C                     	;# 
   375     008D                     	;# 
   376     008E                     	;# 
   377     008F                     	;# 
   378     0090                     	;# 
   379     0091                     	;# 
   380     0092                     	;# 
   381     0093                     	;# 
   382     0093                     	;# 
   383     0093                     	;# 
   384     0094                     	;# 
   385     0095                     	;# 
   386     0096                     	;# 
   387     0097                     	;# 
   388     0098                     	;# 
   389     0099                     	;# 
   390     009A                     	;# 
   391     009B                     	;# 
   392     009C                     	;# 
   393     009D                     	;# 
   394     009E                     	;# 
   395     009F                     	;# 
   396     0105                     	;# 
   397     0107                     	;# 
   398     0108                     	;# 
   399     0109                     	;# 
   400     010C                     	;# 
   401     010C                     	;# 
   402     010D                     	;# 
   403     010E                     	;# 
   404     010F                     	;# 
   405     0185                     	;# 
   406     0187                     	;# 
   407     0188                     	;# 
   408     0189                     	;# 
   409     018C                     	;# 
   410     018D                     	;# 
   411     0000                     	;# 
   412     0001                     	;# 
   413     0002                     	;# 
   414     0003                     	;# 
   415     0004                     	;# 
   416     0005                     	;# 
   417     0006                     	;# 
   418     0007                     	;# 
   419     0009                     	;# 
   420     000A                     	;# 
   421     000B                     	;# 
   422     000C                     	;# 
   423     000D                     	;# 
   424     000E                     	;# 
   425     000E                     	;# 
   426     000F                     	;# 
   427     0010                     	;# 
   428     0011                     	;# 
   429     0012                     	;# 
   430     0013                     	;# 
   431     0014                     	;# 
   432     0015                     	;# 
   433     0015                     	;# 
   434     0016                     	;# 
   435     0017                     	;# 
   436     0018                     	;# 
   437     0019                     	;# 
   438     001A                     	;# 
   439     001B                     	;# 
   440     001B                     	;# 
   441     001C                     	;# 
   442     001D                     	;# 
   443     001E                     	;# 
   444     001F                     	;# 
   445     0081                     	;# 
   446     0085                     	;# 
   447     0086                     	;# 
   448     0087                     	;# 
   449     0089                     	;# 
   450     008C                     	;# 
   451     008D                     	;# 
   452     008E                     	;# 
   453     008F                     	;# 
   454     0090                     	;# 
   455     0091                     	;# 
   456     0092                     	;# 
   457     0093                     	;# 
   458     0093                     	;# 
   459     0093                     	;# 
   460     0094                     	;# 
   461     0095                     	;# 
   462     0096                     	;# 
   463     0097                     	;# 
   464     0098                     	;# 
   465     0099                     	;# 
   466     009A                     	;# 
   467     009B                     	;# 
   468     009C                     	;# 
   469     009D                     	;# 
   470     009E                     	;# 
   471     009F                     	;# 
   472     0105                     	;# 
   473     0107                     	;# 
   474     0108                     	;# 
   475     0109                     	;# 
   476     010C                     	;# 
   477     010C                     	;# 
   478     010D                     	;# 
   479     010E                     	;# 
   480     010F                     	;# 
   481     0185                     	;# 
   482     0187                     	;# 
   483     0188                     	;# 
   484     0189                     	;# 
   485     018C                     	;# 
   486     018D                     	;# 
   487     0000                     	;# 
   488     0001                     	;# 
   489     0002                     	;# 
   490     0003                     	;# 
   491     0004                     	;# 
   492     0005                     	;# 
   493     0006                     	;# 
   494     0007                     	;# 
   495     0009                     	;# 
   496     000A                     	;# 
   497     000B                     	;# 
   498     000C                     	;# 
   499     000D                     	;# 
   500     000E                     	;# 
   501     000E                     	;# 
   502     000F                     	;# 
   503     0010                     	;# 
   504     0011                     	;# 
   505     0012                     	;# 
   506     0013                     	;# 
   507     0014                     	;# 
   508     0015                     	;# 
   509     0015                     	;# 
   510     0016                     	;# 
   511     0017                     	;# 
   512     0018                     	;# 
   513     0019                     	;# 
   514     001A                     	;# 
   515     001B                     	;# 
   516     001B                     	;# 
   517     001C                     	;# 
   518     001D                     	;# 
   519     001E                     	;# 
   520     001F                     	;# 
   521     0081                     	;# 
   522     0085                     	;# 
   523     0086                     	;# 
   524     0087                     	;# 
   525     0089                     	;# 
   526     008C                     	;# 
   527     008D                     	;# 
   528     008E                     	;# 
   529     008F                     	;# 
   530     0090                     	;# 
   531     0091                     	;# 
   532     0092                     	;# 
   533     0093                     	;# 
   534     0093                     	;# 
   535     0093                     	;# 
   536     0094                     	;# 
   537     0095                     	;# 
   538     0096                     	;# 
   539     0097                     	;# 
   540     0098                     	;# 
   541     0099                     	;# 
   542     009A                     	;# 
   543     009B                     	;# 
   544     009C                     	;# 
   545     009D                     	;# 
   546     009E                     	;# 
   547     009F                     	;# 
   548     0105                     	;# 
   549     0107                     	;# 
   550     0108                     	;# 
   551     0109                     	;# 
   552     010C                     	;# 
   553     010C                     	;# 
   554     010D                     	;# 
   555     010E                     	;# 
   556     010F                     	;# 
   557     0185                     	;# 
   558     0187                     	;# 
   559     0188                     	;# 
   560     0189                     	;# 
   561     018C                     	;# 
   562     018D                     	;# 
   563     0000                     	;# 
   564     0001                     	;# 
   565     0002                     	;# 
   566     0003                     	;# 
   567     0004                     	;# 
   568     0005                     	;# 
   569     0006                     	;# 
   570     0007                     	;# 
   571     0009                     	;# 
   572     000A                     	;# 
   573     000B                     	;# 
   574     000C                     	;# 
   575     000D                     	;# 
   576     000E                     	;# 
   577     000E                     	;# 
   578     000F                     	;# 
   579     0010                     	;# 
   580     0011                     	;# 
   581     0012                     	;# 
   582     0013                     	;# 
   583     0014                     	;# 
   584     0015                     	;# 
   585     0015                     	;# 
   586     0016                     	;# 
   587     0017                     	;# 
   588     0018                     	;# 
   589     0019                     	;# 
   590     001A                     	;# 
   591     001B                     	;# 
   592     001B                     	;# 
   593     001C                     	;# 
   594     001D                     	;# 
   595     001E                     	;# 
   596     001F                     	;# 
   597     0081                     	;# 
   598     0085                     	;# 
   599     0086                     	;# 
   600     0087                     	;# 
   601     0089                     	;# 
   602     008C                     	;# 
   603     008D                     	;# 
   604     008E                     	;# 
   605     008F                     	;# 
   606     0090                     	;# 
   607     0091                     	;# 
   608     0092                     	;# 
   609     0093                     	;# 
   610     0093                     	;# 
   611     0093                     	;# 
   612     0094                     	;# 
   613     0095                     	;# 
   614     0096                     	;# 
   615     0097                     	;# 
   616     0098                     	;# 
   617     0099                     	;# 
   618     009A                     	;# 
   619     009B                     	;# 
   620     009C                     	;# 
   621     009D                     	;# 
   622     009E                     	;# 
   623     009F                     	;# 
   624     0105                     	;# 
   625     0107                     	;# 
   626     0108                     	;# 
   627     0109                     	;# 
   628     010C                     	;# 
   629     010C                     	;# 
   630     010D                     	;# 
   631     010E                     	;# 
   632     010F                     	;# 
   633     0185                     	;# 
   634     0187                     	;# 
   635     0188                     	;# 
   636     0189                     	;# 
   637     018C                     	;# 
   638     018D                     	;# 
   639     0000                     	;# 
   640     0001                     	;# 
   641     0002                     	;# 
   642     0003                     	;# 
   643     0004                     	;# 
   644     0005                     	;# 
   645     0006                     	;# 
   646     0007                     	;# 
   647     0009                     	;# 
   648     000A                     	;# 
   649     000B                     	;# 
   650     000C                     	;# 
   651     000D                     	;# 
   652     000E                     	;# 
   653     000E                     	;# 
   654     000F                     	;# 
   655     0010                     	;# 
   656     0011                     	;# 
   657     0012                     	;# 
   658     0013                     	;# 
   659     0014                     	;# 
   660     0015                     	;# 
   661     0015                     	;# 
   662     0016                     	;# 
   663     0017                     	;# 
   664     0018                     	;# 
   665     0019                     	;# 
   666     001A                     	;# 
   667     001B                     	;# 
   668     001B                     	;# 
   669     001C                     	;# 
   670     001D                     	;# 
   671     001E                     	;# 
   672     001F                     	;# 
   673     0081                     	;# 
   674     0085                     	;# 
   675     0086                     	;# 
   676     0087                     	;# 
   677     0089                     	;# 
   678     008C                     	;# 
   679     008D                     	;# 
   680     008E                     	;# 
   681     008F                     	;# 
   682     0090                     	;# 
   683     0091                     	;# 
   684     0092                     	;# 
   685     0093                     	;# 
   686     0093                     	;# 
   687     0093                     	;# 
   688     0094                     	;# 
   689     0095                     	;# 
   690     0096                     	;# 
   691     0097                     	;# 
   692     0098                     	;# 
   693     0099                     	;# 
   694     009A                     	;# 
   695     009B                     	;# 
   696     009C                     	;# 
   697     009D                     	;# 
   698     009E                     	;# 
   699     009F                     	;# 
   700     0105                     	;# 
   701     0107                     	;# 
   702     0108                     	;# 
   703     0109                     	;# 
   704     010C                     	;# 
   705     010C                     	;# 
   706     010D                     	;# 
   707     010E                     	;# 
   708     010F                     	;# 
   709     0185                     	;# 
   710     0187                     	;# 
   711     0188                     	;# 
   712     0189                     	;# 
   713     018C                     	;# 
   714     018D                     	;# 
   715     0000                     	;# 
   716     0001                     	;# 
   717     0002                     	;# 
   718     0003                     	;# 
   719     0004                     	;# 
   720     0005                     	;# 
   721     0006                     	;# 
   722     0007                     	;# 
   723     0009                     	;# 
   724     000A                     	;# 
   725     000B                     	;# 
   726     000C                     	;# 
   727     000D                     	;# 
   728     000E                     	;# 
   729     000E                     	;# 
   730     000F                     	;# 
   731     0010                     	;# 
   732     0011                     	;# 
   733     0012                     	;# 
   734     0013                     	;# 
   735     0014                     	;# 
   736     0015                     	;# 
   737     0015                     	;# 
   738     0016                     	;# 
   739     0017                     	;# 
   740     0018                     	;# 
   741     0019                     	;# 
   742     001A                     	;# 
   743     001B                     	;# 
   744     001B                     	;# 
   745     001C                     	;# 
   746     001D                     	;# 
   747     001E                     	;# 
   748     001F                     	;# 
   749     0081                     	;# 
   750     0085                     	;# 
   751     0086                     	;# 
   752     0087                     	;# 
   753     0089                     	;# 
   754     008C                     	;# 
   755     008D                     	;# 
   756     008E                     	;# 
   757     008F                     	;# 
   758     0090                     	;# 
   759     0091                     	;# 
   760     0092                     	;# 
   761     0093                     	;# 
   762     0093                     	;# 
   763     0093                     	;# 
   764     0094                     	;# 
   765     0095                     	;# 
   766     0096                     	;# 
   767     0097                     	;# 
   768     0098                     	;# 
   769     0099                     	;# 
   770     009A                     	;# 
   771     009B                     	;# 
   772     009C                     	;# 
   773     009D                     	;# 
   774     009E                     	;# 
   775     009F                     	;# 
   776     0105                     	;# 
   777     0107                     	;# 
   778     0108                     	;# 
   779     0109                     	;# 
   780     010C                     	;# 
   781     010C                     	;# 
   782     010D                     	;# 
   783     010E                     	;# 
   784     010F                     	;# 
   785     0185                     	;# 
   786     0187                     	;# 
   787     0188                     	;# 
   788     0189                     	;# 
   789     018C                     	;# 
   790     018D                     	;# 
   791     0000                     	;# 
   792     0001                     	;# 
   793     0002                     	;# 
   794     0003                     	;# 
   795     0004                     	;# 
   796     0005                     	;# 
   797     0006                     	;# 
   798     0007                     	;# 
   799     0009                     	;# 
   800     000A                     	;# 
   801     000B                     	;# 
   802     000C                     	;# 
   803     000D                     	;# 
   804     000E                     	;# 
   805     000E                     	;# 
   806     000F                     	;# 
   807     0010                     	;# 
   808     0011                     	;# 
   809     0012                     	;# 
   810     0013                     	;# 
   811     0014                     	;# 
   812     0015                     	;# 
   813     0015                     	;# 
   814     0016                     	;# 
   815     0017                     	;# 
   816     0018                     	;# 
   817     0019                     	;# 
   818     001A                     	;# 
   819     001B                     	;# 
   820     001B                     	;# 
   821     001C                     	;# 
   822     001D                     	;# 
   823     001E                     	;# 
   824     001F                     	;# 
   825     0081                     	;# 
   826     0085                     	;# 
   827     0086                     	;# 
   828     0087                     	;# 
   829     0089                     	;# 
   830     008C                     	;# 
   831     008D                     	;# 
   832     008E                     	;# 
   833     008F                     	;# 
   834     0090                     	;# 
   835     0091                     	;# 
   836     0092                     	;# 
   837     0093                     	;# 
   838     0093                     	;# 
   839     0093                     	;# 
   840     0094                     	;# 
   841     0095                     	;# 
   842     0096                     	;# 
   843     0097                     	;# 
   844     0098                     	;# 
   845     0099                     	;# 
   846     009A                     	;# 
   847     009B                     	;# 
   848     009C                     	;# 
   849     009D                     	;# 
   850     009E                     	;# 
   851     009F                     	;# 
   852     0105                     	;# 
   853     0107                     	;# 
   854     0108                     	;# 
   855     0109                     	;# 
   856     010C                     	;# 
   857     010C                     	;# 
   858     010D                     	;# 
   859     010E                     	;# 
   860     010F                     	;# 
   861     0185                     	;# 
   862     0187                     	;# 
   863     0188                     	;# 
   864     0189                     	;# 
   865     018C                     	;# 
   866     018D                     	;# 
   867     0000                     	;# 
   868     0001                     	;# 
   869     0002                     	;# 
   870     0003                     	;# 
   871     0004                     	;# 
   872     0005                     	;# 
   873     0006                     	;# 
   874     0007                     	;# 
   875     0009                     	;# 
   876     000A                     	;# 
   877     000B                     	;# 
   878     000C                     	;# 
   879     000D                     	;# 
   880     000E                     	;# 
   881     000E                     	;# 
   882     000F                     	;# 
   883     0010                     	;# 
   884     0011                     	;# 
   885     0012                     	;# 
   886     0013                     	;# 
   887     0014                     	;# 
   888     0015                     	;# 
   889     0015                     	;# 
   890     0016                     	;# 
   891     0017                     	;# 
   892     0018                     	;# 
   893     0019                     	;# 
   894     001A                     	;# 
   895     001B                     	;# 
   896     001B                     	;# 
   897     001C                     	;# 
   898     001D                     	;# 
   899     001E                     	;# 
   900     001F                     	;# 
   901     0081                     	;# 
   902     0085                     	;# 
   903     0086                     	;# 
   904     0087                     	;# 
   905     0089                     	;# 
   906     008C                     	;# 
   907     008D                     	;# 
   908     008E                     	;# 
   909     008F                     	;# 
   910     0090                     	;# 
   911     0091                     	;# 
   912     0092                     	;# 
   913     0093                     	;# 
   914     0093                     	;# 
   915     0093                     	;# 
   916     0094                     	;# 
   917     0095                     	;# 
   918     0096                     	;# 
   919     0097                     	;# 
   920     0098                     	;# 
   921     0099                     	;# 
   922     009A                     	;# 
   923     009B                     	;# 
   924     009C                     	;# 
   925     009D                     	;# 
   926     009E                     	;# 
   927     009F                     	;# 
   928     0105                     	;# 
   929     0107                     	;# 
   930     0108                     	;# 
   931     0109                     	;# 
   932     010C                     	;# 
   933     010C                     	;# 
   934     010D                     	;# 
   935     010E                     	;# 
   936     010F                     	;# 
   937     0185                     	;# 
   938     0187                     	;# 
   939     0188                     	;# 
   940     0189                     	;# 
   941     018C                     	;# 
   942     018D                     	;# 
   943     0000                     	;# 
   944     0001                     	;# 
   945     0002                     	;# 
   946     0003                     	;# 
   947     0004                     	;# 
   948     0005                     	;# 
   949     0006                     	;# 
   950     0007                     	;# 
   951     0009                     	;# 
   952     000A                     	;# 
   953     000B                     	;# 
   954     000C                     	;# 
   955     000D                     	;# 
   956     000E                     	;# 
   957     000E                     	;# 
   958     000F                     	;# 
   959     0010                     	;# 
   960     0011                     	;# 
   961     0012                     	;# 
   962     0013                     	;# 
   963     0014                     	;# 
   964     0015                     	;# 
   965     0015                     	;# 
   966     0016                     	;# 
   967     0017                     	;# 
   968     0018                     	;# 
   969     0019                     	;# 
   970     001A                     	;# 
   971     001B                     	;# 
   972     001B                     	;# 
   973     001C                     	;# 
   974     001D                     	;# 
   975     001E                     	;# 
   976     001F                     	;# 
   977     0081                     	;# 
   978     0085                     	;# 
   979     0086                     	;# 
   980     0087                     	;# 
   981     0089                     	;# 
   982     008C                     	;# 
   983     008D                     	;# 
   984     008E                     	;# 
   985     008F                     	;# 
   986     0090                     	;# 
   987     0091                     	;# 
   988     0092                     	;# 
   989     0093                     	;# 
   990     0093                     	;# 
   991     0093                     	;# 
   992     0094                     	;# 
   993     0095                     	;# 
   994     0096                     	;# 
   995     0097                     	;# 
   996     0098                     	;# 
   997     0099                     	;# 
   998     009A                     	;# 
   999     009B                     	;# 
  1000     009C                     	;# 
  1001     009D                     	;# 
  1002     009E                     	;# 
  1003     009F                     	;# 
  1004     0105                     	;# 
  1005     0107                     	;# 
  1006     0108                     	;# 
  1007     0109                     	;# 
  1008     010C                     	;# 
  1009     010C                     	;# 
  1010     010D                     	;# 
  1011     010E                     	;# 
  1012     010F                     	;# 
  1013     0185                     	;# 
  1014     0187                     	;# 
  1015     0188                     	;# 
  1016     0189                     	;# 
  1017     018C                     	;# 
  1018     018D                     	;# 
  1019     0000                     	;# 
  1020     0001                     	;# 
  1021     0002                     	;# 
  1022     0003                     	;# 
  1023     0004                     	;# 
  1024     0005                     	;# 
  1025     0006                     	;# 
  1026     0007                     	;# 
  1027     0009                     	;# 
  1028     000A                     	;# 
  1029     000B                     	;# 
  1030     000C                     	;# 
  1031     000D                     	;# 
  1032     000E                     	;# 
  1033     000E                     	;# 
  1034     000F                     	;# 
  1035     0010                     	;# 
  1036     0011                     	;# 
  1037     0012                     	;# 
  1038     0013                     	;# 
  1039     0014                     	;# 
  1040     0015                     	;# 
  1041     0015                     	;# 
  1042     0016                     	;# 
  1043     0017                     	;# 
  1044     0018                     	;# 
  1045     0019                     	;# 
  1046     001A                     	;# 
  1047     001B                     	;# 
  1048     001B                     	;# 
  1049     001C                     	;# 
  1050     001D                     	;# 
  1051     001E                     	;# 
  1052     001F                     	;# 
  1053     0081                     	;# 
  1054     0085                     	;# 
  1055     0086                     	;# 
  1056     0087                     	;# 
  1057     0089                     	;# 
  1058     008C                     	;# 
  1059     008D                     	;# 
  1060     008E                     	;# 
  1061     008F                     	;# 
  1062     0090                     	;# 
  1063     0091                     	;# 
  1064     0092                     	;# 
  1065     0093                     	;# 
  1066     0093                     	;# 
  1067     0093                     	;# 
  1068     0094                     	;# 
  1069     0095                     	;# 
  1070     0096                     	;# 
  1071     0097                     	;# 
  1072     0098                     	;# 
  1073     0099                     	;# 
  1074     009A                     	;# 
  1075     009B                     	;# 
  1076     009C                     	;# 
  1077     009D                     	;# 
  1078     009E                     	;# 
  1079     009F                     	;# 
  1080     0105                     	;# 
  1081     0107                     	;# 
  1082     0108                     	;# 
  1083     0109                     	;# 
  1084     010C                     	;# 
  1085     010C                     	;# 
  1086     010D                     	;# 
  1087     010E                     	;# 
  1088     010F                     	;# 
  1089     0185                     	;# 
  1090     0187                     	;# 
  1091     0188                     	;# 
  1092     0189                     	;# 
  1093     018C                     	;# 
  1094     018D                     	;# 
  1095                           
  1096                           	psect	idataBANK1
  1097     12D4                     __pidataBANK1:
  1098                           
  1099                           ;initializer for _menu_inicial
  1100     12D4  3447               	retlw	low (STR_23| (0+32768))
  1101     12D5  3488               	retlw	high (STR_23| (0+32768))
  1102     12D6  349E               	retlw	low (STR_24| (0+32768))
  1103     12D7  3487               	retlw	high (STR_24| (0+32768))
  1104     12D8  343D               	retlw	low (STR_25| (0+32768))
  1105     12D9  3488               	retlw	high (STR_25| (0+32768))
  1106     12DA  3462               	retlw	low (STR_26| (0+32768))
  1107     12DB  3488               	retlw	high (STR_26| (0+32768))
  1108     12DC  346A               	retlw	low (STR_27| (0+32768))
  1109     12DD  3488               	retlw	high (STR_27| (0+32768))
  1110     12DE  34BC               	retlw	low (STR_28| (0+32768))
  1111     12DF  3487               	retlw	high (STR_28| (0+32768))
  1112     12E0  34AD               	retlw	low (STR_29| (0+32768))
  1113     12E1  3487               	retlw	high (STR_29| (0+32768))
  1114                           
  1115                           	psect	stringtext
  1116     0700                     __pstringtext:
  1117     0700                     stringtab:
  1118     0700                     __stringtab:
  1119                           
  1120                           ;	String table - string pointers are 2 bytes each
  1121     0700  1BFF               	btfsc	btemp+1,7
  1122     0701  2F0A               	ljmp	stringcode
  1123     0702  1383               	bcf	3,7
  1124     0703  187F               	btfsc	btemp+1,0
  1125     0704  1783               	bsf	3,7
  1126     0705  0800               	movf	0,w
  1127     0706  0A84               	incf	4,f
  1128     0707  1903               	skipnz
  1129     0708  0AFF               	incf	btemp+1,f
  1130     0709  0008               	return
  1131     070A                     stringcode:
  1132     070A  087F               	movf	btemp+1,w
  1133     070B  397F               	andlw	127
  1134     070C  008A               	movwf	10
  1135     070D  0804               	movf	4,w
  1136     070E  0A84               	incf	4,f
  1137     070F  1903               	skipnz
  1138     0710  0AFF               	incf	btemp+1,f
  1139     0711  0082               	movwf	2
  1140     0712                     __stringbase:
  1141     0712                     __end_of__stringtab:
  1142     0712                     _menu_tempo_amostra:
  1143     0712  349B               	retlw	low (STR_5| (0+32768))
  1144     0713  3488               	retlw	high (STR_5| (0+32768))
  1145     0714  3412               	retlw	18
  1146     0715  3400               	retlw	0
  1147     0716  347F               	retlw	low (STR_6| (0+32768))
  1148     0717  3488               	retlw	high (STR_6| (0+32768))
  1149     0718  34B4               	retlw	180
  1150     0719  3400               	retlw	0
  1151     071A  3486               	retlw	low (STR_7| (0+32768))
  1152     071B  3488               	retlw	high (STR_7| (0+32768))
  1153     071C  341C               	retlw	28
  1154     071D  3402               	retlw	2
  1155     071E  34A1               	retlw	low (STR_8| (0+32768))
  1156     071F  3488               	retlw	high (STR_8| (0+32768))
  1157     0720  3438               	retlw	56
  1158     0721  3404               	retlw	4
  1159     0722  348D               	retlw	low (STR_9| (0+32768))
  1160     0723  3488               	retlw	high (STR_9| (0+32768))
  1161     0724  3430               	retlw	48
  1162     0725  342A               	retlw	42
  1163     0726  3494               	retlw	low (STR_10| (0+32768))
  1164     0727  3488               	retlw	high (STR_10| (0+32768))
  1165     0728  3490               	retlw	144
  1166     0729  347E               	retlw	126
  1167     072A  3478               	retlw	low (STR_11| (0+32768))
  1168     072B  3488               	retlw	high (STR_11| (0+32768))
  1169     072C  3420               	retlw	32
  1170     072D  34FD               	retlw	253
  1171     072E                     __end_of_menu_tempo_amostra:
  1172     072E                     _menu_quant_sensores:
  1173     072E  3459               	retlw	low (STR_12| (0+32768))
  1174     072F  3488               	retlw	high (STR_12| (0+32768))
  1175     0730  3401               	retlw	1
  1176     0731  34FD               	retlw	low (STR_13| (0+32768))
  1177     0732  3487               	retlw	high (STR_13| (0+32768))
  1178     0733  3402               	retlw	2
  1179     0734  3408               	retlw	low (STR_14| (0+32768))
  1180     0735  3488               	retlw	high (STR_14| (0+32768))
  1181     0736  3403               	retlw	3
  1182     0737  3413               	retlw	low (STR_15| (0+32768))
  1183     0738  3488               	retlw	high (STR_15| (0+32768))
  1184     0739  3404               	retlw	4
  1185     073A                     __end_of_menu_quant_sensores:
  1186     073A                     _dpowers:
  1187     073A  3401               	retlw	1
  1188     073B  3400               	retlw	0
  1189     073C  340A               	retlw	10
  1190     073D  3400               	retlw	0
  1191     073E  3464               	retlw	100
  1192     073F  3400               	retlw	0
  1193     0740  34E8               	retlw	232
  1194     0741  3403               	retlw	3
  1195     0742  3410               	retlw	16
  1196     0743  3427               	retlw	39
  1197     0744                     __end_of_dpowers:
  1198     0744                     _LCD_POSICAO:
  1199     0744  3401               	retlw	1
  1200     0745  3400               	retlw	0
  1201     0746  3401               	retlw	1
  1202     0747  3408               	retlw	8
  1203     0748  3402               	retlw	2
  1204     0749  3400               	retlw	0
  1205     074A  3402               	retlw	2
  1206     074B  3408               	retlw	8
  1207     074C                     __end_of_LCD_POSICAO:
  1208     074C                     _canais:
  1209     074C  3400               	retlw	0
  1210     074D  3401               	retlw	1
  1211     074E  3402               	retlw	2
  1212     074F  3404               	retlw	4
  1213     0750                     __end_of_canais:
  1214     0750                     exp@coeff:
  1215     0750  3400               	retlw	0
  1216     0751  3400               	retlw	0
  1217     0752  3480               	retlw	128
  1218     0753  343F               	retlw	63
  1219     0754  3418               	retlw	24
  1220     0755  3472               	retlw	114
  1221     0756  3431               	retlw	49
  1222     0757  343F               	retlw	63
  1223     0758  34F0               	retlw	240
  1224     0759  34FD               	retlw	253
  1225     075A  3475               	retlw	117
  1226     075B  343E               	retlw	62
  1227     075C  3447               	retlw	71
  1228     075D  3458               	retlw	88
  1229     075E  3463               	retlw	99
  1230     075F  343D               	retlw	61
  1231     0760  3458               	retlw	88
  1232     0761  3495               	retlw	149
  1233     0762  341D               	retlw	29
  1234     0763  343C               	retlw	60
  1235     0764  3482               	retlw	130
  1236     0765  34C4               	retlw	196
  1237     0766  34AE               	retlw	174
  1238     0767  343A               	retlw	58
  1239     0768  34A8               	retlw	168
  1240     0769  3478               	retlw	120
  1241     076A  3421               	retlw	33
  1242     076B  3439               	retlw	57
  1243     076C  34EF               	retlw	239
  1244     076D  3493               	retlw	147
  1245     076E  3480               	retlw	128
  1246     076F  3437               	retlw	55
  1247     0770  34A0               	retlw	160
  1248     0771  3492               	retlw	146
  1249     0772  34A7               	retlw	167
  1250     0773  3435               	retlw	53
  1251     0774  3446               	retlw	70
  1252     0775  3456               	retlw	86
  1253     0776  3415               	retlw	21
  1254     0777  3434               	retlw	52
  1255     0778                     __end_ofexp@coeff:
  1256     0778                     log@coeff:
  1257     0778  3400               	retlw	0
  1258     0779  3400               	retlw	0
  1259     077A  3400               	retlw	0
  1260     077B  3400               	retlw	0
  1261     077C  34C4               	retlw	196
  1262     077D  34FF               	retlw	255
  1263     077E  347F               	retlw	127
  1264     077F  343F               	retlw	63
  1265     0780  3480               	retlw	128
  1266     0781  34EF               	retlw	239
  1267     0782  34FF               	retlw	255
  1268     0783  34BE               	retlw	190
  1269     0784  3490               	retlw	144
  1270     0785  34E1               	retlw	225
  1271     0786  34A9               	retlw	169
  1272     0787  343E               	retlw	62
  1273     0788  34EC               	retlw	236
  1274     0789  3482               	retlw	130
  1275     078A  3476               	retlw	118
  1276     078B  34BE               	retlw	190
  1277     078C  3482               	retlw	130
  1278     078D  34AD               	retlw	173
  1279     078E  342B               	retlw	43
  1280     078F  343E               	retlw	62
  1281     0790  340E               	retlw	14
  1282     0791  343C               	retlw	60
  1283     0792  34C3               	retlw	195
  1284     0793  34BD               	retlw	189
  1285     0794  3487               	retlw	135
  1286     0795  34D1               	retlw	209
  1287     0796  3413               	retlw	19
  1288     0797  343D               	retlw	61
  1289     0798  3441               	retlw	65
  1290     0799  3478               	retlw	120
  1291     079A  34D3               	retlw	211
  1292     079B  34BB               	retlw	187
  1293     079C                     __end_oflog@coeff:
  1294     079C                     _mq_gl_r0:
  1295     079C  347A               	retlw	122
  1296     079D  3401               	retlw	1
  1297     079E                     __end_of_mq_gl_r0:
  1298     0003                     _STATUSbits	set	3
  1299     001E                     _ADRESH	set	30
  1300     001F                     _ADCON0bits	set	31
  1301     0001                     _TMR0	set	1
  1302     001A                     _RCREG	set	26
  1303     000C                     _PIR1bits	set	12
  1304     0019                     _TXREG	set	25
  1305     000B                     _INTCONbits	set	11
  1306     0018                     _RCSTAbits	set	24
  1307     00C4                     _CREN	set	196
  1308     00C7                     _SPEN	set	199
  1309     0058                     _RBIF	set	88
  1310     005B                     _RBIE	set	91
  1311     0037                     _RB7	set	55
  1312     0036                     _RB6	set	54
  1313     0035                     _RB5	set	53
  1314     0034                     _RB4	set	52
  1315     0064                     _TXIF	set	100
  1316     0038                     _RC0	set	56
  1317     0039                     _RC1	set	57
  1318     0030                     _RB0	set	48
  1319     0031                     _RB1	set	49
  1320     0032                     _RB2	set	50
  1321     003A                     _RC2	set	58
  1322     0099                     _SPBRG	set	153
  1323     009F                     _ADCON1bits	set	159
  1324     0085                     _TRISA	set	133
  1325     009E                     _ADRESL	set	158
  1326     008C                     _PIE1bits	set	140
  1327     0096                     _IOCB	set	150
  1328     0095                     _WPUB	set	149
  1329     0081                     _OPTION_REGbits	set	129
  1330     0098                     _TXSTAbits	set	152
  1331     04C6                     _TX9	set	1222
  1332     04C2                     _BRGH	set	1218
  1333     04C4                     _SYNC	set	1220
  1334     04C5                     _TXEN	set	1221
  1335     043F                     _TRISC7	set	1087
  1336     043E                     _TRISC6	set	1086
  1337     0437                     _TRISB7	set	1079
  1338     0436                     _TRISB6	set	1078
  1339     0435                     _TRISB5	set	1077
  1340     0434                     _TRISB4	set	1076
  1341     0430                     _TRISB0	set	1072
  1342     0431                     _TRISB1	set	1073
  1343     0432                     _TRISB2	set	1074
  1344     043A                     _TRISC2	set	1082
  1345     0439                     _TRISC1	set	1081
  1346     0438                     _TRISC0	set	1080
  1347     010C                     _EEDATA	set	268
  1348     010D                     _EEADR	set	269
  1349     018D                     _EECON2	set	397
  1350     018C                     _EECON1	set	396
  1351     018C                     _EECON1bits	set	396
  1352     0188                     _ANSEL	set	392
  1353     0189                     _ANSELH	set	393
  1354     0C3B                     _BRG16	set	3131
  1355     079E                     STR_24:
  1356     079E  344D               	retlw	77	;'M'
  1357     079F  346F               	retlw	111	;'o'
  1358     07A0  346E               	retlw	110	;'n'
  1359     07A1  3469               	retlw	105	;'i'
  1360     07A2  3474               	retlw	116	;'t'
  1361     07A3  346F               	retlw	111	;'o'
  1362     07A4  3472               	retlw	114	;'r'
  1363     07A5  3461               	retlw	97	;'a'
  1364     07A6  342F               	retlw	47	;'/'
  1365     07A7  3447               	retlw	71	;'G'
  1366     07A8  3472               	retlw	114	;'r'
  1367     07A9  3461               	retlw	97	;'a'
  1368     07AA  3476               	retlw	118	;'v'
  1369     07AB  3461               	retlw	97	;'a'
  1370     07AC  3400               	retlw	0
  1371     07AD                     STR_29:
  1372     07AD  3451               	retlw	81	;'Q'
  1373     07AE  3475               	retlw	117	;'u'
  1374     07AF  3461               	retlw	97	;'a'
  1375     07B0  346E               	retlw	110	;'n'
  1376     07B1  3474               	retlw	116	;'t'
  1377     07B2  3420               	retlw	32	;' '
  1378     07B3  3453               	retlw	83	;'S'
  1379     07B4  3465               	retlw	101	;'e'
  1380     07B5  346E               	retlw	110	;'n'
  1381     07B6  3473               	retlw	115	;'s'
  1382     07B7  346F               	retlw	111	;'o'
  1383     07B8  3472               	retlw	114	;'r'
  1384     07B9  3465               	retlw	101	;'e'
  1385     07BA  3473               	retlw	115	;'s'
  1386     07BB  3400               	retlw	0
  1387     07BC                     STR_28:
  1388     07BC  3454               	retlw	84	;'T'
  1389     07BD  3465               	retlw	101	;'e'
  1390     07BE  346D               	retlw	109	;'m'
  1391     07BF  3470               	retlw	112	;'p'
  1392     07C0  346F               	retlw	111	;'o'
  1393     07C1  3420               	retlw	32	;' '
  1394     07C2  3441               	retlw	65	;'A'
  1395     07C3  346D               	retlw	109	;'m'
  1396     07C4  346F               	retlw	111	;'o'
  1397     07C5  3473               	retlw	115	;'s'
  1398     07C6  3474               	retlw	116	;'t'
  1399     07C7  3472               	retlw	114	;'r'
  1400     07C8  3461               	retlw	97	;'a'
  1401     07C9  3400               	retlw	0
  1402     07CA                     STR_16:
  1403     07CA  344D               	retlw	77	;'M'
  1404     07CB  3465               	retlw	101	;'e'
  1405     07CC  346D               	retlw	109	;'m'
  1406     07CD  346F               	retlw	111	;'o'
  1407     07CE  3472               	retlw	114	;'r'
  1408     07CF  3469               	retlw	105	;'i'
  1409     07D0  3461               	retlw	97	;'a'
  1410     07D1  3420               	retlw	32	;' '
  1411     07D2  3443               	retlw	67	;'C'
  1412     07D3  3468               	retlw	104	;'h'
  1413     07D4  3465               	retlw	101	;'e'
  1414     07D5  3469               	retlw	105	;'i'
  1415     07D6  3461               	retlw	97	;'a'
  1416     07D7  3400               	retlw	0
  1417     07D8                     STR_2:
  1418     07D8  3449               	retlw	73	;'I'
  1419     07D9  346E               	retlw	110	;'n'
  1420     07DA  3469               	retlw	105	;'i'
  1421     07DB  3463               	retlw	99	;'c'
  1422     07DC  3469               	retlw	105	;'i'
  1423     07DD  346F               	retlw	111	;'o'
  1424     07DE  3420               	retlw	32	;' '
  1425     07DF  3476               	retlw	118	;'v'
  1426     07E0  3431               	retlw	49	;'1'
  1427     07E1  342E               	retlw	46	;'.'
  1428     07E2  3435               	retlw	53	;'5'
  1429     07E3  3433               	retlw	51	;'3'
  1430     07E4  342D               	retlw	45	;'-'
  1431     07E5  3400               	retlw	0
  1432     07E6                     STR_42:
  1433     07E6  344E               	retlw	78	;'N'
  1434     07E7  3465               	retlw	101	;'e'
  1435     07E8  346E               	retlw	110	;'n'
  1436     07E9  3468               	retlw	104	;'h'
  1437     07EA  3475               	retlw	117	;'u'
  1438     07EB  346D               	retlw	109	;'m'
  1439     07EC  3420               	retlw	32	;' '
  1440     07ED  3444               	retlw	68	;'D'
  1441     07EE  3461               	retlw	97	;'a'
  1442     07EF  3464               	retlw	100	;'d'
  1443     07F0  346F               	retlw	111	;'o'
  1444     07F1  3400               	retlw	0
  1445     07F2                     STR_47:
  1446     07F2  3454               	retlw	84	;'T'
  1447     07F3  3475               	retlw	117	;'u'
  1448     07F4  3464               	retlw	100	;'d'
  1449     07F5  346F               	retlw	111	;'o'
  1450     07F6  3420               	retlw	32	;' '
  1451     07F7  344C               	retlw	76	;'L'
  1452     07F8  3469               	retlw	105	;'i'
  1453     07F9  346D               	retlw	109	;'m'
  1454     07FA  3470               	retlw	112	;'p'
  1455     07FB  346F               	retlw	111	;'o'
  1456     07FC  3400               	retlw	0
  1457     07FD                     STR_13:
  1458     07FD  3432               	retlw	50	;'2'
  1459     07FE  3420               	retlw	32	;' '
  1460     07FF  3473               	retlw	115	;'s'
  1461     0800  3465               	retlw	101	;'e'
  1462     0801  346E               	retlw	110	;'n'
  1463     0802  3473               	retlw	115	;'s'
  1464     0803  346F               	retlw	111	;'o'
  1465     0804  3472               	retlw	114	;'r'
  1466     0805  3465               	retlw	101	;'e'
  1467     0806  3473               	retlw	115	;'s'
  1468     0807  3400               	retlw	0
  1469     0808                     STR_14:
  1470     0808  3433               	retlw	51	;'3'
  1471     0809  3420               	retlw	32	;' '
  1472     080A  3473               	retlw	115	;'s'
  1473     080B  3465               	retlw	101	;'e'
  1474     080C  346E               	retlw	110	;'n'
  1475     080D  3473               	retlw	115	;'s'
  1476     080E  346F               	retlw	111	;'o'
  1477     080F  3472               	retlw	114	;'r'
  1478     0810  3465               	retlw	101	;'e'
  1479     0811  3473               	retlw	115	;'s'
  1480     0812  3400               	retlw	0
  1481     0813                     STR_15:
  1482     0813  3434               	retlw	52	;'4'
  1483     0814  3420               	retlw	32	;' '
  1484     0815  3473               	retlw	115	;'s'
  1485     0816  3465               	retlw	101	;'e'
  1486     0817  346E               	retlw	110	;'n'
  1487     0818  3473               	retlw	115	;'s'
  1488     0819  346F               	retlw	111	;'o'
  1489     081A  3472               	retlw	114	;'r'
  1490     081B  3465               	retlw	101	;'e'
  1491     081C  3473               	retlw	115	;'s'
  1492     081D  3400               	retlw	0
  1493     081E                     STR_4:
  1494     081E  3432               	retlw	50	;'2'
  1495     081F  3431               	retlw	49	;'1'
  1496     0820  342F               	retlw	47	;'/'
  1497     0821  3430               	retlw	48	;'0'
  1498     0822  3438               	retlw	56	;'8'
  1499     0823  342F               	retlw	47	;'/'
  1500     0824  3432               	retlw	50	;'2'
  1501     0825  3430               	retlw	48	;'0'
  1502     0826  3432               	retlw	50	;'2'
  1503     0827  3433               	retlw	51	;'3'
  1504     0828  3400               	retlw	0
  1505     0829                     STR_46:
  1506     0829  344D               	retlw	77	;'M'
  1507     082A  3469               	retlw	105	;'i'
  1508     082B  346E               	retlw	110	;'n'
  1509     082C  343D               	retlw	61	;'='
  1510     082D  3425               	retlw	37	;'%'
  1511     082E  3464               	retlw	100	;'d'
  1512     082F  342E               	retlw	46	;'.'
  1513     0830  3425               	retlw	37	;'%'
  1514     0831  3464               	retlw	100	;'d'
  1515     0832  3400               	retlw	0
  1516     0833                     STR_45:
  1517     0833  344D               	retlw	77	;'M'
  1518     0834  3461               	retlw	97	;'a'
  1519     0835  3478               	retlw	120	;'x'
  1520     0836  343D               	retlw	61	;'='
  1521     0837  3425               	retlw	37	;'%'
  1522     0838  3464               	retlw	100	;'d'
  1523     0839  342E               	retlw	46	;'.'
  1524     083A  3425               	retlw	37	;'%'
  1525     083B  3464               	retlw	100	;'d'
  1526     083C  3400               	retlw	0
  1527     083D                     STR_25:
  1528     083D  3456               	retlw	86	;'V'
  1529     083E  3465               	retlw	101	;'e'
  1530     083F  3472               	retlw	114	;'r'
  1531     0840  3420               	retlw	32	;' '
  1532     0841  3454               	retlw	84	;'T'
  1533     0842  346F               	retlw	111	;'o'
  1534     0843  3464               	retlw	100	;'d'
  1535     0844  346F               	retlw	111	;'o'
  1536     0845  3473               	retlw	115	;'s'
  1537     0846  3400               	retlw	0
  1538     0847                     STR_23:
  1539     0847  344D               	retlw	77	;'M'
  1540     0848  346F               	retlw	111	;'o'
  1541     0849  346E               	retlw	110	;'n'
  1542     084A  3469               	retlw	105	;'i'
  1543     084B  3474               	retlw	116	;'t'
  1544     084C  346F               	retlw	111	;'o'
  1545     084D  3472               	retlw	114	;'r'
  1546     084E  3461               	retlw	97	;'a'
  1547     084F  3400               	retlw	0
  1548     0850                     STR_17:
  1549     0850  3425               	retlw	37	;'%'
  1550     0851  3464               	retlw	100	;'d'
  1551     0852  343D               	retlw	61	;'='
  1552     0853  3425               	retlw	37	;'%'
  1553     0854  3464               	retlw	100	;'d'
  1554     0855  342E               	retlw	46	;'.'
  1555     0856  3425               	retlw	37	;'%'
  1556     0857  3464               	retlw	100	;'d'
  1557     0858  3400               	retlw	0
  1558     0859                     STR_12:
  1559     0859  3431               	retlw	49	;'1'
  1560     085A  3420               	retlw	32	;' '
  1561     085B  3473               	retlw	115	;'s'
  1562     085C  3465               	retlw	101	;'e'
  1563     085D  346E               	retlw	110	;'n'
  1564     085E  3473               	retlw	115	;'s'
  1565     085F  346F               	retlw	111	;'o'
  1566     0860  3472               	retlw	114	;'r'
  1567     0861  3400               	retlw	0
  1568     0862                     STR_26:
  1569     0862  344D               	retlw	77	;'M'
  1570     0863  3461               	retlw	97	;'a'
  1571     0864  3478               	retlw	120	;'x'
  1572     0865  342F               	retlw	47	;'/'
  1573     0866  344D               	retlw	77	;'M'
  1574     0867  3469               	retlw	105	;'i'
  1575     0868  346E               	retlw	110	;'n'
  1576     0869  3400               	retlw	0
  1577     086A                     STR_27:
  1578     086A  344C               	retlw	76	;'L'
  1579     086B  3469               	retlw	105	;'i'
  1580     086C  346D               	retlw	109	;'m'
  1581     086D  3470               	retlw	112	;'p'
  1582     086E  3461               	retlw	97	;'a'
  1583     086F  3472               	retlw	114	;'r'
  1584     0870  3400               	retlw	0
  1585     0871                     STR_22:
  1586     0871  3470               	retlw	112	;'p'
  1587     0872  3470               	retlw	112	;'p'
  1588     0873  346D               	retlw	109	;'m'
  1589     0874  343D               	retlw	61	;'='
  1590     0875  3425               	retlw	37	;'%'
  1591     0876  3475               	retlw	117	;'u'
  1592     0877  3400               	retlw	0
  1593     0878                     STR_11:
  1594     0878  3431               	retlw	49	;'1'
  1595     0879  3420               	retlw	32	;' '
  1596     087A  3468               	retlw	104	;'h'
  1597     087B  346F               	retlw	111	;'o'
  1598     087C  3472               	retlw	114	;'r'
  1599     087D  3461               	retlw	97	;'a'
  1600     087E  3400               	retlw	0
  1601     087F                     STR_6:
  1602     087F  3431               	retlw	49	;'1'
  1603     0880  3430               	retlw	48	;'0'
  1604     0881  3420               	retlw	32	;' '
  1605     0882  3473               	retlw	115	;'s'
  1606     0883  3465               	retlw	101	;'e'
  1607     0884  3467               	retlw	103	;'g'
  1608     0885  3400               	retlw	0
  1609     0886                     STR_7:
  1610     0886  3433               	retlw	51	;'3'
  1611     0887  3430               	retlw	48	;'0'
  1612     0888  3420               	retlw	32	;' '
  1613     0889  3473               	retlw	115	;'s'
  1614     088A  3465               	retlw	101	;'e'
  1615     088B  3467               	retlw	103	;'g'
  1616     088C  3400               	retlw	0
  1617     088D                     STR_9:
  1618     088D  3431               	retlw	49	;'1'
  1619     088E  3430               	retlw	48	;'0'
  1620     088F  3420               	retlw	32	;' '
  1621     0890  346D               	retlw	109	;'m'
  1622     0891  3469               	retlw	105	;'i'
  1623     0892  346E               	retlw	110	;'n'
  1624     0893  3400               	retlw	0
  1625     0894                     STR_10:
  1626     0894  3433               	retlw	51	;'3'
  1627     0895  3430               	retlw	48	;'0'
  1628     0896  3420               	retlw	32	;' '
  1629     0897  346D               	retlw	109	;'m'
  1630     0898  3469               	retlw	105	;'i'
  1631     0899  346E               	retlw	110	;'n'
  1632     089A  3400               	retlw	0
  1633     089B                     STR_5:
  1634     089B  3431               	retlw	49	;'1'
  1635     089C  3420               	retlw	32	;' '
  1636     089D  3473               	retlw	115	;'s'
  1637     089E  3465               	retlw	101	;'e'
  1638     089F  3467               	retlw	103	;'g'
  1639     08A0  3400               	retlw	0
  1640     08A1                     STR_8:
  1641     08A1  3431               	retlw	49	;'1'
  1642     08A2  3420               	retlw	32	;' '
  1643     08A3  346D               	retlw	109	;'m'
  1644     08A4  3469               	retlw	105	;'i'
  1645     08A5  346E               	retlw	110	;'n'
  1646     08A6  3400               	retlw	0
  1647     08A7                     STR_1:
  1648     08A7  3474               	retlw	116	;'t'
  1649     08A8  3465               	retlw	101	;'e'
  1650     08A9  3473               	retlw	115	;'s'
  1651     08AA  3474               	retlw	116	;'t'
  1652     08AB  3465               	retlw	101	;'e'
  1653     08AC  3400               	retlw	0
  1654     08AD                     STR_3:
  1655     08AD  344E               	retlw	78	;'N'
  1656     08AE  3400               	retlw	0
  1657     07CA                     
  1658                           	psect	cinit
  1659     0015                     start_initialization:	
  1660                           ; #config settings
  1661                           
  1662     0015                     __initialization:
  1663                           
  1664                           ; Initialize objects allocated to BANK1
  1665     0015  1383               	bcf	3,7	;select IRP bank0
  1666     0016  30E1               	movlw	low (__pdataBANK1+14)
  1667     0017  00FD               	movwf	btemp+-1
  1668     0018  3012               	movlw	high __pidataBANK1
  1669     0019  00FE               	movwf	btemp
  1670     001A  30D4               	movlw	low __pidataBANK1
  1671     001B  00FF               	movwf	btemp+1
  1672     001C  30D3               	movlw	low __pdataBANK1
  1673     001D  0084               	movwf	4
  1674     001E  160A  118A  2308  120A  118A  	fcall	init_ram0
  1675                           
  1676                           ; Clear objects allocated to BANK3
  1677     0023  1783               	bsf	3,7	;select IRP bank2
  1678     0024  3090               	movlw	low __pbssBANK3
  1679     0025  0084               	movwf	4
  1680     0026  30C1               	movlw	low (__pbssBANK3+49)
  1681     0027  160A  118A  22B0  120A  118A  	fcall	clear_ram0
  1682                           
  1683                           ; Clear objects allocated to BANK1
  1684     002C  1383               	bcf	3,7	;select IRP bank0
  1685     002D  30C0               	movlw	low __pbssBANK1
  1686     002E  0084               	movwf	4
  1687     002F  30D3               	movlw	low (__pbssBANK1+19)
  1688     0030  160A  118A  22B0  120A  118A  	fcall	clear_ram0
  1689     0035                     end_of_initialization:	
  1690                           ;End of C runtime variable initialization code
  1691                           
  1692     0035                     __end_of__initialization:
  1693     0035  0183               	clrf	3
  1694     0036  120A  158A  2CA0   	ljmp	_main	;jump to C main() function
  1695                           
  1696                           	psect	bssBANK1
  1697     00C0                     __pbssBANK1:
  1698     00C0                     adcon_mostra@F1474:
  1699     00C0                     	ds	9
  1700     00C9                     _errno:
  1701     00C9                     	ds	2
  1702     00CB                     _gl_item_menu_config_amostra:
  1703     00CB                     	ds	2
  1704     00CD                     handler@count_t0:
  1705     00CD                     	ds	2
  1706     00CF                     _gl_item_menu_config_sensores:
  1707     00CF                     	ds	1
  1708     00D0                     _gl_item_menu_ver_todos:
  1709     00D0                     	ds	1
  1710     00D1                     _gl_item_menu_principal:
  1711     00D1                     	ds	1
  1712     00D2                     _gl_estado:
  1713     00D2                     	ds	1
  1714                           
  1715                           	psect	dataBANK1
  1716     00D3                     __pdataBANK1:
  1717     00D3                     _menu_inicial:
  1718     00D3                     	ds	14
  1719                           
  1720                           	psect	bssBANK3
  1721     0190                     __pbssBANK3:
  1722     0190                     estado_executa_muda@F1404:
  1723     0190                     	ds	17
  1724     01A1                     mq_mostra@F1383:
  1725     01A1                     	ds	16
  1726     01B1                     mq_mostra@F1381:
  1727     01B1                     	ds	16
  1728                           
  1729                           	psect	inittext
  1730     1304                     init_fetch0:	
  1731                           ;	Called with low address in FSR and high address in W
  1732                           
  1733     1304  087E               	movf	btemp,w
  1734     1305  008A               	movwf	10
  1735     1306  087F               	movf	btemp+1,w
  1736     1307  0082               	movwf	2
  1737     1308                     init_ram0:	
  1738                           ;Called with:
  1739                           ;	high address of idata address in btemp 
  1740                           ;	low address of idata address in btemp+1 
  1741                           ;	low address of data in FSR
  1742                           ;	high address + 1 of data in btemp-1
  1743                           
  1744     1308  160A  118A  2304  160A  118A  	fcall	init_fetch0
  1745     130D  0080               	movwf	0
  1746     130E  0A84               	incf	4,f
  1747     130F  0804               	movf	4,w
  1748     1310  067D               	xorwf	btemp+-1,w
  1749     1311  1903               	btfsc	3,2
  1750     1312  3400               	retlw	0
  1751     1313  0AFF               	incf	btemp+1,f
  1752     1314  1903               	btfsc	3,2
  1753     1315  0AFE               	incf	btemp,f
  1754     1316  2B08               	goto	init_ram0
  1755                           
  1756                           	psect	clrtext
  1757     12B0                     clear_ram0:	
  1758                           ;	Called with FSR containing the base address, and
  1759                           ;	W with the last address+1
  1760                           
  1761     12B0  0064               	clrwdt	;clear the watchdog before getting into this loop
  1762     12B1                     clrloop0:
  1763     12B1  0180               	clrf	0	;clear RAM location pointed to by FSR
  1764     12B2  0A84               	incf	4,f	;increment pointer
  1765     12B3  0604               	xorwf	4,w	;XOR with final address
  1766     12B4  1903               	btfsc	3,2	;have we reached the end yet?
  1767     12B5  3400               	retlw	0	;all done for this memory range, return
  1768     12B6  0604               	xorwf	4,w	;XOR again to restore value
  1769     12B7  2AB1               	goto	clrloop0	;do the next byte
  1770                           
  1771                           	psect	cstackBANK3
  1772     01C1                     __pcstackBANK3:
  1773     01C1                     ??__doprnt:
  1774                           
  1775                           ; 1 bytes @ 0x0
  1776     01C1                     	ds	4
  1777     01C5                     __doprnt@prec:
  1778                           
  1779                           ; 1 bytes @ 0x4
  1780     01C5                     	ds	1
  1781     01C6                     __doprnt@flag:
  1782                           
  1783                           ; 1 bytes @ 0x5
  1784     01C6                     	ds	1
  1785     01C7                     __doprnt@val:
  1786                           
  1787                           ; 2 bytes @ 0x6
  1788     01C7                     	ds	2
  1789     01C9                     __doprnt@c:
  1790                           
  1791                           ; 1 bytes @ 0x8
  1792     01C9                     	ds	1
  1793     01CA                     ?_printf:
  1794     01CA                     printf@f:	
  1795                           ; 2 bytes @ 0x9
  1796                           
  1797                           
  1798                           ; 2 bytes @ 0x9
  1799     01CA                     	ds	2
  1800     01CC                     printf@ap:
  1801                           
  1802                           ; 2 bytes @ 0xB
  1803     01CC                     	ds	2
  1804     01CE                     printf@pb:
  1805                           
  1806                           ; 2 bytes @ 0xD
  1807     01CE                     	ds	2
  1808                           
  1809                           	psect	cstackBANK1
  1810     00A0                     __pcstackBANK1:
  1811     00A0                     ??_estado_maquina:
  1812                           
  1813                           ; 1 bytes @ 0x0
  1814     00A0                     	ds	2
  1815     00A2                     estado_maquina@op:
  1816                           
  1817                           ; 1 bytes @ 0x2
  1818     00A2                     	ds	1
  1819     00A3                     ??_handler:
  1820                           
  1821                           ; 1 bytes @ 0x3
  1822     00A3                     	ds	5
  1823     00A8                     handler@tempo_amostra:
  1824                           
  1825                           ; 2 bytes @ 0x8
  1826     00A8                     	ds	2
  1827     00AA                     handler@pos_taxa:
  1828                           
  1829                           ; 2 bytes @ 0xA
  1830     00AA                     	ds	2
  1831     00AC                     handler@option:
  1832                           
  1833                           ; 1 bytes @ 0xC
  1834     00AC                     	ds	1
  1835     00AD                     ??_btns_init:
  1836     00AD                     ??_rs232_init:	
  1837                           ; 1 bytes @ 0xD
  1838                           
  1839     00AD                     ?_lcd_puts:	
  1840                           ; 1 bytes @ 0xD
  1841                           
  1842     00AD                     ??_eeprom_read:	
  1843                           ; 1 bytes @ 0xD
  1844                           
  1845     00AD                     ?_eeprom_write:	
  1846                           ; 1 bytes @ 0xD
  1847                           
  1848     00AD                     ??_adcon_init:	
  1849                           ; 1 bytes @ 0xD
  1850                           
  1851     00AD                     ??_timer0_init:	
  1852                           ; 1 bytes @ 0xD
  1853                           
  1854     00AD                     ?_putch:	
  1855                           ; 1 bytes @ 0xD
  1856                           
  1857     00AD                     ??_lcd_write:	
  1858                           ; 1 bytes @ 0xD
  1859                           
  1860     00AD                     ?___lwdiv:	
  1861                           ; 1 bytes @ 0xD
  1862                           
  1863     00AD                     eeprom_read@addr:	
  1864                           ; 2 bytes @ 0xD
  1865                           
  1866     00AD                     eeprom_write@value:	
  1867                           ; 1 bytes @ 0xD
  1868                           
  1869     00AD                     putch@c:	
  1870                           ; 1 bytes @ 0xD
  1871                           
  1872     00AD                     lcd_puts@str:	
  1873                           ; 1 bytes @ 0xD
  1874                           
  1875     00AD                     ___lwdiv@divisor:	
  1876                           ; 2 bytes @ 0xD
  1877                           
  1878                           
  1879                           ; 2 bytes @ 0xD
  1880     00AD                     	ds	1
  1881     00AE                     ??_eeprom_write:
  1882     00AE                     ??_putch:	
  1883                           ; 1 bytes @ 0xE
  1884                           
  1885     00AE                     lcd_write@c:	
  1886                           ; 1 bytes @ 0xE
  1887                           
  1888     00AE                     eeprom_write@addr:	
  1889                           ; 1 bytes @ 0xE
  1890                           
  1891                           
  1892                           ; 1 bytes @ 0xE
  1893     00AE                     	ds	1
  1894     00AF                     ??_lcd_init:
  1895     00AF                     ??_lcd_puts:	
  1896                           ; 1 bytes @ 0xF
  1897                           
  1898     00AF                     ?_lcd_goto:	
  1899                           ; 1 bytes @ 0xF
  1900                           
  1901     00AF                     ?_eeprom_gravar_word:	
  1902                           ; 1 bytes @ 0xF
  1903                           
  1904     00AF                     lcd_goto@x:	
  1905                           ; 1 bytes @ 0xF
  1906                           
  1907     00AF                     lcd_puts@cmd:	
  1908                           ; 1 bytes @ 0xF
  1909                           
  1910     00AF                     eeprom_gravar_word@dado:	
  1911                           ; 1 bytes @ 0xF
  1912                           
  1913     00AF                     ___lwdiv@dividend:	
  1914                           ; 2 bytes @ 0xF
  1915                           
  1916                           
  1917                           ; 2 bytes @ 0xF
  1918     00AF                     	ds	1
  1919     00B0                     ??_lcd_goto:
  1920                           
  1921                           ; 1 bytes @ 0x10
  1922     00B0                     	ds	1
  1923     00B1                     ??_eeprom_gravar_word:
  1924     00B1                     ??___lwdiv:	
  1925                           ; 1 bytes @ 0x11
  1926                           
  1927     00B1                     eeprom_gravar_word@end:	
  1928                           ; 1 bytes @ 0x11
  1929                           
  1930     00B1                     ___lwdiv@counter:	
  1931                           ; 1 bytes @ 0x11
  1932                           
  1933                           
  1934                           ; 1 bytes @ 0x11
  1935     00B1                     	ds	1
  1936     00B2                     lcd_goto@y:
  1937     00B2                     ___lwdiv@quotient:	
  1938                           ; 1 bytes @ 0x12
  1939                           
  1940                           
  1941                           ; 2 bytes @ 0x12
  1942     00B2                     	ds	2
  1943     00B4                     ?___lwmod:
  1944     00B4                     ___lwmod@divisor:	
  1945                           ; 2 bytes @ 0x14
  1946                           
  1947                           
  1948                           ; 2 bytes @ 0x14
  1949     00B4                     	ds	2
  1950     00B6                     ___lwmod@dividend:
  1951                           
  1952                           ; 2 bytes @ 0x16
  1953     00B6                     	ds	2
  1954     00B8                     ??___lwmod:
  1955     00B8                     ___lwmod@counter:	
  1956                           ; 1 bytes @ 0x18
  1957                           
  1958                           
  1959                           ; 1 bytes @ 0x18
  1960     00B8                     	ds	1
  1961     00B9                     ?__doprnt:
  1962     00B9                     __doprnt@pb:	
  1963                           ; 2 bytes @ 0x19
  1964                           
  1965                           
  1966                           ; 2 bytes @ 0x19
  1967     00B9                     	ds	2
  1968     00BB                     __doprnt@f:
  1969                           
  1970                           ; 2 bytes @ 0x1B
  1971     00BB                     	ds	2
  1972     00BD                     __doprnt@ap:
  1973                           
  1974                           ; 2 bytes @ 0x1D
  1975     00BD                     	ds	2
  1976     00BF                     ??_printf:
  1977     00BF                     ??_main:	
  1978                           ; 1 bytes @ 0x1F
  1979                           
  1980     00BF                     main@i:	
  1981                           ; 1 bytes @ 0x1F
  1982                           
  1983                           
  1984                           ; 1 bytes @ 0x1F
  1985     00BF                     	ds	1
  1986                           
  1987                           	psect	cstackCOMMON
  1988     0070                     __pcstackCOMMON:
  1989     0070                     ?_btns_init:
  1990     0070                     ?_rs232_init:	
  1991                           ; 1 bytes @ 0x0
  1992                           
  1993     0070                     ?_lcd_init:	
  1994                           ; 1 bytes @ 0x0
  1995                           
  1996     0070                     ?_eeprom_read:	
  1997                           ; 1 bytes @ 0x0
  1998                           
  1999     0070                     ?_adcon_init:	
  2000                           ; 1 bytes @ 0x0
  2001                           
  2002     0070                     ?_timer0_init:	
  2003                           ; 1 bytes @ 0x0
  2004                           
  2005     0070                     ?_rs232_transmite:	
  2006                           ; 1 bytes @ 0x0
  2007                           
  2008     0070                     ?_adcon_captura_grava:	
  2009                           ; 1 bytes @ 0x0
  2010                           
  2011     0070                     ?_estado_maquina:	
  2012                           ; 1 bytes @ 0x0
  2013                           
  2014     0070                     ?_estado_inicial:	
  2015                           ; 1 bytes @ 0x0
  2016                           
  2017     0070                     ?_estado_menu_principal:	
  2018                           ; 1 bytes @ 0x0
  2019                           
  2020     0070                     ?_estado_captura_mostra:	
  2021                           ; 1 bytes @ 0x0
  2022                           
  2023     0070                     ?_estado_ver_todos:	
  2024                           ; 1 bytes @ 0x0
  2025                           
  2026     0070                     ?_estado_max_min:	
  2027                           ; 1 bytes @ 0x0
  2028                           
  2029     0070                     ?_estado_menu_limpar:	
  2030                           ; 1 bytes @ 0x0
  2031                           
  2032     0070                     ?_estado_menu_conf_tempo_amostra:	
  2033                           ; 1 bytes @ 0x0
  2034                           
  2035     0070                     ?_estado_menu_conf_quant_sensores:	
  2036                           ; 1 bytes @ 0x0
  2037                           
  2038     0070                     ?_estado_executa_muda:	
  2039                           ; 1 bytes @ 0x0
  2040                           
  2041     0070                     ?_lcd_write:	
  2042                           ; 1 bytes @ 0x0
  2043                           
  2044     0070                     ?_lcd_clear:	
  2045                           ; 1 bytes @ 0x0
  2046                           
  2047     0070                     ?_btns_testa:	
  2048                           ; 1 bytes @ 0x0
  2049                           
  2050     0070                     ??_btns_testa:	
  2051                           ; 1 bytes @ 0x0
  2052                           
  2053     0070                     ?_handler:	
  2054                           ; 1 bytes @ 0x0
  2055                           
  2056     0070                     ?___bmul:	
  2057                           ; 1 bytes @ 0x0
  2058                           
  2059     0070                     ?i1_lcd_write:	
  2060                           ; 1 bytes @ 0x0
  2061                           
  2062     0070                     ??i1_lcd_write:	
  2063                           ; 1 bytes @ 0x0
  2064                           
  2065     0070                     ?i1_eeprom_read:	
  2066                           ; 1 bytes @ 0x0
  2067                           
  2068     0070                     ??i1_eeprom_read:	
  2069                           ; 1 bytes @ 0x0
  2070                           
  2071     0070                     ?i1_eeprom_write:	
  2072                           ; 1 bytes @ 0x0
  2073                           
  2074     0070                     ?i1_putch:	
  2075                           ; 1 bytes @ 0x0
  2076                           
  2077     0070                     ?_adcon_ler_canal:	
  2078                           ; 1 bytes @ 0x0
  2079                           
  2080     0070                     ?_main:	
  2081                           ; 2 bytes @ 0x0
  2082                           
  2083     0070                     ?___awdiv:	
  2084                           ; 2 bytes @ 0x0
  2085                           
  2086     0070                     ?___awmod:	
  2087                           ; 2 bytes @ 0x0
  2088                           
  2089     0070                     ?i1___lwdiv:	
  2090                           ; 2 bytes @ 0x0
  2091                           
  2092     0070                     estado_inicial@opt:	
  2093                           ; 2 bytes @ 0x0
  2094                           
  2095     0070                     ___bmul@multiplicand:	
  2096                           ; 1 bytes @ 0x0
  2097                           
  2098     0070                     i1eeprom_read@addr:	
  2099                           ; 1 bytes @ 0x0
  2100                           
  2101     0070                     i1eeprom_write@value:	
  2102                           ; 1 bytes @ 0x0
  2103                           
  2104     0070                     i1putch@c:	
  2105                           ; 1 bytes @ 0x0
  2106                           
  2107     0070                     ___awdiv@divisor:	
  2108                           ; 1 bytes @ 0x0
  2109                           
  2110     0070                     ___awmod@divisor:	
  2111                           ; 2 bytes @ 0x0
  2112                           
  2113     0070                     i1___lwdiv@divisor:	
  2114                           ; 2 bytes @ 0x0
  2115                           
  2116                           
  2117                           ; 2 bytes @ 0x0
  2118     0070                     	ds	1
  2119     0071                     ??___bmul:
  2120     0071                     ?___lbdiv:	
  2121                           ; 1 bytes @ 0x1
  2122                           
  2123     0071                     ??i1_eeprom_write:	
  2124                           ; 1 bytes @ 0x1
  2125                           
  2126     0071                     ??i1_putch:	
  2127                           ; 1 bytes @ 0x1
  2128                           
  2129     0071                     ?_eeprom_ler_word:	
  2130                           ; 1 bytes @ 0x1
  2131                           
  2132     0071                     ___bmul@product:	
  2133                           ; 2 bytes @ 0x1
  2134                           
  2135     0071                     ___lbdiv@divisor:	
  2136                           ; 1 bytes @ 0x1
  2137                           
  2138     0071                     i1lcd_write@c:	
  2139                           ; 1 bytes @ 0x1
  2140                           
  2141     0071                     i1eeprom_write@addr:	
  2142                           ; 1 bytes @ 0x1
  2143                           
  2144                           
  2145                           ; 1 bytes @ 0x1
  2146     0071                     	ds	1
  2147     0072                     ??_adcon_ler_canal:
  2148     0072                     ??_lcd_clear:	
  2149                           ; 1 bytes @ 0x2
  2150                           
  2151     0072                     ??___lbdiv:	
  2152                           ; 1 bytes @ 0x2
  2153                           
  2154     0072                     ?i1_lcd_goto:	
  2155                           ; 1 bytes @ 0x2
  2156                           
  2157     0072                     ?i1_eeprom_gravar_word:	
  2158                           ; 1 bytes @ 0x2
  2159                           
  2160     0072                     ___bmul@multiplier:	
  2161                           ; 1 bytes @ 0x2
  2162                           
  2163     0072                     ___lbdiv@dividend:	
  2164                           ; 1 bytes @ 0x2
  2165                           
  2166     0072                     i1lcd_goto@x:	
  2167                           ; 1 bytes @ 0x2
  2168                           
  2169     0072                     ___awdiv@dividend:	
  2170                           ; 1 bytes @ 0x2
  2171                           
  2172     0072                     ___awmod@dividend:	
  2173                           ; 2 bytes @ 0x2
  2174                           
  2175     0072                     i1eeprom_gravar_word@dado:	
  2176                           ; 2 bytes @ 0x2
  2177                           
  2178     0072                     i1___lwdiv@dividend:	
  2179                           ; 2 bytes @ 0x2
  2180                           
  2181                           
  2182                           ; 2 bytes @ 0x2
  2183     0072                     	ds	1
  2184     0073                     ??_rs232_transmite:
  2185     0073                     ??_eeprom_ler_word:	
  2186                           ; 1 bytes @ 0x3
  2187                           
  2188     0073                     ??i1_lcd_goto:	
  2189                           ; 1 bytes @ 0x3
  2190                           
  2191     0073                     ?i1_lcd_puts:	
  2192                           ; 1 bytes @ 0x3
  2193                           
  2194     0073                     ___lbdiv@counter:	
  2195                           ; 1 bytes @ 0x3
  2196                           
  2197     0073                     i1lcd_puts@str:	
  2198                           ; 1 bytes @ 0x3
  2199                           
  2200                           
  2201                           ; 2 bytes @ 0x3
  2202     0073                     	ds	1
  2203     0074                     ??___awdiv:
  2204     0074                     ??___awmod:	
  2205                           ; 1 bytes @ 0x4
  2206                           
  2207     0074                     ??i1_eeprom_gravar_word:	
  2208                           ; 1 bytes @ 0x4
  2209                           
  2210     0074                     ??i1___lwdiv:	
  2211                           ; 1 bytes @ 0x4
  2212                           
  2213     0074                     ___awdiv@counter:	
  2214                           ; 1 bytes @ 0x4
  2215                           
  2216     0074                     ___awmod@counter:	
  2217                           ; 1 bytes @ 0x4
  2218                           
  2219     0074                     ___lbdiv@quotient:	
  2220                           ; 1 bytes @ 0x4
  2221                           
  2222     0074                     i1eeprom_gravar_word@end:	
  2223                           ; 1 bytes @ 0x4
  2224                           
  2225     0074                     i1___lwdiv@counter:	
  2226                           ; 1 bytes @ 0x4
  2227                           
  2228                           
  2229                           ; 1 bytes @ 0x4
  2230     0074                     	ds	1
  2231     0075                     ??i1_lcd_puts:
  2232     0075                     eeprom_ler_word@end:	
  2233                           ; 1 bytes @ 0x5
  2234                           
  2235     0075                     rs232_transmite@qtd_val:	
  2236                           ; 1 bytes @ 0x5
  2237                           
  2238     0075                     ___awdiv@sign:	
  2239                           ; 1 bytes @ 0x5
  2240                           
  2241     0075                     ___awmod@sign:	
  2242                           ; 1 bytes @ 0x5
  2243                           
  2244     0075                     i1lcd_goto@y:	
  2245                           ; 1 bytes @ 0x5
  2246                           
  2247     0075                     i1lcd_puts@cmd:	
  2248                           ; 1 bytes @ 0x5
  2249                           
  2250     0075                     i1___lwdiv@quotient:	
  2251                           ; 1 bytes @ 0x5
  2252                           
  2253                           
  2254                           ; 2 bytes @ 0x5
  2255     0075                     	ds	1
  2256     0076                     adcon_ler_canal@cnl:
  2257     0076                     rs232_transmite@qtd_sens:	
  2258                           ; 1 bytes @ 0x6
  2259                           
  2260     0076                     eeprom_ler_word@temp_int:	
  2261                           ; 1 bytes @ 0x6
  2262                           
  2263     0076                     ___awdiv@quotient:	
  2264                           ; 2 bytes @ 0x6
  2265                           
  2266                           
  2267                           ; 2 bytes @ 0x6
  2268     0076                     	ds	1
  2269     0077                     ?i1___lwmod:
  2270     0077                     rs232_transmite@qtd_bytes:	
  2271                           ; 2 bytes @ 0x7
  2272                           
  2273     0077                     i1___lwmod@divisor:	
  2274                           ; 1 bytes @ 0x7
  2275                           
  2276     0077                     adcon_ler_canal@acc:	
  2277                           ; 2 bytes @ 0x7
  2278                           
  2279                           
  2280                           ; 4 bytes @ 0x7
  2281     0077                     	ds	1
  2282     0078                     ?_div:
  2283     0078                     rs232_transmite@x:	
  2284                           ; 4 bytes @ 0x8
  2285                           
  2286     0078                     div@number:	
  2287                           ; 1 bytes @ 0x8
  2288                           
  2289                           
  2290                           ; 2 bytes @ 0x8
  2291     0078                     	ds	1
  2292     0079                     rs232_transmite@i:
  2293     0079                     i1___lwmod@dividend:	
  2294                           ; 1 bytes @ 0x9
  2295                           
  2296                           
  2297                           ; 2 bytes @ 0x9
  2298     0079                     	ds	1
  2299     007A                     div@denom:
  2300                           
  2301                           ; 2 bytes @ 0xA
  2302     007A                     	ds	1
  2303     007B                     ??i1___lwmod:
  2304     007B                     i1___lwmod@counter:	
  2305                           ; 1 bytes @ 0xB
  2306                           
  2307     007B                     adcon_ler_canal@i:	
  2308                           ; 1 bytes @ 0xB
  2309                           
  2310                           
  2311                           ; 2 bytes @ 0xB
  2312     007B                     	ds	1
  2313     007C                     ??_div:
  2314     007C                     ??_sprintf:	
  2315                           ; 1 bytes @ 0xC
  2316                           
  2317     007C                     ??_estado_inicial:	
  2318                           ; 1 bytes @ 0xC
  2319                           
  2320     007C                     ??_estado_captura_mostra:	
  2321                           ; 1 bytes @ 0xC
  2322                           
  2323     007C                     ??_estado_ver_todos:	
  2324                           ; 1 bytes @ 0xC
  2325                           
  2326     007C                     ??_estado_max_min:	
  2327                           ; 1 bytes @ 0xC
  2328                           
  2329     007C                     ??_estado_menu_limpar:	
  2330                           ; 1 bytes @ 0xC
  2331                           
  2332     007C                     ??_estado_menu_conf_tempo_amostra:	
  2333                           ; 1 bytes @ 0xC
  2334                           
  2335     007C                     ??_estado_menu_conf_quant_sensores:	
  2336                           ; 1 bytes @ 0xC
  2337                           
  2338     007C                     estado_menu_limpar@opt:	
  2339                           ; 1 bytes @ 0xC
  2340                           
  2341     007C                     estado_captura_mostra@opt:	
  2342                           ; 1 bytes @ 0xC
  2343                           
  2344     007C                     estado_max_min@opt:	
  2345                           ; 1 bytes @ 0xC
  2346                           
  2347                           
  2348                           ; 1 bytes @ 0xC
  2349     007C                     	ds	1
  2350     007D                     ??_adcon_captura_grava:
  2351                           
  2352                           ; 1 bytes @ 0xD
  2353     007D                     	ds	1
  2354                           
  2355                           	psect	cstackBANK0
  2356     0020                     __pcstackBANK0:
  2357     0020                     ?i1__doprnt:
  2358     0020                     i1__doprnt@pb:	
  2359                           ; 2 bytes @ 0x0
  2360                           
  2361     0020                     div@rv:	
  2362                           ; 2 bytes @ 0x0
  2363                           
  2364                           
  2365                           ; 4 bytes @ 0x0
  2366     0020                     	ds	2
  2367     0022                     i1__doprnt@f:
  2368                           
  2369                           ; 2 bytes @ 0x2
  2370     0022                     	ds	2
  2371     0024                     i1__doprnt@ap:
  2372                           
  2373                           ; 2 bytes @ 0x4
  2374     0024                     	ds	2
  2375     0026                     ??i1__doprnt:
  2376                           
  2377                           ; 1 bytes @ 0x6
  2378     0026                     	ds	4
  2379     002A                     i1__doprnt@prec:
  2380                           
  2381                           ; 1 bytes @ 0xA
  2382     002A                     	ds	1
  2383     002B                     i1__doprnt@flag:
  2384                           
  2385                           ; 1 bytes @ 0xB
  2386     002B                     	ds	1
  2387     002C                     i1__doprnt@val:
  2388                           
  2389                           ; 2 bytes @ 0xC
  2390     002C                     	ds	2
  2391     002E                     i1__doprnt@c:
  2392                           
  2393                           ; 1 bytes @ 0xE
  2394     002E                     	ds	1
  2395     002F                     ?_sprintf:
  2396     002F                     sprintf@f:	
  2397                           ; 2 bytes @ 0xF
  2398                           
  2399                           
  2400                           ; 2 bytes @ 0xF
  2401     002F                     	ds	8
  2402     0037                     sprintf@wh:
  2403                           
  2404                           ; 1 bytes @ 0x17
  2405     0037                     	ds	1
  2406     0038                     sprintf@ap:
  2407                           
  2408                           ; 2 bytes @ 0x18
  2409     0038                     	ds	2
  2410     003A                     sprintf@pb:
  2411                           
  2412                           ; 2 bytes @ 0x1A
  2413     003A                     	ds	2
  2414     003C                     ?_adcon_mostra:
  2415     003C                     ??_estado_executa_muda:	
  2416                           ; 1 bytes @ 0x1C
  2417                           
  2418     003C                     adcon_mostra@t_int:	
  2419                           ; 1 bytes @ 0x1C
  2420                           
  2421                           
  2422                           ; 2 bytes @ 0x1C
  2423     003C                     	ds	2
  2424     003E                     adcon_mostra@i:
  2425                           
  2426                           ; 1 bytes @ 0x1E
  2427     003E                     	ds	1
  2428     003F                     ??_adcon_mostra:
  2429                           
  2430                           ; 1 bytes @ 0x1F
  2431     003F                     	ds	1
  2432     0040                     estado_executa_muda@tmp:
  2433                           
  2434                           ; 17 bytes @ 0x20
  2435     0040                     	ds	3
  2436     0043                     adcon_mostra@temp_str:
  2437                           
  2438                           ; 9 bytes @ 0x23
  2439     0043                     	ds	9
  2440     004C                     adcon_mostra@temp_div:
  2441                           
  2442                           ; 4 bytes @ 0x2C
  2443     004C                     	ds	4
  2444     0050                     adcon_captura_grava@maior:
  2445                           
  2446                           ; 2 bytes @ 0x30
  2447     0050                     	ds	1
  2448     0051                     estado_executa_muda@qtd_val:
  2449                           
  2450                           ; 1 bytes @ 0x31
  2451     0051                     	ds	1
  2452     0052                     estado_executa_muda@posicao:
  2453     0052                     adcon_captura_grava@menor:	
  2454                           ; 1 bytes @ 0x32
  2455                           
  2456                           
  2457                           ; 2 bytes @ 0x32
  2458     0052                     	ds	1
  2459     0053                     estado_executa_muda@novo_estado:
  2460                           
  2461                           ; 1 bytes @ 0x33
  2462     0053                     	ds	1
  2463     0054                     adcon_captura_grava@x:
  2464     0054                     estado_executa_muda@temp_int:	
  2465                           ; 2 bytes @ 0x34
  2466                           
  2467                           
  2468                           ; 2 bytes @ 0x34
  2469     0054                     	ds	2
  2470     0056                     adcon_captura_grava@posicao:
  2471     0056                     estado_executa_muda@qtd_sens:	
  2472                           ; 1 bytes @ 0x36
  2473                           
  2474                           
  2475                           ; 1 bytes @ 0x36
  2476     0056                     	ds	1
  2477     0057                     adcon_captura_grava@qtd_sens:
  2478     0057                     estado_executa_muda@endereco:	
  2479                           ; 1 bytes @ 0x37
  2480                           
  2481                           
  2482                           ; 1 bytes @ 0x37
  2483     0057                     	ds	1
  2484     0058                     adcon_captura_grava@qtd_val:
  2485     0058                     estado_executa_muda@maior:	
  2486                           ; 1 bytes @ 0x38
  2487                           
  2488                           
  2489                           ; 2 bytes @ 0x38
  2490     0058                     	ds	1
  2491     0059                     adcon_captura_grava@i:
  2492                           
  2493                           ; 1 bytes @ 0x39
  2494     0059                     	ds	1
  2495     005A                     adcon_captura_grava@i_646:
  2496     005A                     estado_executa_muda@menor:	
  2497                           ; 1 bytes @ 0x3A
  2498                           
  2499                           
  2500                           ; 2 bytes @ 0x3A
  2501     005A                     	ds	1
  2502     005B                     adcon_captura_grava@t_int:
  2503                           
  2504                           ; 2 bytes @ 0x3B
  2505     005B                     	ds	1
  2506     005C                     estado_executa_muda@i_947:
  2507                           
  2508                           ; 1 bytes @ 0x3C
  2509     005C                     	ds	1
  2510     005D                     _estado_executa_muda$1887:
  2511                           
  2512                           ; 2 bytes @ 0x3D
  2513     005D                     	ds	2
  2514     005F                     _estado_executa_muda$1888:
  2515                           
  2516                           ; 2 bytes @ 0x3F
  2517     005F                     	ds	2
  2518     0061                     estado_executa_muda@i:
  2519                           
  2520                           ; 1 bytes @ 0x41
  2521     0061                     	ds	1
  2522     0062                     ??_estado_menu_principal:
  2523     0062                     estado_ver_todos@opt:	
  2524                           ; 1 bytes @ 0x42
  2525                           
  2526     0062                     estado_menu_conf_tempo_amostra@opt:	
  2527                           ; 1 bytes @ 0x42
  2528                           
  2529     0062                     estado_menu_conf_quant_sensores@opt:	
  2530                           ; 1 bytes @ 0x42
  2531                           
  2532                           
  2533                           ; 1 bytes @ 0x42
  2534     0062                     	ds	2
  2535     0064                     estado_menu_principal@opt:
  2536                           
  2537                           ; 1 bytes @ 0x44
  2538     0064                     	ds	1
  2539     0065                     estado_menu_principal@maior:
  2540                           
  2541                           ; 2 bytes @ 0x45
  2542     0065                     	ds	2
  2543     0067                     estado_menu_principal@menor:
  2544                           
  2545                           ; 2 bytes @ 0x47
  2546     0067                     	ds	2
  2547     0069                     estado_menu_principal@posicao:
  2548                           
  2549                           ; 1 bytes @ 0x49
  2550     0069                     	ds	1
  2551     006A                     estado_menu_principal@qtd_sens:
  2552                           
  2553                           ; 1 bytes @ 0x4A
  2554     006A                     	ds	1
  2555     006B                     estado_menu_principal@qtd_val:
  2556                           
  2557                           ; 1 bytes @ 0x4B
  2558     006B                     	ds	1
  2559     006C                     estado_menu_principal@i:
  2560                           
  2561                           ; 1 bytes @ 0x4C
  2562     006C                     	ds	1
  2563     006D                     estado_menu_principal@i_918:
  2564                           
  2565                           ; 1 bytes @ 0x4D
  2566     006D                     	ds	1
  2567     006E                     estado_menu_principal@t_int:
  2568                           
  2569                           ; 2 bytes @ 0x4E
  2570     006E                     	ds	2
  2571                           
  2572                           	psect	maintext
  2573     0CA0                     __pmaintext:	
  2574 ;;
  2575 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2576 ;;
  2577 ;; *************** function _main *****************
  2578 ;; Defined at:
  2579 ;;		line 41 in file "main.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;		None
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;  i               1   31[BANK1 ] unsigned char 
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  2   36[None  ] int 
  2586 ;; Registers used:
  2587 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2588 ;; Tracked objects:
  2589 ;;		On entry : B00/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2593 ;;      Params:         0       0       0       0       0
  2594 ;;      Locals:         0       0       1       0       0
  2595 ;;      Temps:          0       0       0       0       0
  2596 ;;      Totals:         0       0       1       0       0
  2597 ;;Total ram usage:        1 bytes
  2598 ;; Hardware stack levels required when called: 10
  2599 ;; This function calls:
  2600 ;;		_adcon_init
  2601 ;;		_btns_init
  2602 ;;		_eeprom_gravar_word
  2603 ;;		_eeprom_read
  2604 ;;		_eeprom_write
  2605 ;;		_lcd_goto
  2606 ;;		_lcd_init
  2607 ;;		_lcd_puts
  2608 ;;		_printf
  2609 ;;		_rs232_init
  2610 ;;		_timer0_init
  2611 ;; This function is called by:
  2612 ;;		Startup code after reset
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616     0CA0                     _main:	
  2617                           ;psect for function _main
  2618                           
  2619     0CA0                     l8445:	
  2620                           ;incstack = 0
  2621 ;; hardware stack exceeded
  2622                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2623                           
  2624                           
  2625                           ;main.c: 43:     TXSTAbits.TXEN = 1;
  2626     0CA0  1683               	bsf	3,5	;RP0=1, select bank1
  2627     0CA1  1303               	bcf	3,6	;RP1=0, select bank1
  2628     0CA2  1698               	bsf	24,5	;volatile
  2629                           
  2630                           ;main.c: 44:     RCSTAbits.SPEN = 1;
  2631     0CA3  1283               	bcf	3,5	;RP0=0, select bank0
  2632     0CA4  1303               	bcf	3,6	;RP1=0, select bank0
  2633     0CA5  1798               	bsf	24,7	;volatile
  2634     0CA6                     l8447:
  2635                           
  2636                           ;main.c: 49:     btns_init();
  2637     0CA6  160A  118A  254B  120A  158A  	fcall	_btns_init
  2638                           
  2639                           ;main.c: 50:     rs232_init();
  2640     0CAB  160A  118A  2375  120A  158A  	fcall	_rs232_init
  2641                           
  2642                           ;main.c: 51:     lcd_init();
  2643     0CB0  160A  118A  2625  120A  158A  	fcall	_lcd_init
  2644     0CB5                     l8449:
  2645                           
  2646                           ;main.c: 53:     printf("teste");
  2647     0CB5  30A7               	movlw	low (STR_1| (0+32768))
  2648     0CB6  1683               	bsf	3,5	;RP0=1, select bank3
  2649     0CB7  1703               	bsf	3,6	;RP1=1, select bank3
  2650     0CB8  00CA               	movwf	printf@f^(0+384)
  2651     0CB9  3088               	movlw	high (STR_1| (0+32768))
  2652     0CBA  00CB               	movwf	(printf@f^(0+384)+1)
  2653     0CBB  160A  118A  23CD  120A  158A  	fcall	_printf
  2654     0CC0                     l8451:
  2655                           
  2656                           ;main.c: 55:     lcd_puts("Inicio v1.53-");
  2657     0CC0  30D8               	movlw	low (STR_2| (0+32768))
  2658     0CC1  1683               	bsf	3,5	;RP0=1, select bank1
  2659     0CC2  1303               	bcf	3,6	;RP1=0, select bank1
  2660     0CC3  00AD               	movwf	lcd_puts@str^(0+128)
  2661     0CC4  3087               	movlw	high (STR_2| (0+32768))
  2662     0CC5  00AE               	movwf	(lcd_puts@str^(0+128)+1)
  2663     0CC6  160A  118A  2721  120A  158A  	fcall	_lcd_puts
  2664     0CCB                     l8453:
  2665                           
  2666                           ;main.c: 58:     lcd_puts("N");
  2667     0CCB  30AD               	movlw	low (STR_3| (0+32768))
  2668     0CCC  1683               	bsf	3,5	;RP0=1, select bank1
  2669     0CCD  1303               	bcf	3,6	;RP1=0, select bank1
  2670     0CCE  00AD               	movwf	lcd_puts@str^(0+128)
  2671     0CCF  3088               	movlw	high (STR_3| (0+32768))
  2672     0CD0  00AE               	movwf	(lcd_puts@str^(0+128)+1)
  2673     0CD1  160A  118A  2721  120A  158A  	fcall	_lcd_puts
  2674     0CD6                     l8455:
  2675                           
  2676                           ;main.c: 70:     lcd_goto(2, 0);
  2677     0CD6  1683               	bsf	3,5	;RP0=1, select bank1
  2678     0CD7  1303               	bcf	3,6	;RP1=0, select bank1
  2679     0CD8  01AF               	clrf	lcd_goto@x^(0+128)
  2680     0CD9  3002               	movlw	2
  2681     0CDA  160A  118A  25B4  120A  158A  	fcall	_lcd_goto
  2682     0CDF                     l8457:
  2683                           
  2684                           ;main.c: 71:     lcd_puts("21/08/2023");
  2685     0CDF  301E               	movlw	low (STR_4| (0+32768))
  2686     0CE0  1683               	bsf	3,5	;RP0=1, select bank1
  2687     0CE1  1303               	bcf	3,6	;RP1=0, select bank1
  2688     0CE2  00AD               	movwf	lcd_puts@str^(0+128)
  2689     0CE3  3088               	movlw	high (STR_4| (0+32768))
  2690     0CE4  00AE               	movwf	(lcd_puts@str^(0+128)+1)
  2691     0CE5  160A  118A  2721  120A  158A  	fcall	_lcd_puts
  2692     0CEA                     l8459:
  2693                           
  2694                           ;main.c: 77:     if (eeprom_read(0x0c) != 93) {
  2695     0CEA  300C               	movlw	12
  2696     0CEB  160A  118A  238E  120A  158A  	fcall	_eeprom_read
  2697     0CF0  3A5D               	xorlw	93
  2698     0CF1  1903               	skipnz
  2699     0CF2  2CF4               	goto	u8371
  2700     0CF3  2CF5               	goto	u8370
  2701     0CF4                     u8371:
  2702     0CF4  2D48               	goto	l8477
  2703     0CF5                     u8370:
  2704     0CF5                     l8461:
  2705                           
  2706                           ;main.c: 78:         eeprom_write(0x08, 0);
  2707     0CF5  1683               	bsf	3,5	;RP0=1, select bank1
  2708     0CF6  1303               	bcf	3,6	;RP1=0, select bank1
  2709     0CF7  01AD               	clrf	eeprom_write@value^(0+128)
  2710     0CF8  3008               	movlw	8
  2711     0CF9  160A  118A  257F  120A  158A  	fcall	_eeprom_write
  2712                           
  2713                           ;main.c: 79:         eeprom_write(0x00, 0);
  2714     0CFE  1683               	bsf	3,5	;RP0=1, select bank1
  2715     0CFF  1303               	bcf	3,6	;RP1=0, select bank1
  2716     0D00  01AD               	clrf	eeprom_write@value^(0+128)
  2717     0D01  3000               	movlw	0
  2718     0D02  160A  118A  257F  120A  158A  	fcall	_eeprom_write
  2719                           
  2720                           ;main.c: 80:         eeprom_gravar_word(0x02, 0);
  2721     0D07  3000               	movlw	0
  2722     0D08  1683               	bsf	3,5	;RP0=1, select bank1
  2723     0D09  1303               	bcf	3,6	;RP1=0, select bank1
  2724     0D0A  00AF               	movwf	eeprom_gravar_word@dado^(0+128)
  2725     0D0B  00B0               	movwf	(eeprom_gravar_word@dado+1)^(0+128)
  2726     0D0C  3002               	movlw	2
  2727     0D0D  120A  118A  26E8  120A  158A  	fcall	_eeprom_gravar_word
  2728                           
  2729                           ;main.c: 81:         eeprom_gravar_word(0x04, 0xffff);
  2730     0D12  30FF               	movlw	255
  2731     0D13  1683               	bsf	3,5	;RP0=1, select bank1
  2732     0D14  1303               	bcf	3,6	;RP1=0, select bank1
  2733     0D15  00AF               	movwf	eeprom_gravar_word@dado^(0+128)
  2734     0D16  30FF               	movlw	255
  2735     0D17  00B0               	movwf	(eeprom_gravar_word@dado^(0+128)+1)
  2736     0D18  3004               	movlw	4
  2737     0D19  120A  118A  26E8  120A  158A  	fcall	_eeprom_gravar_word
  2738                           
  2739                           ;main.c: 82:         eeprom_gravar_word(0x06, 0);
  2740     0D1E  3000               	movlw	0
  2741     0D1F  1683               	bsf	3,5	;RP0=1, select bank1
  2742     0D20  1303               	bcf	3,6	;RP1=0, select bank1
  2743     0D21  00AF               	movwf	eeprom_gravar_word@dado^(0+128)
  2744     0D22  00B0               	movwf	(eeprom_gravar_word@dado+1)^(0+128)
  2745     0D23  3006               	movlw	6
  2746     0D24  120A  118A  26E8  120A  158A  	fcall	_eeprom_gravar_word
  2747     0D29                     l8463:
  2748                           
  2749                           ;main.c: 84:         for (uint8_t i = 0; i < 100 * 2; i++) {
  2750     0D29  1683               	bsf	3,5	;RP0=1, select bank1
  2751     0D2A  1303               	bcf	3,6	;RP1=0, select bank1
  2752     0D2B  01BF               	clrf	main@i^(0+128)
  2753     0D2C                     l8469:
  2754                           
  2755                           ;main.c: 85:             eeprom_write(i + 0x0e, 0);
  2756     0D2C  01AD               	clrf	eeprom_write@value^(0+128)
  2757     0D2D  083F               	movf	main@i^(0+128),w
  2758     0D2E  3E0E               	addlw	14
  2759     0D2F  160A  118A  257F  120A  158A  	fcall	_eeprom_write
  2760     0D34                     l8471:
  2761                           
  2762                           ;main.c: 86:         }
  2763     0D34  3001               	movlw	1
  2764     0D35  00FF               	movwf	btemp+1
  2765     0D36  087F               	movf	btemp+1,w
  2766     0D37  1683               	bsf	3,5	;RP0=1, select bank1
  2767     0D38  1303               	bcf	3,6	;RP1=0, select bank1
  2768     0D39  07BF               	addwf	main@i^(0+128),f
  2769     0D3A                     l8473:
  2770     0D3A  30C8               	movlw	200
  2771     0D3B  023F               	subwf	main@i^(0+128),w
  2772     0D3C  1C03               	skipc
  2773     0D3D  2D3F               	goto	u8381
  2774     0D3E  2D40               	goto	u8380
  2775     0D3F                     u8381:
  2776     0D3F  2D2C               	goto	l8469
  2777     0D40                     u8380:
  2778     0D40                     l8475:
  2779                           
  2780                           ;main.c: 92:         eeprom_write(0x0c, 93);
  2781     0D40  305D               	movlw	93
  2782     0D41  00AD               	movwf	eeprom_write@value^(0+128)
  2783     0D42  300C               	movlw	12
  2784     0D43  160A  118A  257F  120A  158A  	fcall	_eeprom_write
  2785     0D48                     l8477:	
  2786                           ;main.c: 93:     } else {
  2787                           
  2788                           
  2789                           ;main.c: 98:     adcon_init();
  2790     0D48  160A  118A  235C  120A  158A  	fcall	_adcon_init
  2791                           
  2792                           ;main.c: 100:     timer0_init();
  2793     0D4D  120A  158A  20AF  120A  158A  	fcall	_timer0_init
  2794     0D52                     l8479:
  2795                           
  2796                           ;main.c: 104:     INTCONbits.GIE = 1;
  2797     0D52  178B               	bsf	11,7	;volatile
  2798     0D53                     l41:	
  2799                           ;main.c: 106:     while (1) {
  2800                           
  2801     0D53                     l42:	
  2802                           ;main.c: 117:     }
  2803                           
  2804     0D53  2D53               	goto	l41
  2805     0D54  120A  118A  2812   	ljmp	start
  2806     0D57                     __end_of_main:
  2807                           
  2808                           	psect	text1
  2809     08AF                     __ptext1:	
  2810 ;; *************** function _timer0_init *****************
  2811 ;; Defined at:
  2812 ;;		line 7 in file "timer.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;		None
  2815 ;; Auto vars:     Size  Location     Type
  2816 ;;		None
  2817 ;; Return value:  Size  Location     Type
  2818 ;;                  1    wreg      void 
  2819 ;; Registers used:
  2820 ;;		wreg, status,2, status,0
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2826 ;;      Params:         0       0       0       0       0
  2827 ;;      Locals:         0       0       0       0       0
  2828 ;;      Temps:          0       0       0       0       0
  2829 ;;      Totals:         0       0       0       0       0
  2830 ;;Total ram usage:        0 bytes
  2831 ;; Hardware stack levels used: 1
  2832 ;; Hardware stack levels required when called: 7
  2833 ;; This function calls:
  2834 ;;		Nothing
  2835 ;; This function is called by:
  2836 ;;		_main
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           
  2840     08AF                     _timer0_init:	
  2841                           ;psect for function _timer0_init
  2842                           
  2843     08AF                     l7073:	
  2844                           ;incstack = 0
  2845                           ; Regs used in _timer0_init: [wreg+status,2+status,0]
  2846                           
  2847                           
  2848                           ;timer.c: 21:     TMR0 = 39;
  2849     08AF  3027               	movlw	39
  2850     08B0  1283               	bcf	3,5	;RP0=0, select bank0
  2851     08B1  1303               	bcf	3,6	;RP1=0, select bank0
  2852     08B2  0081               	movwf	1	;volatile
  2853     08B3                     l7075:
  2854                           
  2855                           ;timer.c: 23:     OPTION_REGbits.T0CS = 0;
  2856     08B3  1683               	bsf	3,5	;RP0=1, select bank1
  2857     08B4  1303               	bcf	3,6	;RP1=0, select bank1
  2858     08B5  1281               	bcf	1,5	;volatile
  2859     08B6                     l7077:
  2860                           
  2861                           ;timer.c: 24:     OPTION_REGbits.PSA = 0;
  2862     08B6  1181               	bcf	1,3	;volatile
  2863     08B7                     l7079:
  2864                           
  2865                           ;timer.c: 25:     OPTION_REGbits.PS = 0b111;
  2866     08B7  3007               	movlw	7
  2867     08B8  0481               	iorwf	1,f	;volatile
  2868     08B9                     l7081:
  2869                           
  2870                           ;timer.c: 27:     INTCONbits.T0IF = 0;
  2871     08B9  110B               	bcf	11,2	;volatile
  2872     08BA                     l7083:
  2873                           
  2874                           ;timer.c: 29:     INTCONbits.T0IE = 0;
  2875     08BA  128B               	bcf	11,5	;volatile
  2876     08BB                     l206:
  2877     08BB  0008               	return
  2878     08BC                     __end_of_timer0_init:
  2879                           
  2880                           	psect	text2
  2881     1375                     __ptext2:	
  2882 ;; *************** function _rs232_init *****************
  2883 ;; Defined at:
  2884 ;;		line 8 in file "rs232.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;		None
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;		None
  2889 ;; Return value:  Size  Location     Type
  2890 ;;                  1    wreg      void 
  2891 ;; Registers used:
  2892 ;;		wreg
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 0/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2898 ;;      Params:         0       0       0       0       0
  2899 ;;      Locals:         0       0       0       0       0
  2900 ;;      Temps:          0       0       0       0       0
  2901 ;;      Totals:         0       0       0       0       0
  2902 ;;Total ram usage:        0 bytes
  2903 ;; Hardware stack levels used: 1
  2904 ;; Hardware stack levels required when called: 7
  2905 ;; This function calls:
  2906 ;;		Nothing
  2907 ;; This function is called by:
  2908 ;;		_main
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912     1375                     _rs232_init:	
  2913                           ;psect for function _rs232_init
  2914                           
  2915     1375                     l7005:	
  2916                           ;incstack = 0
  2917                           ; Regs used in _rs232_init: [wreg]
  2918                           
  2919                           
  2920                           ;rs232.c: 10:     BRG16 = 0;
  2921     1375  1683               	bsf	3,5	;RP0=1, select bank3
  2922     1376  1703               	bsf	3,6	;RP1=1, select bank3
  2923     1377  1187               	bcf	7,3	;volatile
  2924                           
  2925                           ;rs232.c: 12:     TRISC6 = 0;
  2926     1378  1683               	bsf	3,5	;RP0=1, select bank1
  2927     1379  1303               	bcf	3,6	;RP1=0, select bank1
  2928     137A  1307               	bcf	7,6	;volatile
  2929                           
  2930                           ;rs232.c: 13:     TRISC7 = 1;
  2931     137B  1787               	bsf	7,7	;volatile
  2932                           
  2933                           ;rs232.c: 14:     TXEN = 1;
  2934     137C  1698               	bsf	24,5	;volatile
  2935                           
  2936                           ;rs232.c: 15:     SYNC = 0;
  2937     137D  1218               	bcf	24,4	;volatile
  2938                           
  2939                           ;rs232.c: 16:     SPEN = 1;
  2940     137E  1283               	bcf	3,5	;RP0=0, select bank0
  2941     137F  1303               	bcf	3,6	;RP1=0, select bank0
  2942     1380  1798               	bsf	24,7	;volatile
  2943                           
  2944                           ;rs232.c: 17:     CREN = 1;
  2945     1381  1618               	bsf	24,4	;volatile
  2946                           
  2947                           ;rs232.c: 18:     PIE1bits.RCIE = 1;
  2948     1382  1683               	bsf	3,5	;RP0=1, select bank1
  2949     1383  1303               	bcf	3,6	;RP1=0, select bank1
  2950     1384  168C               	bsf	12,5	;volatile
  2951                           
  2952                           ;rs232.c: 19:     INTCONbits.PEIE = 1;
  2953     1385  170B               	bsf	11,6	;volatile
  2954                           
  2955                           ;rs232.c: 20:     BRGH = 0;
  2956     1386  1118               	bcf	24,2	;volatile
  2957     1387                     l7007:
  2958                           
  2959                           ;rs232.c: 21:     SPBRG = 25;
  2960     1387  3019               	movlw	25
  2961     1388  0099               	movwf	25	;volatile
  2962     1389                     l7009:
  2963                           
  2964                           ;rs232.c: 22:     TX9 = 0;
  2965     1389  1318               	bcf	24,6	;volatile
  2966     138A                     l7011:
  2967                           
  2968                           ;rs232.c: 23:     PIR1bits.RCIF = 0;
  2969     138A  1283               	bcf	3,5	;RP0=0, select bank0
  2970     138B  1303               	bcf	3,6	;RP1=0, select bank0
  2971     138C  128C               	bcf	12,5	;volatile
  2972     138D                     l331:
  2973     138D  0008               	return
  2974     138E                     __end_of_rs232_init:
  2975                           
  2976                           	psect	text3
  2977     13CD                     __ptext3:	
  2978 ;; *************** function _printf *****************
  2979 ;; Defined at:
  2980 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\printf.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;  f               2    9[BANK3 ] PTR const unsigned char 
  2983 ;;		 -> STR_1(6), 
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;  pb              2   13[BANK3 ] struct __prbuf
  2986 ;;  ap              2   11[BANK3 ] PTR void [1]
  2987 ;;		 -> ?_sprintf(2), ?_printf(2), 
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  2    9[BANK3 ] int 
  2990 ;; Registers used:
  2991 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2997 ;;      Params:         0       0       0       2       0
  2998 ;;      Locals:         0       0       0       4       0
  2999 ;;      Temps:          0       0       0       0       0
  3000 ;;      Totals:         0       0       0       6       0
  3001 ;;Total ram usage:        6 bytes
  3002 ;; Hardware stack levels used: 1
  3003 ;; Hardware stack levels required when called: 9
  3004 ;; This function calls:
  3005 ;;		__doprnt
  3006 ;; This function is called by:
  3007 ;;		_main
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011     13CD                     _printf:	
  3012                           ;psect for function _printf
  3013                           
  3014     13CD                     l8319:	
  3015                           ;incstack = 0
  3016 ;; hardware stack exceeded
  3017                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3018                           
  3019     13CD  1683               	bsf	3,5	;RP0=1, select bank3
  3020     13CE  1703               	bsf	3,6	;RP1=1, select bank3
  3021     13CF  01CE               	clrf	printf@pb^(0+384)
  3022     13D0                     l8321:
  3023     13D0  3001               	movlw	(low (fp__putch-fpbase))& (0+255)
  3024     13D1  00CF               	movwf	(low ((printf@pb| (0+256)+1)))^(0+128)
  3025     13D2                     l8323:
  3026     13D2  30CC               	movlw	(low ((?_printf| (0+256)+2)))& (0+255)
  3027     13D3  00CC               	movwf	printf@ap^(0+384)
  3028     13D4  3001               	movlw	1
  3029     13D5  00CD               	movwf	(printf@ap+1)^(0+384)
  3030     13D6                     l8325:
  3031                           
  3032                           ;	Return value of _printf is never used
  3033     13D6  30CE               	movlw	(low (printf@pb| (0+256)))& (0+255)
  3034     13D7  1683               	bsf	3,5	;RP0=1, select bank1
  3035     13D8  1303               	bcf	3,6	;RP1=0, select bank1
  3036     13D9  00B9               	movwf	__doprnt@pb^(0+128)
  3037     13DA  3001               	movlw	1
  3038     13DB  00BA               	movwf	(__doprnt@pb+1)^(0+128)
  3039     13DC  1683               	bsf	3,5	;RP0=1, select bank3
  3040     13DD  1703               	bsf	3,6	;RP1=1, select bank3
  3041     13DE  084A               	movf	printf@f^(0+384),w
  3042     13DF  1683               	bsf	3,5	;RP0=1, select bank1
  3043     13E0  1303               	bcf	3,6	;RP1=0, select bank1
  3044     13E1  00BB               	movwf	__doprnt@f^(0+128)
  3045     13E2  1683               	bsf	3,5	;RP0=1, select bank3
  3046     13E3  1703               	bsf	3,6	;RP1=1, select bank3
  3047     13E4  084B               	movf	(printf@f+1)^(0+384),w
  3048     13E5  1683               	bsf	3,5	;RP0=1, select bank1
  3049     13E6  1303               	bcf	3,6	;RP1=0, select bank1
  3050     13E7  00BC               	movwf	(__doprnt@f+1)^(0+128)
  3051     13E8  30CC               	movlw	(low (printf@ap| (0+256)))& (0+255)
  3052     13E9  00BD               	movwf	__doprnt@ap^(0+128)
  3053     13EA  3001               	movlw	1
  3054     13EB  00BE               	movwf	(__doprnt@ap+1)^(0+128)
  3055     13EC  120A  118A  22F0  160A  118A  	fcall	__doprnt
  3056     13F1                     l1214:
  3057     13F1  0008               	return
  3058     13F2                     __end_of_printf:
  3059                           
  3060                           	psect	text4
  3061     02F0                     __ptext4:	
  3062 ;; *************** function __doprnt *****************
  3063 ;; Defined at:
  3064 ;;		line 471 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;  pb              2   25[BANK1 ] PTR struct __prbuf
  3067 ;;		 -> sprintf@pb(2), printf@pb(2), 
  3068 ;;  f               2   27[BANK1 ] PTR const unsigned char 
  3069 ;;		 -> STR_46(10), STR_45(10), STR_43(9), STR_22(7), 
  3070 ;;		 -> STR_17(9), STR_1(6), 
  3071 ;;  ap              2   29[BANK1 ] PTR PTR void 
  3072 ;;		 -> sprintf@ap(2), printf@ap(2), 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;  tmpval          4    0        struct .
  3075 ;;  val             2    6[BANK3 ] unsigned int 
  3076 ;;  cp              2    0        PTR const unsigned char 
  3077 ;;  len             2    0        unsigned int 
  3078 ;;  c               1    8[BANK3 ] unsigned char 
  3079 ;;  flag            1    5[BANK3 ] unsigned char 
  3080 ;;  prec            1    4[BANK3 ] char 
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  2   25[BANK1 ] int 
  3083 ;; Registers used:
  3084 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3090 ;;      Params:         0       0       6       0       0
  3091 ;;      Locals:         0       0       0       5       0
  3092 ;;      Temps:          0       0       0       4       0
  3093 ;;      Totals:         0       0       6       9       0
  3094 ;;Total ram usage:       15 bytes
  3095 ;; Hardware stack levels used: 1
  3096 ;; Hardware stack levels required when called: 8
  3097 ;; This function calls:
  3098 ;;		NULL
  3099 ;;		___lwdiv
  3100 ;;		___lwmod
  3101 ;;		_putch
  3102 ;; This function is called by:
  3103 ;;		_printf
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107     02F0                     __doprnt:	
  3108                           ;psect for function __doprnt
  3109                           
  3110     02F0                     l8243:	
  3111                           ;incstack = 0
  3112 ;; hardware stack exceeded
  3113                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3114                           
  3115                           
  3116                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 471: _doprnt(stru
      +                          ct __prbuf * pb, register const char * f, register va_list ap);C:\Program Files\Microchi
      +                          p\xc8\v2.41\pic\sources\c90\common\doprnt.c: 472: {;C:\Program Files\Microchip\xc8\v2.41
      +                          \pic\sources\c90\common\doprnt.c: 512:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files\Microchip\xc8\v2.
      +                          41\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;;C:\Program Files\Microchip
      +                          \xc8\v2.41\pic\sources\c90\common\doprnt.c: 543:  } tmpval;
  3117     02F0  2D05               	goto	l8309
  3118     02F1                     l8245:
  3119                           
  3120                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3121     02F1  3025               	movlw	37
  3122     02F2  0649               	xorwf	__doprnt@c^(0+384),w
  3123     02F3  1903               	btfsc	3,2
  3124     02F4  2AF6               	goto	u8181
  3125     02F5  2AF7               	goto	u8180
  3126     02F6                     u8181:
  3127     02F6  2B49               	goto	l8255
  3128     02F7                     u8180:
  3129     02F7                     l8247:
  3130     02F7  1683               	bsf	3,5	;RP0=1, select bank1
  3131     02F8  1303               	bcf	3,6	;RP1=0, select bank1
  3132     02F9  0839               	movf	__doprnt@pb^(0+128),w
  3133     02FA  3E01               	addlw	1
  3134     02FB  1683               	bsf	3,5	;RP0=1, select bank3
  3135     02FC  1703               	bsf	3,6	;RP1=1, select bank3
  3136     02FD  00C1               	movwf	??__doprnt^(0+384)
  3137     02FE  1683               	bsf	3,5	;RP0=1, select bank1
  3138     02FF  1303               	bcf	3,6	;RP1=0, select bank1
  3139     0300  083A               	movf	(__doprnt@pb+1)^(0+128),w
  3140     0301  1803               	skipnc
  3141     0302  3E01               	addlw	1
  3142     0303  3E00               	addlw	0
  3143     0304  1683               	bsf	3,5	;RP0=1, select bank3
  3144     0305  1703               	bsf	3,6	;RP1=1, select bank3
  3145     0306  00C2               	movwf	(??__doprnt+1)^(0+384)
  3146     0307  0841               	movf	??__doprnt^(0+384),w
  3147     0308  0084               	movwf	4
  3148     0309  1783               	bsf	3,7
  3149     030A  1C42               	btfss	(??__doprnt+1)^(0+384),0
  3150     030B  1383               	bcf	3,7
  3151     030C  0800               	movf	0,w
  3152     030D  1903               	btfsc	3,2
  3153     030E  2B10               	goto	u8191
  3154     030F  2B11               	goto	u8190
  3155     0310                     u8191:
  3156     0310  2B2F               	goto	l8251
  3157     0311                     u8190:
  3158     0311                     l8249:
  3159     0311  0849               	movf	__doprnt@c^(0+384),w
  3160     0312  1683               	bsf	3,5	;RP0=1, select bank1
  3161     0313  1303               	bcf	3,6	;RP1=0, select bank1
  3162     0314  00AD               	movwf	putch@c^(0+128)
  3163     0315  0839               	movf	__doprnt@pb^(0+128),w
  3164     0316  3E01               	addlw	1
  3165     0317  1683               	bsf	3,5	;RP0=1, select bank3
  3166     0318  1703               	bsf	3,6	;RP1=1, select bank3
  3167     0319  00C1               	movwf	??__doprnt^(0+384)
  3168     031A  1683               	bsf	3,5	;RP0=1, select bank1
  3169     031B  1303               	bcf	3,6	;RP1=0, select bank1
  3170     031C  083A               	movf	(__doprnt@pb+1)^(0+128),w
  3171     031D  1803               	skipnc
  3172     031E  3E01               	addlw	1
  3173     031F  3E00               	addlw	0
  3174     0320  1683               	bsf	3,5	;RP0=1, select bank3
  3175     0321  1703               	bsf	3,6	;RP1=1, select bank3
  3176     0322  00C2               	movwf	(??__doprnt+1)^(0+384)
  3177     0323  0841               	movf	??__doprnt^(0+384),w
  3178     0324  0084               	movwf	4
  3179     0325  1783               	bsf	3,7
  3180     0326  1C42               	btfss	(??__doprnt+1)^(0+384),0
  3181     0327  1383               	bcf	3,7
  3182     0328  0800               	movf	0,w
  3183     0329  120A  118A  2039  120A  118A  	fcall	fptable
  3184     032E  2AF0               	goto	l8243
  3185     032F                     l8251:
  3186     032F  1683               	bsf	3,5	;RP0=1, select bank1
  3187     0330  1303               	bcf	3,6	;RP1=0, select bank1
  3188     0331  0839               	movf	__doprnt@pb^(0+128),w
  3189     0332  0084               	movwf	4
  3190     0333  1783               	bsf	3,7
  3191     0334  1C3A               	btfss	(__doprnt@pb+1)^(0+128),0
  3192     0335  1383               	bcf	3,7
  3193     0336  0800               	movf	0,w
  3194     0337  0084               	movwf	4
  3195     0338  1683               	bsf	3,5	;RP0=1, select bank3
  3196     0339  1703               	bsf	3,6	;RP1=1, select bank3
  3197     033A  0849               	movf	__doprnt@c^(0+384),w
  3198     033B  1383               	bcf	3,7	;select IRP bank0
  3199     033C  0080               	movwf	0
  3200     033D                     l8253:
  3201     033D  3001               	movlw	1
  3202     033E  00FF               	movwf	btemp+1
  3203     033F  1683               	bsf	3,5	;RP0=1, select bank1
  3204     0340  1303               	bcf	3,6	;RP1=0, select bank1
  3205     0341  0839               	movf	__doprnt@pb^(0+128),w
  3206     0342  0084               	movwf	4
  3207     0343  1783               	bsf	3,7
  3208     0344  1C3A               	btfss	(__doprnt@pb+1)^(0+128),0
  3209     0345  1383               	bcf	3,7
  3210     0346  087F               	movf	btemp+1,w
  3211     0347  0780               	addwf	0,f
  3212     0348  2AF0               	goto	l8243
  3213     0349                     l8255:
  3214                           
  3215                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3216     0349  01C6               	clrf	__doprnt@flag^(0+384)
  3217                           
  3218                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  3219     034A  2B4D               	goto	l8259
  3220     034B                     l1235:	
  3221                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 843:   case 'u':
  3222                           
  3223                           
  3224                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          x40;
  3225     034B  1746               	bsf	__doprnt@flag^(0+384),6
  3226                           
  3227                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 845:    break;
  3228     034C  2B87               	goto	l1233
  3229     034D                     l8259:
  3230     034D  1683               	bsf	3,5	;RP0=1, select bank1
  3231     034E  1303               	bcf	3,6	;RP1=0, select bank1
  3232     034F  083C               	movf	(__doprnt@f+1)^(0+128),w
  3233     0350  1683               	bsf	3,5	;RP0=1, select bank3
  3234     0351  1703               	bsf	3,6	;RP1=1, select bank3
  3235     0352  00C2               	movwf	(??__doprnt^(0+384)+1)
  3236     0353  1683               	bsf	3,5	;RP0=1, select bank1
  3237     0354  1303               	bcf	3,6	;RP1=0, select bank1
  3238     0355  083B               	movf	__doprnt@f^(0+128),w
  3239     0356  1683               	bsf	3,5	;RP0=1, select bank3
  3240     0357  1703               	bsf	3,6	;RP1=1, select bank3
  3241     0358  00C1               	movwf	??__doprnt^(0+384)
  3242     0359  1683               	bsf	3,5	;RP0=1, select bank1
  3243     035A  1303               	bcf	3,6	;RP1=0, select bank1
  3244     035B  0ABB               	incf	__doprnt@f^(0+128),f
  3245     035C  1903               	skipnz
  3246     035D  0ABC               	incf	(__doprnt@f+1)^(0+128),f
  3247     035E  1683               	bsf	3,5	;RP0=1, select bank3
  3248     035F  1703               	bsf	3,6	;RP1=1, select bank3
  3249     0360  0842               	movf	(??__doprnt+1)^(0+384),w
  3250     0361  1283               	bcf	3,5	;RP0=0, select bank0
  3251     0362  1303               	bcf	3,6	;RP1=0, select bank0
  3252     0363  00FF               	movwf	btemp+1
  3253     0364  1683               	bsf	3,5	;RP0=1, select bank3
  3254     0365  1703               	bsf	3,6	;RP1=1, select bank3
  3255     0366  0841               	movf	??__doprnt^(0+384),w
  3256     0367  0084               	movwf	4
  3257     0368  1283               	bcf	3,5	;RP0=0, select bank0
  3258     0369  1303               	bcf	3,6	;RP1=0, select bank0
  3259     036A  120A  118A  2700  120A  118A  	fcall	stringtab
  3260     036F  1683               	bsf	3,5	;RP0=1, select bank3
  3261     0370  1703               	bsf	3,6	;RP1=1, select bank3
  3262     0371  00C9               	movwf	__doprnt@c^(0+384)
  3263     0372  00C3               	movwf	(??__doprnt+2)^(0+384)
  3264     0373  01C4               	clrf	((??__doprnt+2)^(0+384)+1)
  3265                           
  3266                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3267                           ; Switch size 1, requested type "simple"
  3268                           ; Number of cases is 1, Range of values is 0 to 0
  3269                           ; switch strategies available:
  3270                           ; Name         Instructions Cycles
  3271                           ; simple_byte            4     3 (average)
  3272                           ; direct_byte           11     8 (fixed)
  3273                           ; jumptable            260     6 (fixed)
  3274                           ;	Chosen strategy is simple_byte
  3275     0374  0844               	movf	(??__doprnt+3)^(0+384),w
  3276     0375  3A00               	xorlw	0	; case 0
  3277     0376  1903               	skipnz
  3278     0377  2B79               	goto	l8847
  3279     0378  2D05               	goto	l8309
  3280     0379                     l8847:
  3281                           
  3282                           ; Switch size 1, requested type "simple"
  3283                           ; Number of cases is 4, Range of values is 0 to 117
  3284                           ; switch strategies available:
  3285                           ; Name         Instructions Cycles
  3286                           ; simple_byte           13     7 (average)
  3287                           ; jumptable            260     6 (fixed)
  3288                           ;	Chosen strategy is simple_byte
  3289     0379  0843               	movf	(??__doprnt+2)^(0+384),w
  3290     037A  3A00               	xorlw	0	; case 0
  3291     037B  1903               	skipnz
  3292     037C  2D2F               	goto	l8311
  3293     037D  3A64               	xorlw	100	; case 100
  3294     037E  1903               	skipnz
  3295     037F  2B87               	goto	l1233
  3296     0380  3A0D               	xorlw	13	; case 105
  3297     0381  1903               	skipnz
  3298     0382  2B87               	goto	l1233
  3299     0383  3A1C               	xorlw	28	; case 117
  3300     0384  1903               	skipnz
  3301     0385  2B4B               	goto	l1235
  3302     0386  2D05               	goto	l8309
  3303     0387                     l1233:
  3304                           
  3305                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x40) == 0x00)
  3306     0387  1B46               	btfsc	__doprnt@flag^(0+384),6
  3307     0388  2B8A               	goto	u8201
  3308     0389  2B8B               	goto	u8200
  3309     038A                     u8201:
  3310     038A  2BB7               	goto	l8269
  3311     038B                     u8200:
  3312     038B                     l8261:
  3313                           
  3314                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3315     038B  1683               	bsf	3,5	;RP0=1, select bank1
  3316     038C  1303               	bcf	3,6	;RP1=0, select bank1
  3317     038D  083D               	movf	__doprnt@ap^(0+128),w
  3318     038E  0084               	movwf	4
  3319     038F  1783               	bsf	3,7
  3320     0390  1C3E               	btfss	(__doprnt@ap+1)^(0+128),0
  3321     0391  1383               	bcf	3,7
  3322     0392  0800               	movf	0,w
  3323     0393  1683               	bsf	3,5	;RP0=1, select bank3
  3324     0394  1703               	bsf	3,6	;RP1=1, select bank3
  3325     0395  00C1               	movwf	??__doprnt^(0+384)
  3326     0396  3002               	movlw	2
  3327     0397  0780               	addwf	0,f
  3328     0398  0A84               	incf	4,f
  3329     0399  0800               	movf	0,w
  3330     039A  00C2               	movwf	(??__doprnt^(0+384)+1)
  3331     039B  3000               	movlw	0
  3332     039C  1803               	skipnc
  3333     039D  0A80               	incf	0,f
  3334     039E  0780               	addwf	0,f
  3335     039F  0841               	movf	??__doprnt^(0+384),w
  3336     03A0  0084               	movwf	4
  3337     03A1  1783               	bsf	3,7
  3338     03A2  1C42               	btfss	(??__doprnt+1)^(0+384),0
  3339     03A3  1383               	bcf	3,7
  3340     03A4  0800               	movf	0,w
  3341     03A5  00C7               	movwf	__doprnt@val^(0+384)
  3342     03A6  0A84               	incf	4,f
  3343     03A7  0800               	movf	0,w
  3344     03A8  00C8               	movwf	(__doprnt@val+1)^(0+384)
  3345     03A9                     l8263:
  3346                           
  3347                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  3348     03A9  1FC8               	btfss	(__doprnt@val+1)^(0+384),7
  3349     03AA  2BAC               	goto	u8211
  3350     03AB  2BAD               	goto	u8210
  3351     03AC                     u8211:
  3352     03AC  2BD5               	goto	l8271
  3353     03AD                     u8210:
  3354     03AD                     l8265:
  3355                           
  3356                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3357     03AD  3003               	movlw	3
  3358     03AE  00FF               	movwf	btemp+1
  3359     03AF  087F               	movf	btemp+1,w
  3360     03B0  04C6               	iorwf	__doprnt@flag^(0+384),f
  3361     03B1                     l8267:
  3362                           
  3363                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3364     03B1  09C7               	comf	__doprnt@val^(0+384),f
  3365     03B2  09C8               	comf	(__doprnt@val+1)^(0+384),f
  3366     03B3  0AC7               	incf	__doprnt@val^(0+384),f
  3367     03B4  1903               	skipnz
  3368     03B5  0AC8               	incf	(__doprnt@val+1)^(0+384),f
  3369     03B6  2BD5               	goto	l8271
  3370     03B7                     l8269:
  3371                           
  3372                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3373     03B7  1683               	bsf	3,5	;RP0=1, select bank1
  3374     03B8  1303               	bcf	3,6	;RP1=0, select bank1
  3375     03B9  083D               	movf	__doprnt@ap^(0+128),w
  3376     03BA  0084               	movwf	4
  3377     03BB  1783               	bsf	3,7
  3378     03BC  1C3E               	btfss	(__doprnt@ap+1)^(0+128),0
  3379     03BD  1383               	bcf	3,7
  3380     03BE  0800               	movf	0,w
  3381     03BF  1683               	bsf	3,5	;RP0=1, select bank3
  3382     03C0  1703               	bsf	3,6	;RP1=1, select bank3
  3383     03C1  00C1               	movwf	??__doprnt^(0+384)
  3384     03C2  3002               	movlw	2
  3385     03C3  0780               	addwf	0,f
  3386     03C4  0A84               	incf	4,f
  3387     03C5  0800               	movf	0,w
  3388     03C6  00C2               	movwf	(??__doprnt^(0+384)+1)
  3389     03C7  3000               	movlw	0
  3390     03C8  1803               	skipnc
  3391     03C9  0A80               	incf	0,f
  3392     03CA  0780               	addwf	0,f
  3393     03CB  0841               	movf	??__doprnt^(0+384),w
  3394     03CC  0084               	movwf	4
  3395     03CD  1783               	bsf	3,7
  3396     03CE  1C42               	btfss	(??__doprnt+1)^(0+384),0
  3397     03CF  1383               	bcf	3,7
  3398     03D0  0800               	movf	0,w
  3399     03D1  00C7               	movwf	__doprnt@val^(0+384)
  3400     03D2  0A84               	incf	4,f
  3401     03D3  0800               	movf	0,w
  3402     03D4  00C8               	movwf	(__doprnt@val+1)^(0+384)
  3403     03D5                     l8271:
  3404                           
  3405                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3406     03D5  01C9               	clrf	__doprnt@c^(0+384)
  3407     03D6  0AC9               	incf	__doprnt@c^(0+384),f
  3408     03D7                     l8277:
  3409                           
  3410                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3411     03D7  0849               	movf	__doprnt@c^(0+384),w
  3412     03D8  00C1               	movwf	??__doprnt^(0+384)
  3413     03D9  0741               	addwf	??__doprnt^(0+384),w
  3414     03DA  3E3A               	addlw	low (_dpowers| (0+32768))
  3415     03DB  0084               	movwf	4
  3416     03DC  3087               	movlw	high (_dpowers| (0+32768))
  3417     03DD  1803               	skipnc
  3418     03DE  3E01               	addlw	1
  3419     03DF  1283               	bcf	3,5	;RP0=0, select bank0
  3420     03E0  1303               	bcf	3,6	;RP1=0, select bank0
  3421     03E1  00FF               	movwf	btemp+1
  3422     03E2  120A  118A  2700  120A  118A  	fcall	stringtab
  3423     03E7  1683               	bsf	3,5	;RP0=1, select bank3
  3424     03E8  1703               	bsf	3,6	;RP1=1, select bank3
  3425     03E9  00C2               	movwf	(??__doprnt+1)^(0+384)
  3426     03EA  1283               	bcf	3,5	;RP0=0, select bank0
  3427     03EB  1303               	bcf	3,6	;RP1=0, select bank0
  3428     03EC  120A  118A  2700  120A  118A  	fcall	stringtab
  3429     03F1  1683               	bsf	3,5	;RP0=1, select bank3
  3430     03F2  1703               	bsf	3,6	;RP1=1, select bank3
  3431     03F3  00C3               	movwf	((??__doprnt+1)^(0+384)+1)
  3432     03F4  0843               	movf	(??__doprnt+2)^(0+384),w
  3433     03F5  0248               	subwf	(__doprnt@val+1)^(0+384),w
  3434     03F6  1D03               	skipz
  3435     03F7  2BFA               	goto	u8225
  3436     03F8  0842               	movf	(??__doprnt+1)^(0+384),w
  3437     03F9  0247               	subwf	__doprnt@val^(0+384),w
  3438     03FA                     u8225:
  3439     03FA  1803               	skipnc
  3440     03FB  2BFD               	goto	u8221
  3441     03FC  2BFE               	goto	u8220
  3442     03FD                     u8221:
  3443     03FD  2BFF               	goto	l8281
  3444     03FE                     u8220:
  3445     03FE  2C09               	goto	l8285
  3446     03FF                     l8281:
  3447     03FF  3001               	movlw	1
  3448     0400  00FF               	movwf	btemp+1
  3449     0401  087F               	movf	btemp+1,w
  3450     0402  07C9               	addwf	__doprnt@c^(0+384),f
  3451     0403                     l8283:
  3452     0403  3005               	movlw	5
  3453     0404  0649               	xorwf	__doprnt@c^(0+384),w
  3454     0405  1D03               	btfss	3,2
  3455     0406  2C08               	goto	u8231
  3456     0407  2C09               	goto	u8230
  3457     0408                     u8231:
  3458     0408  2BD7               	goto	l8277
  3459     0409                     u8230:
  3460     0409                     l8285:
  3461                           
  3462                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3463     0409  0846               	movf	__doprnt@flag^(0+384),w
  3464     040A  3903               	andlw	3
  3465     040B  1903               	btfsc	3,2
  3466     040C  2C0E               	goto	u8241
  3467     040D  2C0F               	goto	u8240
  3468     040E                     u8241:
  3469     040E  2C5C               	goto	l8295
  3470     040F                     u8240:
  3471     040F                     l8287:
  3472     040F  1683               	bsf	3,5	;RP0=1, select bank1
  3473     0410  1303               	bcf	3,6	;RP1=0, select bank1
  3474     0411  0839               	movf	__doprnt@pb^(0+128),w
  3475     0412  3E01               	addlw	1
  3476     0413  1683               	bsf	3,5	;RP0=1, select bank3
  3477     0414  1703               	bsf	3,6	;RP1=1, select bank3
  3478     0415  00C1               	movwf	??__doprnt^(0+384)
  3479     0416  1683               	bsf	3,5	;RP0=1, select bank1
  3480     0417  1303               	bcf	3,6	;RP1=0, select bank1
  3481     0418  083A               	movf	(__doprnt@pb+1)^(0+128),w
  3482     0419  1803               	skipnc
  3483     041A  3E01               	addlw	1
  3484     041B  3E00               	addlw	0
  3485     041C  1683               	bsf	3,5	;RP0=1, select bank3
  3486     041D  1703               	bsf	3,6	;RP1=1, select bank3
  3487     041E  00C2               	movwf	(??__doprnt+1)^(0+384)
  3488     041F  0841               	movf	??__doprnt^(0+384),w
  3489     0420  0084               	movwf	4
  3490     0421  1783               	bsf	3,7
  3491     0422  1C42               	btfss	(??__doprnt+1)^(0+384),0
  3492     0423  1383               	bcf	3,7
  3493     0424  0800               	movf	0,w
  3494     0425  1903               	btfsc	3,2
  3495     0426  2C28               	goto	u8251
  3496     0427  2C29               	goto	u8250
  3497     0428                     u8251:
  3498     0428  2C47               	goto	l8291
  3499     0429                     u8250:
  3500     0429                     l8289:
  3501     0429  302D               	movlw	45
  3502     042A  1683               	bsf	3,5	;RP0=1, select bank1
  3503     042B  1303               	bcf	3,6	;RP1=0, select bank1
  3504     042C  00AD               	movwf	putch@c^(0+128)
  3505     042D  0839               	movf	__doprnt@pb^(0+128),w
  3506     042E  3E01               	addlw	1
  3507     042F  1683               	bsf	3,5	;RP0=1, select bank3
  3508     0430  1703               	bsf	3,6	;RP1=1, select bank3
  3509     0431  00C1               	movwf	??__doprnt^(0+384)
  3510     0432  1683               	bsf	3,5	;RP0=1, select bank1
  3511     0433  1303               	bcf	3,6	;RP1=0, select bank1
  3512     0434  083A               	movf	(__doprnt@pb+1)^(0+128),w
  3513     0435  1803               	skipnc
  3514     0436  3E01               	addlw	1
  3515     0437  3E00               	addlw	0
  3516     0438  1683               	bsf	3,5	;RP0=1, select bank3
  3517     0439  1703               	bsf	3,6	;RP1=1, select bank3
  3518     043A  00C2               	movwf	(??__doprnt+1)^(0+384)
  3519     043B  0841               	movf	??__doprnt^(0+384),w
  3520     043C  0084               	movwf	4
  3521     043D  1783               	bsf	3,7
  3522     043E  1C42               	btfss	(??__doprnt+1)^(0+384),0
  3523     043F  1383               	bcf	3,7
  3524     0440  0800               	movf	0,w
  3525     0441  120A  118A  2039  120A  118A  	fcall	fptable
  3526     0446  2C5C               	goto	l8295
  3527     0447                     l8291:
  3528     0447  1683               	bsf	3,5	;RP0=1, select bank1
  3529     0448  1303               	bcf	3,6	;RP1=0, select bank1
  3530     0449  0839               	movf	__doprnt@pb^(0+128),w
  3531     044A  0084               	movwf	4
  3532     044B  1783               	bsf	3,7
  3533     044C  1C3A               	btfss	(__doprnt@pb+1)^(0+128),0
  3534     044D  1383               	bcf	3,7
  3535     044E  0800               	movf	0,w
  3536     044F  0084               	movwf	4
  3537     0450  302D               	movlw	45
  3538     0451  1383               	bcf	3,7	;select IRP bank0
  3539     0452  0080               	movwf	0
  3540     0453                     l8293:
  3541     0453  3001               	movlw	1
  3542     0454  00FF               	movwf	btemp+1
  3543     0455  0839               	movf	__doprnt@pb^(0+128),w
  3544     0456  0084               	movwf	4
  3545     0457  1783               	bsf	3,7
  3546     0458  1C3A               	btfss	(__doprnt@pb+1)^(0+128),0
  3547     0459  1383               	bcf	3,7
  3548     045A  087F               	movf	btemp+1,w
  3549     045B  0780               	addwf	0,f
  3550     045C                     l8295:
  3551                           
  3552                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3553     045C  1683               	bsf	3,5	;RP0=1, select bank3
  3554     045D  1703               	bsf	3,6	;RP1=1, select bank3
  3555     045E  0849               	movf	__doprnt@c^(0+384),w
  3556     045F  00C5               	movwf	__doprnt@prec^(0+384)
  3557                           
  3558                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3559     0460  2CFA               	goto	l8307
  3560     0461                     l8297:
  3561                           
  3562                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3563     0461  300A               	movlw	10
  3564     0462  1683               	bsf	3,5	;RP0=1, select bank1
  3565     0463  1303               	bcf	3,6	;RP1=0, select bank1
  3566     0464  00B4               	movwf	___lwmod@divisor^(0+128)
  3567     0465  3000               	movlw	0
  3568     0466  00B5               	movwf	(___lwmod@divisor^(0+128)+1)
  3569     0467  1683               	bsf	3,5	;RP0=1, select bank3
  3570     0468  1703               	bsf	3,6	;RP1=1, select bank3
  3571     0469  0845               	movf	__doprnt@prec^(0+384),w
  3572     046A  00C1               	movwf	??__doprnt^(0+384)
  3573     046B  0741               	addwf	??__doprnt^(0+384),w
  3574     046C  3E3A               	addlw	low (_dpowers| (0+32768))
  3575     046D  0084               	movwf	4
  3576     046E  3087               	movlw	high (_dpowers| (0+32768))
  3577     046F  1803               	skipnc
  3578     0470  3E01               	addlw	1
  3579     0471  1283               	bcf	3,5	;RP0=0, select bank0
  3580     0472  1303               	bcf	3,6	;RP1=0, select bank0
  3581     0473  00FF               	movwf	btemp+1
  3582     0474  120A  118A  2700  120A  118A  	fcall	stringtab
  3583     0479  1683               	bsf	3,5	;RP0=1, select bank1
  3584     047A  1303               	bcf	3,6	;RP1=0, select bank1
  3585     047B  00AD               	movwf	___lwdiv@divisor^(0+128)
  3586     047C  1283               	bcf	3,5	;RP0=0, select bank0
  3587     047D  1303               	bcf	3,6	;RP1=0, select bank0
  3588     047E  120A  118A  2700  120A  118A  	fcall	stringtab
  3589     0483  1683               	bsf	3,5	;RP0=1, select bank1
  3590     0484  1303               	bcf	3,6	;RP1=0, select bank1
  3591     0485  00AE               	movwf	(___lwdiv@divisor+1)^(0+128)
  3592     0486  1683               	bsf	3,5	;RP0=1, select bank3
  3593     0487  1703               	bsf	3,6	;RP1=1, select bank3
  3594     0488  0848               	movf	(__doprnt@val+1)^(0+384),w
  3595     0489  1683               	bsf	3,5	;RP0=1, select bank1
  3596     048A  1303               	bcf	3,6	;RP1=0, select bank1
  3597     048B  00B0               	movwf	(___lwdiv@dividend+1)^(0+128)
  3598     048C  1683               	bsf	3,5	;RP0=1, select bank3
  3599     048D  1703               	bsf	3,6	;RP1=1, select bank3
  3600     048E  0847               	movf	__doprnt@val^(0+384),w
  3601     048F  1683               	bsf	3,5	;RP0=1, select bank1
  3602     0490  1303               	bcf	3,6	;RP1=0, select bank1
  3603     0491  00AF               	movwf	___lwdiv@dividend^(0+128)
  3604     0492  160A  118A  2767  120A  118A  	fcall	___lwdiv
  3605     0497  1683               	bsf	3,5	;RP0=1, select bank1
  3606     0498  1303               	bcf	3,6	;RP1=0, select bank1
  3607     0499  082E               	movf	(?___lwdiv+1)^(0+128),w
  3608     049A  00B7               	movwf	(___lwmod@dividend+1)^(0+128)
  3609     049B  082D               	movf	?___lwdiv^(0+128),w
  3610     049C  00B6               	movwf	___lwmod@dividend^(0+128)
  3611     049D  160A  118A  2660  120A  118A  	fcall	___lwmod
  3612     04A2  1683               	bsf	3,5	;RP0=1, select bank1
  3613     04A3  1303               	bcf	3,6	;RP1=0, select bank1
  3614     04A4  0834               	movf	?___lwmod^(0+128),w
  3615     04A5  3E30               	addlw	48
  3616     04A6  1683               	bsf	3,5	;RP0=1, select bank3
  3617     04A7  1703               	bsf	3,6	;RP1=1, select bank3
  3618     04A8  00C9               	movwf	__doprnt@c^(0+384)
  3619     04A9                     l8299:
  3620     04A9  1683               	bsf	3,5	;RP0=1, select bank1
  3621     04AA  1303               	bcf	3,6	;RP1=0, select bank1
  3622     04AB  0839               	movf	__doprnt@pb^(0+128),w
  3623     04AC  3E01               	addlw	1
  3624     04AD  1683               	bsf	3,5	;RP0=1, select bank3
  3625     04AE  1703               	bsf	3,6	;RP1=1, select bank3
  3626     04AF  00C1               	movwf	??__doprnt^(0+384)
  3627     04B0  1683               	bsf	3,5	;RP0=1, select bank1
  3628     04B1  1303               	bcf	3,6	;RP1=0, select bank1
  3629     04B2  083A               	movf	(__doprnt@pb+1)^(0+128),w
  3630     04B3  1803               	skipnc
  3631     04B4  3E01               	addlw	1
  3632     04B5  3E00               	addlw	0
  3633     04B6  1683               	bsf	3,5	;RP0=1, select bank3
  3634     04B7  1703               	bsf	3,6	;RP1=1, select bank3
  3635     04B8  00C2               	movwf	(??__doprnt+1)^(0+384)
  3636     04B9  0841               	movf	??__doprnt^(0+384),w
  3637     04BA  0084               	movwf	4
  3638     04BB  1783               	bsf	3,7
  3639     04BC  1C42               	btfss	(??__doprnt+1)^(0+384),0
  3640     04BD  1383               	bcf	3,7
  3641     04BE  0800               	movf	0,w
  3642     04BF  1903               	btfsc	3,2
  3643     04C0  2CC2               	goto	u8261
  3644     04C1  2CC3               	goto	u8260
  3645     04C2                     u8261:
  3646     04C2  2CE1               	goto	l8303
  3647     04C3                     u8260:
  3648     04C3                     l8301:
  3649     04C3  0849               	movf	__doprnt@c^(0+384),w
  3650     04C4  1683               	bsf	3,5	;RP0=1, select bank1
  3651     04C5  1303               	bcf	3,6	;RP1=0, select bank1
  3652     04C6  00AD               	movwf	putch@c^(0+128)
  3653     04C7  0839               	movf	__doprnt@pb^(0+128),w
  3654     04C8  3E01               	addlw	1
  3655     04C9  1683               	bsf	3,5	;RP0=1, select bank3
  3656     04CA  1703               	bsf	3,6	;RP1=1, select bank3
  3657     04CB  00C1               	movwf	??__doprnt^(0+384)
  3658     04CC  1683               	bsf	3,5	;RP0=1, select bank1
  3659     04CD  1303               	bcf	3,6	;RP1=0, select bank1
  3660     04CE  083A               	movf	(__doprnt@pb+1)^(0+128),w
  3661     04CF  1803               	skipnc
  3662     04D0  3E01               	addlw	1
  3663     04D1  3E00               	addlw	0
  3664     04D2  1683               	bsf	3,5	;RP0=1, select bank3
  3665     04D3  1703               	bsf	3,6	;RP1=1, select bank3
  3666     04D4  00C2               	movwf	(??__doprnt+1)^(0+384)
  3667     04D5  0841               	movf	??__doprnt^(0+384),w
  3668     04D6  0084               	movwf	4
  3669     04D7  1783               	bsf	3,7
  3670     04D8  1C42               	btfss	(??__doprnt+1)^(0+384),0
  3671     04D9  1383               	bcf	3,7
  3672     04DA  0800               	movf	0,w
  3673     04DB  120A  118A  2039  120A  118A  	fcall	fptable
  3674     04E0  2CFA               	goto	l8307
  3675     04E1                     l8303:
  3676     04E1  1683               	bsf	3,5	;RP0=1, select bank1
  3677     04E2  1303               	bcf	3,6	;RP1=0, select bank1
  3678     04E3  0839               	movf	__doprnt@pb^(0+128),w
  3679     04E4  0084               	movwf	4
  3680     04E5  1783               	bsf	3,7
  3681     04E6  1C3A               	btfss	(__doprnt@pb+1)^(0+128),0
  3682     04E7  1383               	bcf	3,7
  3683     04E8  0800               	movf	0,w
  3684     04E9  0084               	movwf	4
  3685     04EA  1683               	bsf	3,5	;RP0=1, select bank3
  3686     04EB  1703               	bsf	3,6	;RP1=1, select bank3
  3687     04EC  0849               	movf	__doprnt@c^(0+384),w
  3688     04ED  1383               	bcf	3,7	;select IRP bank0
  3689     04EE  0080               	movwf	0
  3690     04EF                     l8305:
  3691     04EF  3001               	movlw	1
  3692     04F0  00FF               	movwf	btemp+1
  3693     04F1  1683               	bsf	3,5	;RP0=1, select bank1
  3694     04F2  1303               	bcf	3,6	;RP1=0, select bank1
  3695     04F3  0839               	movf	__doprnt@pb^(0+128),w
  3696     04F4  0084               	movwf	4
  3697     04F5  1783               	bsf	3,7
  3698     04F6  1C3A               	btfss	(__doprnt@pb+1)^(0+128),0
  3699     04F7  1383               	bcf	3,7
  3700     04F8  087F               	movf	btemp+1,w
  3701     04F9  0780               	addwf	0,f
  3702     04FA                     l8307:
  3703                           
  3704                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3705     04FA  30FF               	movlw	255
  3706     04FB  00FF               	movwf	btemp+1
  3707     04FC  087F               	movf	btemp+1,w
  3708     04FD  1683               	bsf	3,5	;RP0=1, select bank3
  3709     04FE  1703               	bsf	3,6	;RP1=1, select bank3
  3710     04FF  07C5               	addwf	__doprnt@prec^(0+384),f
  3711     0500  0A45               	incf	__doprnt@prec^(0+384),w
  3712     0501  1D03               	btfss	3,2
  3713     0502  2D04               	goto	u8271
  3714     0503  2D05               	goto	u8270
  3715     0504                     u8271:
  3716     0504  2C61               	goto	l8297
  3717     0505                     u8270:
  3718     0505                     l8309:
  3719                           
  3720                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3721     0505  1683               	bsf	3,5	;RP0=1, select bank1
  3722     0506  1303               	bcf	3,6	;RP1=0, select bank1
  3723     0507  083C               	movf	(__doprnt@f+1)^(0+128),w
  3724     0508  1683               	bsf	3,5	;RP0=1, select bank3
  3725     0509  1703               	bsf	3,6	;RP1=1, select bank3
  3726     050A  00C2               	movwf	(??__doprnt^(0+384)+1)
  3727     050B  1683               	bsf	3,5	;RP0=1, select bank1
  3728     050C  1303               	bcf	3,6	;RP1=0, select bank1
  3729     050D  083B               	movf	__doprnt@f^(0+128),w
  3730     050E  1683               	bsf	3,5	;RP0=1, select bank3
  3731     050F  1703               	bsf	3,6	;RP1=1, select bank3
  3732     0510  00C1               	movwf	??__doprnt^(0+384)
  3733     0511  1683               	bsf	3,5	;RP0=1, select bank1
  3734     0512  1303               	bcf	3,6	;RP1=0, select bank1
  3735     0513  0ABB               	incf	__doprnt@f^(0+128),f
  3736     0514  1903               	skipnz
  3737     0515  0ABC               	incf	(__doprnt@f+1)^(0+128),f
  3738     0516  1683               	bsf	3,5	;RP0=1, select bank3
  3739     0517  1703               	bsf	3,6	;RP1=1, select bank3
  3740     0518  0842               	movf	(??__doprnt+1)^(0+384),w
  3741     0519  1283               	bcf	3,5	;RP0=0, select bank0
  3742     051A  1303               	bcf	3,6	;RP1=0, select bank0
  3743     051B  00FF               	movwf	btemp+1
  3744     051C  1683               	bsf	3,5	;RP0=1, select bank3
  3745     051D  1703               	bsf	3,6	;RP1=1, select bank3
  3746     051E  0841               	movf	??__doprnt^(0+384),w
  3747     051F  0084               	movwf	4
  3748     0520  1283               	bcf	3,5	;RP0=0, select bank0
  3749     0521  1303               	bcf	3,6	;RP1=0, select bank0
  3750     0522  120A  118A  2700  120A  118A  	fcall	stringtab
  3751     0527  1683               	bsf	3,5	;RP0=1, select bank3
  3752     0528  1703               	bsf	3,6	;RP1=1, select bank3
  3753     0529  00C9               	movwf	__doprnt@c^(0+384)
  3754     052A  0849               	movf	__doprnt@c^(0+384),w
  3755     052B  1D03               	btfss	3,2
  3756     052C  2D2E               	goto	u8281
  3757     052D  2D2F               	goto	u8280
  3758     052E                     u8281:
  3759     052E  2AF1               	goto	l8245
  3760     052F                     u8280:
  3761     052F                     l8311:
  3762                           
  3763                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1566:  return 0;
  3764     052F  1683               	bsf	3,5	;RP0=1, select bank1
  3765     0530  1303               	bcf	3,6	;RP1=0, select bank1
  3766     0531  01B9               	clrf	?__doprnt^(0+128)
  3767     0532  01BA               	clrf	(?__doprnt+1)^(0+128)
  3768     0533                     l1255:
  3769     0533  0008               	return
  3770     0534                     __end_of__doprnt:
  3771                           
  3772                           	psect	text5
  3773     06FF                     __ptext5:	
  3774 ;; *************** function _putch *****************
  3775 ;; Defined at:
  3776 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\putch.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;  c               1   13[BANK1 ] unsigned char 
  3779 ;; Auto vars:     Size  Location     Type
  3780 ;;		None
  3781 ;; Return value:  Size  Location     Type
  3782 ;;                  1    wreg      void 
  3783 ;; Registers used:
  3784 ;;		None
  3785 ;; Tracked objects:
  3786 ;;		On entry : 0/0
  3787 ;;		On exit  : 0/0
  3788 ;;		Unchanged: 0/0
  3789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3790 ;;      Params:         0       0       1       0       0
  3791 ;;      Locals:         0       0       0       0       0
  3792 ;;      Temps:          0       0       0       0       0
  3793 ;;      Totals:         0       0       1       0       0
  3794 ;;Total ram usage:        1 bytes
  3795 ;; Hardware stack levels used: 1
  3796 ;; Hardware stack levels required when called: 7
  3797 ;; This function calls:
  3798 ;;		Nothing
  3799 ;; This function is called by:
  3800 ;;		_printf
  3801 ;;		i1__doprnt
  3802 ;;		__doprnt
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805                           
  3806     06FF                     _putch:	
  3807                           ;psect for function _putch
  3808                           
  3809     06FF                     l1258:	
  3810                           ;incstack = 0
  3811 ;; hardware stack exceeded
  3812                           ; Regs used in _putch: []
  3813                           
  3814     06FF  0008               	return
  3815     0700                     __end_of_putch:
  3816                           
  3817                           	psect	text6
  3818     1660                     __ptext6:	
  3819 ;; *************** function ___lwmod *****************
  3820 ;; Defined at:
  3821 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;  divisor         2   20[BANK1 ] unsigned int 
  3824 ;;  dividend        2   22[BANK1 ] unsigned int 
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;  counter         1   24[BANK1 ] unsigned char 
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  2   20[BANK1 ] unsigned int 
  3829 ;; Registers used:
  3830 ;;		wreg, status,2, status,0, btemp+1
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3836 ;;      Params:         0       0       4       0       0
  3837 ;;      Locals:         0       0       1       0       0
  3838 ;;      Temps:          0       0       0       0       0
  3839 ;;      Totals:         0       0       5       0       0
  3840 ;;Total ram usage:        5 bytes
  3841 ;; Hardware stack levels used: 1
  3842 ;; Hardware stack levels required when called: 7
  3843 ;; This function calls:
  3844 ;;		Nothing
  3845 ;; This function is called by:
  3846 ;;		__doprnt
  3847 ;; This function uses a non-reentrant model
  3848 ;;
  3849                           
  3850     1660                     ___lwmod:	
  3851                           ;psect for function ___lwmod
  3852                           
  3853     1660                     l6657:	
  3854                           ;incstack = 0
  3855 ;; hardware stack exceeded
  3856                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  3857                           
  3858     1660  1683               	bsf	3,5	;RP0=1, select bank1
  3859     1661  1303               	bcf	3,6	;RP1=0, select bank1
  3860     1662  0834               	movf	___lwmod@divisor^(0+128),w
  3861     1663  0435               	iorwf	(___lwmod@divisor+1)^(0+128),w
  3862     1664  1903               	btfsc	3,2
  3863     1665  2E67               	goto	u6601
  3864     1666  2E68               	goto	u6600
  3865     1667                     u6601:
  3866     1667  2E97               	goto	l6675
  3867     1668                     u6600:
  3868     1668                     l6659:
  3869     1668  01B8               	clrf	___lwmod@counter^(0+128)
  3870     1669  0AB8               	incf	___lwmod@counter^(0+128),f
  3871     166A  2E76               	goto	l6665
  3872     166B                     l6661:
  3873     166B  3001               	movlw	1
  3874     166C                     u6615:
  3875     166C  1003               	clrc
  3876     166D  0DB4               	rlf	___lwmod@divisor^(0+128),f
  3877     166E  0DB5               	rlf	(___lwmod@divisor+1)^(0+128),f
  3878     166F  3EFF               	addlw	-1
  3879     1670  1D03               	skipz
  3880     1671  2E6C               	goto	u6615
  3881     1672                     l6663:
  3882     1672  3001               	movlw	1
  3883     1673  00FF               	movwf	btemp+1
  3884     1674  087F               	movf	btemp+1,w
  3885     1675  07B8               	addwf	___lwmod@counter^(0+128),f
  3886     1676                     l6665:
  3887     1676  1FB5               	btfss	(___lwmod@divisor+1)^(0+128),7
  3888     1677  2E79               	goto	u6621
  3889     1678  2E7A               	goto	u6620
  3890     1679                     u6621:
  3891     1679  2E6B               	goto	l6661
  3892     167A                     u6620:
  3893     167A                     l6667:
  3894     167A  0835               	movf	(___lwmod@divisor+1)^(0+128),w
  3895     167B  0237               	subwf	(___lwmod@dividend+1)^(0+128),w
  3896     167C  1D03               	skipz
  3897     167D  2E80               	goto	u6635
  3898     167E  0834               	movf	___lwmod@divisor^(0+128),w
  3899     167F  0236               	subwf	___lwmod@dividend^(0+128),w
  3900     1680                     u6635:
  3901     1680  1C03               	skipc
  3902     1681  2E83               	goto	u6631
  3903     1682  2E84               	goto	u6630
  3904     1683                     u6631:
  3905     1683  2E8A               	goto	l6671
  3906     1684                     u6630:
  3907     1684                     l6669:
  3908     1684  0834               	movf	___lwmod@divisor^(0+128),w
  3909     1685  02B6               	subwf	___lwmod@dividend^(0+128),f
  3910     1686  0835               	movf	(___lwmod@divisor+1)^(0+128),w
  3911     1687  1C03               	skipc
  3912     1688  03B7               	decf	(___lwmod@dividend+1)^(0+128),f
  3913     1689  02B7               	subwf	(___lwmod@dividend+1)^(0+128),f
  3914     168A                     l6671:
  3915     168A  3001               	movlw	1
  3916     168B                     u6645:
  3917     168B  1003               	clrc
  3918     168C  0CB5               	rrf	(___lwmod@divisor+1)^(0+128),f
  3919     168D  0CB4               	rrf	___lwmod@divisor^(0+128),f
  3920     168E  3EFF               	addlw	-1
  3921     168F  1D03               	skipz
  3922     1690  2E8B               	goto	u6645
  3923     1691                     l6673:
  3924     1691  3001               	movlw	1
  3925     1692  02B8               	subwf	___lwmod@counter^(0+128),f
  3926     1693  1D03               	btfss	3,2
  3927     1694  2E96               	goto	u6651
  3928     1695  2E97               	goto	u6650
  3929     1696                     u6651:
  3930     1696  2E7A               	goto	l6667
  3931     1697                     u6650:
  3932     1697                     l6675:
  3933     1697  0837               	movf	(___lwmod@dividend+1)^(0+128),w
  3934     1698  00B5               	movwf	(?___lwmod+1)^(0+128)
  3935     1699  0836               	movf	___lwmod@dividend^(0+128),w
  3936     169A  00B4               	movwf	?___lwmod^(0+128)
  3937     169B                     l953:
  3938     169B  0008               	return
  3939     169C                     __end_of___lwmod:
  3940                           
  3941                           	psect	text7
  3942     1767                     __ptext7:	
  3943 ;; *************** function ___lwdiv *****************
  3944 ;; Defined at:
  3945 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;  divisor         2   13[BANK1 ] unsigned int 
  3948 ;;  dividend        2   15[BANK1 ] unsigned int 
  3949 ;; Auto vars:     Size  Location     Type
  3950 ;;  quotient        2   18[BANK1 ] unsigned int 
  3951 ;;  counter         1   17[BANK1 ] unsigned char 
  3952 ;; Return value:  Size  Location     Type
  3953 ;;                  2   13[BANK1 ] unsigned int 
  3954 ;; Registers used:
  3955 ;;		wreg, status,2, status,0, btemp+1
  3956 ;; Tracked objects:
  3957 ;;		On entry : 0/0
  3958 ;;		On exit  : 0/0
  3959 ;;		Unchanged: 0/0
  3960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3961 ;;      Params:         0       0       4       0       0
  3962 ;;      Locals:         0       0       3       0       0
  3963 ;;      Temps:          0       0       0       0       0
  3964 ;;      Totals:         0       0       7       0       0
  3965 ;;Total ram usage:        7 bytes
  3966 ;; Hardware stack levels used: 1
  3967 ;; Hardware stack levels required when called: 7
  3968 ;; This function calls:
  3969 ;;		Nothing
  3970 ;; This function is called by:
  3971 ;;		__doprnt
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974                           
  3975     1767                     ___lwdiv:	
  3976                           ;psect for function ___lwdiv
  3977                           
  3978     1767                     l6631:	
  3979                           ;incstack = 0
  3980 ;; hardware stack exceeded
  3981                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  3982                           
  3983     1767  1683               	bsf	3,5	;RP0=1, select bank1
  3984     1768  1303               	bcf	3,6	;RP1=0, select bank1
  3985     1769  01B2               	clrf	___lwdiv@quotient^(0+128)
  3986     176A  01B3               	clrf	(___lwdiv@quotient+1)^(0+128)
  3987     176B                     l6633:
  3988     176B  082D               	movf	___lwdiv@divisor^(0+128),w
  3989     176C  042E               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  3990     176D  1903               	btfsc	3,2
  3991     176E  2F70               	goto	u6531
  3992     176F  2F71               	goto	u6530
  3993     1770                     u6531:
  3994     1770  2FA8               	goto	l6653
  3995     1771                     u6530:
  3996     1771                     l6635:
  3997     1771  01B1               	clrf	___lwdiv@counter^(0+128)
  3998     1772  0AB1               	incf	___lwdiv@counter^(0+128),f
  3999     1773  2F7F               	goto	l6641
  4000     1774                     l6637:
  4001     1774  3001               	movlw	1
  4002     1775                     u6545:
  4003     1775  1003               	clrc
  4004     1776  0DAD               	rlf	___lwdiv@divisor^(0+128),f
  4005     1777  0DAE               	rlf	(___lwdiv@divisor+1)^(0+128),f
  4006     1778  3EFF               	addlw	-1
  4007     1779  1D03               	skipz
  4008     177A  2F75               	goto	u6545
  4009     177B                     l6639:
  4010     177B  3001               	movlw	1
  4011     177C  00FF               	movwf	btemp+1
  4012     177D  087F               	movf	btemp+1,w
  4013     177E  07B1               	addwf	___lwdiv@counter^(0+128),f
  4014     177F                     l6641:
  4015     177F  1FAE               	btfss	(___lwdiv@divisor+1)^(0+128),7
  4016     1780  2F82               	goto	u6551
  4017     1781  2F83               	goto	u6550
  4018     1782                     u6551:
  4019     1782  2F74               	goto	l6637
  4020     1783                     u6550:
  4021     1783                     l6643:
  4022     1783  3001               	movlw	1
  4023     1784                     u6565:
  4024     1784  1003               	clrc
  4025     1785  0DB2               	rlf	___lwdiv@quotient^(0+128),f
  4026     1786  0DB3               	rlf	(___lwdiv@quotient+1)^(0+128),f
  4027     1787  3EFF               	addlw	-1
  4028     1788  1D03               	skipz
  4029     1789  2F84               	goto	u6565
  4030     178A  082E               	movf	(___lwdiv@divisor+1)^(0+128),w
  4031     178B  0230               	subwf	(___lwdiv@dividend+1)^(0+128),w
  4032     178C  1D03               	skipz
  4033     178D  2F90               	goto	u6575
  4034     178E  082D               	movf	___lwdiv@divisor^(0+128),w
  4035     178F  022F               	subwf	___lwdiv@dividend^(0+128),w
  4036     1790                     u6575:
  4037     1790  1C03               	skipc
  4038     1791  2F93               	goto	u6571
  4039     1792  2F94               	goto	u6570
  4040     1793                     u6571:
  4041     1793  2F9B               	goto	l6649
  4042     1794                     u6570:
  4043     1794                     l6645:
  4044     1794  082D               	movf	___lwdiv@divisor^(0+128),w
  4045     1795  02AF               	subwf	___lwdiv@dividend^(0+128),f
  4046     1796  082E               	movf	(___lwdiv@divisor+1)^(0+128),w
  4047     1797  1C03               	skipc
  4048     1798  03B0               	decf	(___lwdiv@dividend+1)^(0+128),f
  4049     1799  02B0               	subwf	(___lwdiv@dividend+1)^(0+128),f
  4050     179A                     l6647:
  4051     179A  1432               	bsf	___lwdiv@quotient^(0+128),0
  4052     179B                     l6649:
  4053     179B  3001               	movlw	1
  4054     179C                     u6585:
  4055     179C  1003               	clrc
  4056     179D  0CAE               	rrf	(___lwdiv@divisor+1)^(0+128),f
  4057     179E  0CAD               	rrf	___lwdiv@divisor^(0+128),f
  4058     179F  3EFF               	addlw	-1
  4059     17A0  1D03               	skipz
  4060     17A1  2F9C               	goto	u6585
  4061     17A2                     l6651:
  4062     17A2  3001               	movlw	1
  4063     17A3  02B1               	subwf	___lwdiv@counter^(0+128),f
  4064     17A4  1D03               	btfss	3,2
  4065     17A5  2FA7               	goto	u6591
  4066     17A6  2FA8               	goto	u6590
  4067     17A7                     u6591:
  4068     17A7  2F83               	goto	l6643
  4069     17A8                     u6590:
  4070     17A8                     l6653:
  4071     17A8  0833               	movf	(___lwdiv@quotient+1)^(0+128),w
  4072     17A9  00AE               	movwf	(?___lwdiv+1)^(0+128)
  4073     17AA  0832               	movf	___lwdiv@quotient^(0+128),w
  4074     17AB  00AD               	movwf	?___lwdiv^(0+128)
  4075     17AC                     l943:
  4076     17AC  0008               	return
  4077     17AD                     __end_of___lwdiv:
  4078                           
  4079                           	psect	text8
  4080     1721                     __ptext8:	
  4081 ;; *************** function _lcd_puts *****************
  4082 ;; Defined at:
  4083 ;;		line 65 in file "lcd.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;  str             2   13[BANK1 ] PTR const unsigned char 
  4086 ;;		 -> STR_47(11), STR_44(12), STR_42(12), estado_executa_muda@tmp(17), 
  4087 ;;		 -> STR_41(14), STR_40(7), STR_39(7), STR_38(7), 
  4088 ;;		 -> STR_37(6), STR_36(7), STR_35(7), STR_34(6), 
  4089 ;;		 -> STR_33(11), STR_32(11), STR_31(11), STR_30(9), 
  4090 ;;		 -> STR_29(15), STR_28(14), STR_27(7), STR_26(8), 
  4091 ;;		 -> STR_25(10), STR_24(15), STR_23(9), mq_mostra@temp_str(16), 
  4092 ;;		 -> STR_21(11), STR_20(11), STR_19(11), STR_18(9), 
  4093 ;;		 -> adcon_mostra@temp_str(9), STR_16(14), STR_15(11), STR_14(11), 
  4094 ;;		 -> STR_13(11), STR_12(9), STR_11(7), STR_10(7), 
  4095 ;;		 -> STR_9(7), STR_8(6), STR_7(7), STR_6(7), 
  4096 ;;		 -> STR_5(6), STR_4(11), STR_3(2), STR_2(14), 
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;  cmd             1   15[BANK1 ] unsigned char 
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  1    wreg      void 
  4101 ;; Registers used:
  4102 ;;		wreg, fsr0l, fsr0h, btemp+1, pclath
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4108 ;;      Params:         0       0       2       0       0
  4109 ;;      Locals:         0       0       1       0       0
  4110 ;;      Temps:          0       0       0       0       0
  4111 ;;      Totals:         0       0       3       0       0
  4112 ;;Total ram usage:        3 bytes
  4113 ;; Hardware stack levels used: 1
  4114 ;; Hardware stack levels required when called: 7
  4115 ;; This function calls:
  4116 ;;		Nothing
  4117 ;; This function is called by:
  4118 ;;		_main
  4119 ;;		_mq_mostra
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123     1721                     _lcd_puts:	
  4124                           ;psect for function _lcd_puts
  4125                           
  4126     1721                     l7027:	
  4127                           ;incstack = 0
  4128 ;; using string table level
  4129                           ; Regs used in _lcd_puts: [wreg-fsr0h+btemp+1+pclath]
  4130                           
  4131                           
  4132                           ;lcd.c: 66:   uint8_t cmd;;lcd.c: 67:   RC0 = 1;
  4133     1721  1283               	bcf	3,5	;RP0=0, select bank0
  4134     1722  1303               	bcf	3,6	;RP1=0, select bank0
  4135     1723  1407               	bsf	7,0	;volatile
  4136                           
  4137                           ;lcd.c: 69:   while (*str) {
  4138     1724  2F50               	goto	l7035
  4139     1725                     l7029:
  4140                           
  4141                           ;lcd.c: 92:         cmd = *str;
  4142     1725  1683               	bsf	3,5	;RP0=1, select bank1
  4143     1726  1303               	bcf	3,6	;RP1=0, select bank1
  4144     1727  082E               	movf	(lcd_puts@str+1)^(0+128),w
  4145     1728  1283               	bcf	3,5	;RP0=0, select bank0
  4146     1729  1303               	bcf	3,6	;RP1=0, select bank0
  4147     172A  00FF               	movwf	btemp+1
  4148     172B  1683               	bsf	3,5	;RP0=1, select bank1
  4149     172C  1303               	bcf	3,6	;RP1=0, select bank1
  4150     172D  082D               	movf	lcd_puts@str^(0+128),w
  4151     172E  0084               	movwf	4
  4152     172F  1283               	bcf	3,5	;RP0=0, select bank0
  4153     1730  1303               	bcf	3,6	;RP1=0, select bank0
  4154     1731  120A  118A  2700  160A  118A  	fcall	stringtab
  4155     1736  1683               	bsf	3,5	;RP0=1, select bank1
  4156     1737  1303               	bcf	3,6	;RP1=0, select bank1
  4157     1738  00AF               	movwf	lcd_puts@cmd^(0+128)
  4158     1739                     l102:	
  4159                           ;lcd.c: 95:         }
  4160                           
  4161                           
  4162                           ;lcd.c: 93:         while (!TXIF) {
  4163     1739  1283               	bcf	3,5	;RP0=0, select bank0
  4164     173A  1E0C               	btfss	12,4	;volatile
  4165     173B  2F3D               	goto	u7041
  4166     173C  2F3E               	goto	u7040
  4167     173D                     u7041:
  4168     173D  2F39               	goto	l102
  4169     173E                     u7040:
  4170     173E                     l7031:
  4171                           
  4172                           ;lcd.c: 96:         TXREG = cmd;
  4173     173E  1683               	bsf	3,5	;RP0=1, select bank1
  4174     173F  1303               	bcf	3,6	;RP1=0, select bank1
  4175     1740  082F               	movf	lcd_puts@cmd^(0+128),w
  4176     1741  1283               	bcf	3,5	;RP0=0, select bank0
  4177     1742  1303               	bcf	3,6	;RP1=0, select bank0
  4178     1743  0099               	movwf	25	;volatile
  4179     1744                     l105:	
  4180                           ;lcd.c: 100:         }
  4181                           
  4182                           
  4183                           ;lcd.c: 98:         while (!TXIF) {
  4184     1744  1E0C               	btfss	12,4	;volatile
  4185     1745  2F47               	goto	u7051
  4186     1746  2F48               	goto	u7050
  4187     1747                     u7051:
  4188     1747  2F44               	goto	l105
  4189     1748                     u7050:
  4190     1748                     l7033:
  4191                           
  4192                           ;lcd.c: 115:     str++;
  4193     1748  3001               	movlw	1
  4194     1749  1683               	bsf	3,5	;RP0=1, select bank1
  4195     174A  1303               	bcf	3,6	;RP1=0, select bank1
  4196     174B  07AD               	addwf	lcd_puts@str^(0+128),f
  4197     174C  1803               	skipnc
  4198     174D  0AAE               	incf	(lcd_puts@str+1)^(0+128),f
  4199     174E  3000               	movlw	0
  4200     174F  07AE               	addwf	(lcd_puts@str+1)^(0+128),f
  4201     1750                     l7035:
  4202                           
  4203                           ;lcd.c: 69:   while (*str) {
  4204     1750  1683               	bsf	3,5	;RP0=1, select bank1
  4205     1751  1303               	bcf	3,6	;RP1=0, select bank1
  4206     1752  082E               	movf	(lcd_puts@str+1)^(0+128),w
  4207     1753  1283               	bcf	3,5	;RP0=0, select bank0
  4208     1754  1303               	bcf	3,6	;RP1=0, select bank0
  4209     1755  00FF               	movwf	btemp+1
  4210     1756  1683               	bsf	3,5	;RP0=1, select bank1
  4211     1757  1303               	bcf	3,6	;RP1=0, select bank1
  4212     1758  082D               	movf	lcd_puts@str^(0+128),w
  4213     1759  0084               	movwf	4
  4214     175A  1283               	bcf	3,5	;RP0=0, select bank0
  4215     175B  1303               	bcf	3,6	;RP1=0, select bank0
  4216     175C  120A  118A  2700  160A  118A  	fcall	stringtab
  4217     1761  3A00               	xorlw	0
  4218     1762  1D03               	skipz
  4219     1763  2F65               	goto	u7061
  4220     1764  2F66               	goto	u7060
  4221     1765                     u7061:
  4222     1765  2F25               	goto	l7029
  4223     1766                     u7060:
  4224     1766                     l109:
  4225     1766  0008               	return
  4226     1767                     __end_of_lcd_puts:
  4227                           
  4228                           	psect	text9
  4229     1625                     __ptext9:	
  4230 ;; *************** function _lcd_init *****************
  4231 ;; Defined at:
  4232 ;;		line 120 in file "lcd.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;		None
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;		None
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  1    wreg      void 
  4239 ;; Registers used:
  4240 ;;		wreg, status,2, status,0, pclath, cstack
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4246 ;;      Params:         0       0       0       0       0
  4247 ;;      Locals:         0       0       0       0       0
  4248 ;;      Temps:          0       0       0       0       0
  4249 ;;      Totals:         0       0       0       0       0
  4250 ;;Total ram usage:        0 bytes
  4251 ;; Hardware stack levels used: 1
  4252 ;; Hardware stack levels required when called: 8
  4253 ;; This function calls:
  4254 ;;		_lcd_write
  4255 ;; This function is called by:
  4256 ;;		_main
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260     1625                     _lcd_init:	
  4261                           ;psect for function _lcd_init
  4262                           
  4263     1625                     l7013:	
  4264                           ;incstack = 0
  4265 ;; hardware stack exceeded
  4266                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4267                           
  4268                           
  4269                           ;lcd.c: 121:     TRISC0 = TRISC1 = TRISC2 = TRISB2 = TRISB1 = TRISB0 = 0;
  4270     1625  1683               	bsf	3,5	;RP0=1, select bank1
  4271     1626  1303               	bcf	3,6	;RP1=0, select bank1
  4272     1627  1006               	bcf	6,0	;volatile
  4273     1628  1086               	bcf	6,1	;volatile
  4274     1629  1106               	bcf	6,2	;volatile
  4275     162A  1107               	bcf	7,2	;volatile
  4276     162B  1087               	bcf	7,1	;volatile
  4277     162C  1007               	bcf	7,0	;volatile
  4278                           
  4279                           ;lcd.c: 122:     RC0 = RC1 = RC2 = RB2 = RB1 = RB0 = 0;
  4280     162D  1283               	bcf	3,5	;RP0=0, select bank0
  4281     162E  1303               	bcf	3,6	;RP1=0, select bank0
  4282     162F  1006               	bcf	6,0	;volatile
  4283     1630  1086               	bcf	6,1	;volatile
  4284     1631  1106               	bcf	6,2	;volatile
  4285     1632  1107               	bcf	7,2	;volatile
  4286     1633  1087               	bcf	7,1	;volatile
  4287     1634  1007               	bcf	7,0	;volatile
  4288     1635                     l7015:
  4289                           
  4290                           ;lcd.c: 123:     lcd_write(2);
  4291     1635  3002               	movlw	2
  4292     1636  160A  118A  269C  160A  118A  	fcall	_lcd_write
  4293                           
  4294                           ;lcd.c: 124:     lcd_write(8);
  4295     163B  3008               	movlw	8
  4296     163C  160A  118A  269C  160A  118A  	fcall	_lcd_write
  4297                           
  4298                           ;lcd.c: 125:     lcd_write(0);
  4299     1641  3000               	movlw	0
  4300     1642  160A  118A  269C  160A  118A  	fcall	_lcd_write
  4301                           
  4302                           ;lcd.c: 126:     lcd_write(0);
  4303     1647  3000               	movlw	0
  4304     1648  160A  118A  269C  160A  118A  	fcall	_lcd_write
  4305                           
  4306                           ;lcd.c: 127:     lcd_write(0xc);
  4307     164D  300C               	movlw	12
  4308     164E  160A  118A  269C  160A  118A  	fcall	_lcd_write
  4309                           
  4310                           ;lcd.c: 128:     lcd_write(0);
  4311     1653  3000               	movlw	0
  4312     1654  160A  118A  269C  160A  118A  	fcall	_lcd_write
  4313                           
  4314                           ;lcd.c: 129:     lcd_write(6);
  4315     1659  3006               	movlw	6
  4316     165A  160A  118A  269C  160A  118A  	fcall	_lcd_write
  4317     165F                     l112:
  4318     165F  0008               	return
  4319     1660                     __end_of_lcd_init:
  4320                           
  4321                           	psect	text10
  4322     15B4                     __ptext10:	
  4323 ;; *************** function _lcd_goto *****************
  4324 ;; Defined at:
  4325 ;;		line 47 in file "lcd.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;  y               1    wreg     unsigned char 
  4328 ;;  x               1   15[BANK1 ] unsigned char 
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;  y               1   18[BANK1 ] unsigned char 
  4331 ;; Return value:  Size  Location     Type
  4332 ;;                  1    wreg      void 
  4333 ;; Registers used:
  4334 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4335 ;; Tracked objects:
  4336 ;;		On entry : 0/0
  4337 ;;		On exit  : 0/0
  4338 ;;		Unchanged: 0/0
  4339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4340 ;;      Params:         0       0       1       0       0
  4341 ;;      Locals:         0       0       1       0       0
  4342 ;;      Temps:          0       0       2       0       0
  4343 ;;      Totals:         0       0       4       0       0
  4344 ;;Total ram usage:        4 bytes
  4345 ;; Hardware stack levels used: 1
  4346 ;; Hardware stack levels required when called: 8
  4347 ;; This function calls:
  4348 ;;		_lcd_write
  4349 ;; This function is called by:
  4350 ;;		_main
  4351 ;;		_mq_mostra
  4352 ;; This function uses a non-reentrant model
  4353 ;;
  4354                           
  4355     15B4                     _lcd_goto:	
  4356                           ;psect for function _lcd_goto
  4357                           
  4358                           
  4359                           ;incstack = 0
  4360 ;; hardware stack exceeded
  4361                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4362                           ;lcd_goto@y stored from wreg
  4363     15B4  1683               	bsf	3,5	;RP0=1, select bank1
  4364     15B5  1303               	bcf	3,6	;RP1=0, select bank1
  4365     15B6  00B2               	movwf	lcd_goto@y^(0+128)
  4366     15B7                     l7037:
  4367                           
  4368                           ;lcd.c: 48:     RC0 = 0;
  4369     15B7  1283               	bcf	3,5	;RP0=0, select bank0
  4370     15B8  1303               	bcf	3,6	;RP1=0, select bank0
  4371     15B9  1007               	bcf	7,0	;volatile
  4372                           
  4373                           ;lcd.c: 49:     switch (y) {
  4374     15BA  2DC9               	goto	l7045
  4375     15BB                     l7039:
  4376                           
  4377                           ;lcd.c: 51:             lcd_write(8);
  4378     15BB  3008               	movlw	8
  4379     15BC  160A  118A  269C  160A  118A  	fcall	_lcd_write
  4380                           
  4381                           ;lcd.c: 52:             break;
  4382     15C1  2DDB               	goto	l7047
  4383     15C2                     l7041:
  4384                           
  4385                           ;lcd.c: 54:             lcd_write(0xc);
  4386     15C2  300C               	movlw	12
  4387     15C3  160A  118A  269C  160A  118A  	fcall	_lcd_write
  4388                           
  4389                           ;lcd.c: 55:             break;
  4390     15C8  2DDB               	goto	l7047
  4391     15C9                     l7045:
  4392     15C9  1683               	bsf	3,5	;RP0=1, select bank1
  4393     15CA  1303               	bcf	3,6	;RP1=0, select bank1
  4394     15CB  0832               	movf	lcd_goto@y^(0+128),w
  4395     15CC  00B0               	movwf	??_lcd_goto^(0+128)
  4396     15CD  01B1               	clrf	(??_lcd_goto^(0+128)+1)
  4397                           
  4398                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4399                           ; Switch size 1, requested type "simple"
  4400                           ; Number of cases is 1, Range of values is 0 to 0
  4401                           ; switch strategies available:
  4402                           ; Name         Instructions Cycles
  4403                           ; simple_byte            4     3 (average)
  4404                           ; direct_byte           11     8 (fixed)
  4405                           ; jumptable            260     6 (fixed)
  4406                           ;	Chosen strategy is simple_byte
  4407     15CE  0831               	movf	(??_lcd_goto+1)^(0+128),w
  4408     15CF  3A00               	xorlw	0	; case 0
  4409     15D0  1903               	skipnz
  4410     15D1  2DD3               	goto	l8849
  4411     15D2  2DDB               	goto	l7047
  4412     15D3                     l8849:
  4413                           
  4414                           ; Switch size 1, requested type "simple"
  4415                           ; Number of cases is 2, Range of values is 1 to 2
  4416                           ; switch strategies available:
  4417                           ; Name         Instructions Cycles
  4418                           ; simple_byte            7     4 (average)
  4419                           ; direct_byte           17    11 (fixed)
  4420                           ; jumptable            263     9 (fixed)
  4421                           ;	Chosen strategy is simple_byte
  4422     15D3  0830               	movf	??_lcd_goto^(0+128),w
  4423     15D4  3A01               	xorlw	1	; case 1
  4424     15D5  1903               	skipnz
  4425     15D6  2DBB               	goto	l7039
  4426     15D7  3A03               	xorlw	3	; case 2
  4427     15D8  1903               	skipnz
  4428     15D9  2DC2               	goto	l7041
  4429     15DA  2DDB               	goto	l7047
  4430     15DB                     l7047:
  4431                           
  4432                           ;lcd.c: 57:     lcd_write(x);
  4433     15DB  1683               	bsf	3,5	;RP0=1, select bank1
  4434     15DC  1303               	bcf	3,6	;RP1=0, select bank1
  4435     15DD  082F               	movf	lcd_goto@x^(0+128),w
  4436     15DE  160A  118A  269C  160A  118A  	fcall	_lcd_write
  4437     15E3                     l7049:
  4438                           
  4439                           ;lcd.c: 58:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4440     15E3  300C               	movlw	12
  4441     15E4  1683               	bsf	3,5	;RP0=1, select bank1
  4442     15E5  1303               	bcf	3,6	;RP1=0, select bank1
  4443     15E6  00B0               	movwf	??_lcd_goto^(0+128)
  4444     15E7                     u8537:
  4445     15E7  0BB0               	decfsz	??_lcd_goto^(0+128),f
  4446     15E8  2DE7               	goto	u8537
  4447     15E9  0000               	nop
  4448     15EA                     l97:
  4449     15EA  0008               	return
  4450     15EB                     __end_of_lcd_goto:
  4451                           
  4452                           	psect	text11
  4453     169C                     __ptext11:	
  4454 ;; *************** function _lcd_write *****************
  4455 ;; Defined at:
  4456 ;;		line 14 in file "lcd.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;  c               1    wreg     unsigned char 
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;  c               1   14[BANK1 ] unsigned char 
  4461 ;; Return value:  Size  Location     Type
  4462 ;;                  1    wreg      void 
  4463 ;; Registers used:
  4464 ;;		wreg
  4465 ;; Tracked objects:
  4466 ;;		On entry : 0/0
  4467 ;;		On exit  : 0/0
  4468 ;;		Unchanged: 0/0
  4469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4470 ;;      Params:         0       0       0       0       0
  4471 ;;      Locals:         0       0       1       0       0
  4472 ;;      Temps:          0       0       1       0       0
  4473 ;;      Totals:         0       0       2       0       0
  4474 ;;Total ram usage:        2 bytes
  4475 ;; Hardware stack levels used: 1
  4476 ;; Hardware stack levels required when called: 7
  4477 ;; This function calls:
  4478 ;;		Nothing
  4479 ;; This function is called by:
  4480 ;;		_lcd_goto
  4481 ;;		_lcd_init
  4482 ;; This function uses a non-reentrant model
  4483 ;;
  4484                           
  4485     169C                     _lcd_write:	
  4486                           ;psect for function _lcd_write
  4487                           
  4488                           
  4489                           ;incstack = 0
  4490 ;; hardware stack exceeded
  4491                           ; Regs used in _lcd_write: [wreg]
  4492                           ;lcd_write@c stored from wreg
  4493     169C  1683               	bsf	3,5	;RP0=1, select bank1
  4494     169D  1303               	bcf	3,6	;RP1=0, select bank1
  4495     169E  00AE               	movwf	lcd_write@c^(0+128)
  4496     169F                     l6699:
  4497                           
  4498                           ;lcd.c: 15:     if (c & 0b00000001) {
  4499     169F  1C2E               	btfss	lcd_write@c^(0+128),0
  4500     16A0  2EA2               	goto	u6691
  4501     16A1  2EA3               	goto	u6690
  4502     16A2                     u6691:
  4503     16A2  2EA7               	goto	l79
  4504     16A3                     u6690:
  4505     16A3                     l6701:
  4506                           
  4507                           ;lcd.c: 16:         RC2 = 1;
  4508     16A3  1283               	bcf	3,5	;RP0=0, select bank0
  4509     16A4  1303               	bcf	3,6	;RP1=0, select bank0
  4510     16A5  1507               	bsf	7,2	;volatile
  4511                           
  4512                           ;lcd.c: 17:     } else {
  4513     16A6  2EAA               	goto	l80
  4514     16A7                     l79:
  4515                           
  4516                           ;lcd.c: 18:         RC2 = 0;
  4517     16A7  1283               	bcf	3,5	;RP0=0, select bank0
  4518     16A8  1303               	bcf	3,6	;RP1=0, select bank0
  4519     16A9  1107               	bcf	7,2	;volatile
  4520     16AA                     l80:	
  4521                           ;lcd.c: 19:     }
  4522                           
  4523                           
  4524                           ;lcd.c: 20:     if (c & 0b00000010) {
  4525     16AA  1683               	bsf	3,5	;RP0=1, select bank1
  4526     16AB  1303               	bcf	3,6	;RP1=0, select bank1
  4527     16AC  1CAE               	btfss	lcd_write@c^(0+128),1
  4528     16AD  2EAF               	goto	u6701
  4529     16AE  2EB0               	goto	u6700
  4530     16AF                     u6701:
  4531     16AF  2EB4               	goto	l81
  4532     16B0                     u6700:
  4533     16B0                     l6703:
  4534                           
  4535                           ;lcd.c: 21:         RB2 = 1;
  4536     16B0  1283               	bcf	3,5	;RP0=0, select bank0
  4537     16B1  1303               	bcf	3,6	;RP1=0, select bank0
  4538     16B2  1506               	bsf	6,2	;volatile
  4539                           
  4540                           ;lcd.c: 22:     } else {
  4541     16B3  2EB7               	goto	l82
  4542     16B4                     l81:
  4543                           
  4544                           ;lcd.c: 23:         RB2 = 0;
  4545     16B4  1283               	bcf	3,5	;RP0=0, select bank0
  4546     16B5  1303               	bcf	3,6	;RP1=0, select bank0
  4547     16B6  1106               	bcf	6,2	;volatile
  4548     16B7                     l82:	
  4549                           ;lcd.c: 24:     }
  4550                           
  4551                           
  4552                           ;lcd.c: 25:     if (c & 0b00000100) {
  4553     16B7  1683               	bsf	3,5	;RP0=1, select bank1
  4554     16B8  1303               	bcf	3,6	;RP1=0, select bank1
  4555     16B9  1D2E               	btfss	lcd_write@c^(0+128),2
  4556     16BA  2EBC               	goto	u6711
  4557     16BB  2EBD               	goto	u6710
  4558     16BC                     u6711:
  4559     16BC  2EC1               	goto	l83
  4560     16BD                     u6710:
  4561     16BD                     l6705:
  4562                           
  4563                           ;lcd.c: 26:         RB1 = 1;
  4564     16BD  1283               	bcf	3,5	;RP0=0, select bank0
  4565     16BE  1303               	bcf	3,6	;RP1=0, select bank0
  4566     16BF  1486               	bsf	6,1	;volatile
  4567                           
  4568                           ;lcd.c: 27:     } else {
  4569     16C0  2EC4               	goto	l84
  4570     16C1                     l83:
  4571                           
  4572                           ;lcd.c: 28:         RB1 = 0;
  4573     16C1  1283               	bcf	3,5	;RP0=0, select bank0
  4574     16C2  1303               	bcf	3,6	;RP1=0, select bank0
  4575     16C3  1086               	bcf	6,1	;volatile
  4576     16C4                     l84:	
  4577                           ;lcd.c: 29:     }
  4578                           
  4579                           
  4580                           ;lcd.c: 30:     if (c & 0b00001000) {
  4581     16C4  1683               	bsf	3,5	;RP0=1, select bank1
  4582     16C5  1303               	bcf	3,6	;RP1=0, select bank1
  4583     16C6  1DAE               	btfss	lcd_write@c^(0+128),3
  4584     16C7  2EC9               	goto	u6721
  4585     16C8  2ECA               	goto	u6720
  4586     16C9                     u6721:
  4587     16C9  2ECE               	goto	l85
  4588     16CA                     u6720:
  4589     16CA                     l6707:
  4590                           
  4591                           ;lcd.c: 31:         RB0 = 1;
  4592     16CA  1283               	bcf	3,5	;RP0=0, select bank0
  4593     16CB  1303               	bcf	3,6	;RP1=0, select bank0
  4594     16CC  1406               	bsf	6,0	;volatile
  4595                           
  4596                           ;lcd.c: 32:     } else {
  4597     16CD  2ED1               	goto	l6709
  4598     16CE                     l85:
  4599                           
  4600                           ;lcd.c: 33:         RB0 = 0;
  4601     16CE  1283               	bcf	3,5	;RP0=0, select bank0
  4602     16CF  1303               	bcf	3,6	;RP1=0, select bank0
  4603     16D0  1006               	bcf	6,0	;volatile
  4604     16D1                     l6709:
  4605                           
  4606                           ;lcd.c: 35:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4607     16D1  300C               	movlw	12
  4608     16D2  1683               	bsf	3,5	;RP0=1, select bank1
  4609     16D3  1303               	bcf	3,6	;RP1=0, select bank1
  4610     16D4  00AD               	movwf	??_lcd_write^(0+128)
  4611     16D5                     u8547:
  4612     16D5  0BAD               	decfsz	??_lcd_write^(0+128),f
  4613     16D6  2ED5               	goto	u8547
  4614     16D7  0000               	nop
  4615     16D8                     l6711:
  4616                           
  4617                           ;lcd.c: 36:     RC1 = 1;
  4618     16D8  1283               	bcf	3,5	;RP0=0, select bank0
  4619     16D9  1303               	bcf	3,6	;RP1=0, select bank0
  4620     16DA  1487               	bsf	7,1	;volatile
  4621     16DB                     l6713:
  4622                           
  4623                           ;lcd.c: 37:     RC1 = 0;
  4624     16DB  1087               	bcf	7,1	;volatile
  4625     16DC                     l87:
  4626     16DC  0008               	return
  4627     16DD                     __end_of_lcd_write:
  4628                           
  4629                           	psect	text12
  4630     138E                     __ptext12:	
  4631 ;; *************** function _eeprom_read *****************
  4632 ;; Defined at:
  4633 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eeread.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;  addr            1    wreg     unsigned char 
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;  addr            1   13[BANK1 ] unsigned char 
  4638 ;; Return value:  Size  Location     Type
  4639 ;;                  1    wreg      unsigned char 
  4640 ;; Registers used:
  4641 ;;		wreg, status,2, status,0, btemp+1
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4647 ;;      Params:         0       0       0       0       0
  4648 ;;      Locals:         0       0       1       0       0
  4649 ;;      Temps:          0       0       0       0       0
  4650 ;;      Totals:         0       0       1       0       0
  4651 ;;Total ram usage:        1 bytes
  4652 ;; Hardware stack levels used: 1
  4653 ;; Hardware stack levels required when called: 7
  4654 ;; This function calls:
  4655 ;;		Nothing
  4656 ;; This function is called by:
  4657 ;;		_main
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661     138E                     _eeprom_read:	
  4662                           ;psect for function _eeprom_read
  4663                           
  4664                           
  4665                           ;incstack = 0
  4666                           ; Regs used in _eeprom_read: [wreg+status,2+status,0+btemp+1]
  4667                           ;eeprom_read@addr stored from wreg
  4668     138E  1683               	bsf	3,5	;RP0=1, select bank1
  4669     138F  1303               	bcf	3,6	;RP1=0, select bank1
  4670     1390  00AD               	movwf	eeprom_read@addr^(0+128)
  4671     1391                     l641:	
  4672                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eeread.c: 6: eeprom_read(uns
      +                          igned char addr);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eeread.c: 7:
      +                           {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eeread.c: 8:  do
  4673                           
  4674     1391  0064               	clrwdt	;# 
  4675     1392  1683               	bsf	3,5	;RP0=1, select bank3
  4676     1393  1703               	bsf	3,6	;RP1=1, select bank3
  4677     1394  188C               	btfsc	12,1	;volsfr
  4678     1395  2B97               	goto	u7071
  4679     1396  2B9A               	goto	u7070
  4680     1397                     u7071:
  4681     1397  1683               	bsf	3,5	;RP0=1, select bank1
  4682     1398  1303               	bcf	3,6	;RP1=0, select bank1
  4683     1399  2B91               	goto	l641
  4684     139A                     u7070:
  4685     139A                     l7055:
  4686                           
  4687                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eeread.c: 18:  return ( EEAD
      +                          R = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  4688     139A  1683               	bsf	3,5	;RP0=1, select bank1
  4689     139B  1303               	bcf	3,6	;RP1=0, select bank1
  4690     139C  082D               	movf	eeprom_read@addr^(0+128),w
  4691     139D  1283               	bcf	3,5	;RP0=0, select bank2
  4692     139E  1703               	bsf	3,6	;RP1=1, select bank2
  4693     139F  008D               	movwf	13	;volatile
  4694     13A0  303F               	movlw	63
  4695     13A1  00FF               	movwf	btemp+1
  4696     13A2  087F               	movf	btemp+1,w
  4697     13A3  1683               	bsf	3,5	;RP0=1, select bank3
  4698     13A4  1703               	bsf	3,6	;RP1=1, select bank3
  4699     13A5  058C               	andwf	12,f	;volsfr
  4700     13A6  140C               	bsf	12,0	;volsfr
  4701     13A7  1283               	bcf	3,5	;RP0=0, select bank2
  4702     13A8  1703               	bsf	3,6	;RP1=1, select bank2
  4703     13A9  080C               	movf	12,w	;volatile
  4704     13AA                     l643:
  4705     13AA  0008               	return
  4706     13AB                     __end_of_eeprom_read:
  4707                           
  4708                           	psect	text13
  4709     06E8                     __ptext13:	
  4710 ;; *************** function _eeprom_gravar_word *****************
  4711 ;; Defined at:
  4712 ;;		line 23 in file "eeprom.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;  end             1    wreg     unsigned char 
  4715 ;;  dado            2   15[BANK1 ] unsigned int 
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;  end             1   17[BANK1 ] unsigned char 
  4718 ;; Return value:  Size  Location     Type
  4719 ;;                  1    wreg      void 
  4720 ;; Registers used:
  4721 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4722 ;; Tracked objects:
  4723 ;;		On entry : 0/0
  4724 ;;		On exit  : 0/0
  4725 ;;		Unchanged: 0/0
  4726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4727 ;;      Params:         0       0       2       0       0
  4728 ;;      Locals:         0       0       1       0       0
  4729 ;;      Temps:          0       0       0       0       0
  4730 ;;      Totals:         0       0       3       0       0
  4731 ;;Total ram usage:        3 bytes
  4732 ;; Hardware stack levels used: 1
  4733 ;; Hardware stack levels required when called: 8
  4734 ;; This function calls:
  4735 ;;		_eeprom_write
  4736 ;; This function is called by:
  4737 ;;		_main
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741     06E8                     _eeprom_gravar_word:	
  4742                           ;psect for function _eeprom_gravar_word
  4743                           
  4744                           
  4745                           ;incstack = 0
  4746 ;; hardware stack exceeded
  4747                           ; Regs used in _eeprom_gravar_word: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4748                           ;eeprom_gravar_word@end stored from wreg
  4749     06E8  1683               	bsf	3,5	;RP0=1, select bank1
  4750     06E9  1303               	bcf	3,6	;RP1=0, select bank1
  4751     06EA  00B1               	movwf	eeprom_gravar_word@end^(0+128)
  4752     06EB                     l7059:
  4753                           
  4754                           ;eeprom.c: 30:     eeprom_write(end, dado >> 8);
  4755     06EB  0830               	movf	(eeprom_gravar_word@dado+1)^(0+128),w
  4756     06EC  00AD               	movwf	eeprom_write@value^(0+128)
  4757     06ED  0831               	movf	eeprom_gravar_word@end^(0+128),w
  4758     06EE  160A  118A  257F  120A  118A  	fcall	_eeprom_write
  4759                           
  4760                           ;eeprom.c: 32:     eeprom_write(end + 1, dado);
  4761     06F3  1683               	bsf	3,5	;RP0=1, select bank1
  4762     06F4  1303               	bcf	3,6	;RP1=0, select bank1
  4763     06F5  082F               	movf	eeprom_gravar_word@dado^(0+128),w
  4764     06F6  00AD               	movwf	eeprom_write@value^(0+128)
  4765     06F7  0831               	movf	eeprom_gravar_word@end^(0+128),w
  4766     06F8  3E01               	addlw	1
  4767     06F9  160A  118A  257F  120A  118A  	fcall	_eeprom_write
  4768     06FE                     l294:
  4769     06FE  0008               	return
  4770     06FF                     __end_of_eeprom_gravar_word:
  4771                           
  4772                           	psect	text14
  4773     157F                     __ptext14:	
  4774 ;; *************** function _eeprom_write *****************
  4775 ;; Defined at:
  4776 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eewrite.c"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;  addr            1    wreg     unsigned char 
  4779 ;;  value           1   13[BANK1 ] unsigned char 
  4780 ;; Auto vars:     Size  Location     Type
  4781 ;;  addr            1   14[BANK1 ] unsigned char 
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  1    wreg      void 
  4784 ;; Registers used:
  4785 ;;		wreg, status,2, status,0, btemp+1
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4791 ;;      Params:         0       0       1       0       0
  4792 ;;      Locals:         0       0       1       0       0
  4793 ;;      Temps:          0       0       0       0       0
  4794 ;;      Totals:         0       0       2       0       0
  4795 ;;Total ram usage:        2 bytes
  4796 ;; Hardware stack levels used: 1
  4797 ;; Hardware stack levels required when called: 7
  4798 ;; This function calls:
  4799 ;;		Nothing
  4800 ;; This function is called by:
  4801 ;;		_main
  4802 ;;		_eeprom_gravar_word
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           
  4806     157F                     _eeprom_write:	
  4807                           ;psect for function _eeprom_write
  4808                           
  4809                           
  4810                           ;incstack = 0
  4811                           ; Regs used in _eeprom_write: [wreg+status,2+status,0+btemp+1]
  4812                           ;eeprom_write@addr stored from wreg
  4813     157F  1683               	bsf	3,5	;RP0=1, select bank1
  4814     1580  1303               	bcf	3,6	;RP1=0, select bank1
  4815     1581  00AE               	movwf	eeprom_write@addr^(0+128)
  4816     1582                     l660:	
  4817                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eewrite.c: 6: eeprom_write(u
      +                          nsigned char addr, unsigned char value);C:\Program Files\Microchip\xc8\v2.41\pic\sources
      +                          \c90\pic\__eewrite.c: 7: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__ee
      +                          write.c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value); E
      +                          ECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCO
      +                          Nbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1; EEC
      +                          ON1bits.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
  4818                           
  4819     1582                     l661:
  4820     1582  1683               	bsf	3,5	;RP0=1, select bank3
  4821     1583  1703               	bsf	3,6	;RP1=1, select bank3
  4822     1584  188C               	btfsc	12,1	;volsfr
  4823     1585  2D87               	goto	u6661
  4824     1586  2D88               	goto	u6660
  4825     1587                     u6661:
  4826     1587  2D82               	goto	l661
  4827     1588                     u6660:
  4828     1588                     l6679:
  4829     1588  1683               	bsf	3,5	;RP0=1, select bank1
  4830     1589  1303               	bcf	3,6	;RP1=0, select bank1
  4831     158A  082E               	movf	eeprom_write@addr^(0+128),w
  4832     158B  1283               	bcf	3,5	;RP0=0, select bank2
  4833     158C  1703               	bsf	3,6	;RP1=1, select bank2
  4834     158D  008D               	movwf	13	;volatile
  4835     158E  1683               	bsf	3,5	;RP0=1, select bank1
  4836     158F  1303               	bcf	3,6	;RP1=0, select bank1
  4837     1590  082D               	movf	eeprom_write@value^(0+128),w
  4838     1591  1283               	bcf	3,5	;RP0=0, select bank2
  4839     1592  1703               	bsf	3,6	;RP1=1, select bank2
  4840     1593  008C               	movwf	12	;volatile
  4841     1594                     l6681:
  4842     1594  303F               	movlw	63
  4843     1595  00FF               	movwf	btemp+1
  4844     1596  087F               	movf	btemp+1,w
  4845     1597  1683               	bsf	3,5	;RP0=1, select bank3
  4846     1598  1703               	bsf	3,6	;RP1=1, select bank3
  4847     1599  058C               	andwf	12,f	;volsfr
  4848     159A                     l6683:
  4849     159A  1283               	bcf	3,5	;RP0=0, select bank0
  4850     159B  1303               	bcf	3,6	;RP1=0, select bank0
  4851     159C  1003               	bcf	3,0	;volatile
  4852     159D                     l6685:
  4853     159D  1F8B               	btfss	11,7	;volatile
  4854     159E  2DA0               	goto	u6671
  4855     159F  2DA1               	goto	u6670
  4856     15A0                     u6671:
  4857     15A0  2DA2               	goto	l664
  4858     15A1                     u6670:
  4859     15A1                     l6687:
  4860     15A1  1403               	bsf	3,0	;volatile
  4861     15A2                     l664:
  4862     15A2  138B               	bcf	11,7	;volatile
  4863     15A3  1683               	bsf	3,5	;RP0=1, select bank3
  4864     15A4  1703               	bsf	3,6	;RP1=1, select bank3
  4865     15A5  150C               	bsf	12,2	;volsfr
  4866     15A6                     l6689:
  4867     15A6  3055               	movlw	85
  4868     15A7  008D               	movwf	13	;volsfr
  4869     15A8  30AA               	movlw	170
  4870     15A9  008D               	movwf	13	;volsfr
  4871     15AA                     l6691:
  4872     15AA  148C               	bsf	12,1	;volsfr
  4873     15AB                     l6693:
  4874     15AB  110C               	bcf	12,2	;volsfr
  4875     15AC                     l6695:
  4876     15AC  1283               	bcf	3,5	;RP0=0, select bank0
  4877     15AD  1303               	bcf	3,6	;RP1=0, select bank0
  4878     15AE  1C03               	btfss	3,0	;volatile
  4879     15AF  2DB1               	goto	u6681
  4880     15B0  2DB2               	goto	u6680
  4881     15B1                     u6681:
  4882     15B1  2DB3               	goto	l667
  4883     15B2                     u6680:
  4884     15B2                     l6697:
  4885     15B2  178B               	bsf	11,7	;volatile
  4886     15B3                     l667:
  4887     15B3  0008               	return
  4888     15B4                     __end_of_eeprom_write:
  4889                           
  4890                           	psect	text15
  4891     154B                     __ptext15:	
  4892 ;; *************** function _btns_init *****************
  4893 ;; Defined at:
  4894 ;;		line 25 in file "botoes.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;		None
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;		None
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  1    wreg      void 
  4901 ;; Registers used:
  4902 ;;		wreg
  4903 ;; Tracked objects:
  4904 ;;		On entry : 0/0
  4905 ;;		On exit  : 0/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4908 ;;      Params:         0       0       0       0       0
  4909 ;;      Locals:         0       0       0       0       0
  4910 ;;      Temps:          0       0       0       0       0
  4911 ;;      Totals:         0       0       0       0       0
  4912 ;;Total ram usage:        0 bytes
  4913 ;; Hardware stack levels used: 1
  4914 ;; Hardware stack levels required when called: 7
  4915 ;; This function calls:
  4916 ;;		Nothing
  4917 ;; This function is called by:
  4918 ;;		_main
  4919 ;; This function uses a non-reentrant model
  4920 ;;
  4921                           
  4922     154B                     _btns_init:	
  4923                           ;psect for function _btns_init
  4924                           
  4925     154B                     l6999:	
  4926                           ;incstack = 0
  4927                           ; Regs used in _btns_init: [wreg]
  4928                           
  4929                           
  4930                           ;botoes.c: 31:     RB4 = RB5 = RB6 = RB7 = 0;
  4931     154B  1283               	bcf	3,5	;RP0=0, select bank0
  4932     154C  1303               	bcf	3,6	;RP1=0, select bank0
  4933     154D  1386               	bcf	6,7	;volatile
  4934     154E  1306               	bcf	6,6	;volatile
  4935     154F  1286               	bcf	6,5	;volatile
  4936     1550  1206               	bcf	6,4	;volatile
  4937                           
  4938                           ;botoes.c: 32:     TRISB4 = TRISB5 = TRISB6 = TRISB7 = 1;
  4939     1551  1683               	bsf	3,5	;RP0=1, select bank1
  4940     1552  1303               	bcf	3,6	;RP1=0, select bank1
  4941     1553  1786               	bsf	6,7	;volatile
  4942     1554  1B86               	btfsc	6,7	;volatile
  4943     1555  2D57               	goto	u7001
  4944     1556  2D5B               	goto	u7000
  4945     1557                     u7001:
  4946     1557  1683               	bsf	3,5	;RP0=1, select bank1
  4947     1558  1303               	bcf	3,6	;RP1=0, select bank1
  4948     1559  1706               	bsf	6,6	;volatile
  4949     155A  2D5E               	goto	u7014
  4950     155B                     u7000:
  4951     155B  1683               	bsf	3,5	;RP0=1, select bank1
  4952     155C  1303               	bcf	3,6	;RP1=0, select bank1
  4953     155D  1306               	bcf	6,6	;volatile
  4954     155E                     u7014:
  4955     155E  1B06               	btfsc	6,6	;volatile
  4956     155F  2D61               	goto	u7011
  4957     1560  2D65               	goto	u7010
  4958     1561                     u7011:
  4959     1561  1683               	bsf	3,5	;RP0=1, select bank1
  4960     1562  1303               	bcf	3,6	;RP1=0, select bank1
  4961     1563  1686               	bsf	6,5	;volatile
  4962     1564  2D68               	goto	u7024
  4963     1565                     u7010:
  4964     1565  1683               	bsf	3,5	;RP0=1, select bank1
  4965     1566  1303               	bcf	3,6	;RP1=0, select bank1
  4966     1567  1286               	bcf	6,5	;volatile
  4967     1568                     u7024:
  4968     1568  1A86               	btfsc	6,5	;volatile
  4969     1569  2D6B               	goto	u7021
  4970     156A  2D6F               	goto	u7020
  4971     156B                     u7021:
  4972     156B  1683               	bsf	3,5	;RP0=1, select bank1
  4973     156C  1303               	bcf	3,6	;RP1=0, select bank1
  4974     156D  1606               	bsf	6,4	;volatile
  4975     156E  2D72               	goto	u7034
  4976     156F                     u7020:
  4977     156F  1683               	bsf	3,5	;RP0=1, select bank1
  4978     1570  1303               	bcf	3,6	;RP1=0, select bank1
  4979     1571  1206               	bcf	6,4	;volatile
  4980     1572                     u7034:
  4981                           
  4982                           ;botoes.c: 34:     OPTION_REGbits.nRBPU = 0;
  4983     1572  1381               	bcf	1,7	;volatile
  4984     1573                     l7001:
  4985                           
  4986                           ;botoes.c: 35:     WPUB = 0xf0;
  4987     1573  30F0               	movlw	240
  4988     1574  0095               	movwf	21	;volatile
  4989                           
  4990                           ;botoes.c: 40:     ANSELH = 0b00010010;
  4991     1575  3012               	movlw	18
  4992     1576  1683               	bsf	3,5	;RP0=1, select bank3
  4993     1577  1703               	bsf	3,6	;RP1=1, select bank3
  4994     1578  0089               	movwf	9	;volatile
  4995                           
  4996                           ;botoes.c: 41:     IOCB = 0xf0;
  4997     1579  30F0               	movlw	240
  4998     157A  1683               	bsf	3,5	;RP0=1, select bank1
  4999     157B  1303               	bcf	3,6	;RP1=0, select bank1
  5000     157C  0096               	movwf	22	;volatile
  5001     157D                     l7003:
  5002                           
  5003                           ;botoes.c: 44:     INTCONbits.RBIE = 1;
  5004     157D  158B               	bsf	11,3	;volatile
  5005     157E                     l150:
  5006     157E  0008               	return
  5007     157F                     __end_of_btns_init:
  5008                           
  5009                           	psect	text16
  5010     135C                     __ptext16:	
  5011 ;; *************** function _adcon_init *****************
  5012 ;; Defined at:
  5013 ;;		line 139 in file "adcon.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;		None
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;		None
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  1    wreg      void 
  5020 ;; Registers used:
  5021 ;;		wreg, status,2, status,0
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5027 ;;      Params:         0       0       0       0       0
  5028 ;;      Locals:         0       0       0       0       0
  5029 ;;      Temps:          0       0       0       0       0
  5030 ;;      Totals:         0       0       0       0       0
  5031 ;;Total ram usage:        0 bytes
  5032 ;; Hardware stack levels used: 1
  5033 ;; Hardware stack levels required when called: 7
  5034 ;; This function calls:
  5035 ;;		Nothing
  5036 ;; This function is called by:
  5037 ;;		_main
  5038 ;; This function uses a non-reentrant model
  5039 ;;
  5040                           
  5041     135C                     _adcon_init:	
  5042                           ;psect for function _adcon_init
  5043                           
  5044     135C                     l7061:	
  5045                           ;incstack = 0
  5046                           ; Regs used in _adcon_init: [wreg+status,2+status,0]
  5047                           
  5048                           
  5049                           ;adcon.c: 140:     TRISA = 0xff;
  5050     135C  30FF               	movlw	255
  5051     135D  1683               	bsf	3,5	;RP0=1, select bank1
  5052     135E  1303               	bcf	3,6	;RP1=0, select bank1
  5053     135F  0085               	movwf	5	;volatile
  5054                           
  5055                           ;adcon.c: 142:     ANSEL = 0b00011111;
  5056     1360  301F               	movlw	31
  5057     1361  1683               	bsf	3,5	;RP0=1, select bank3
  5058     1362  1703               	bsf	3,6	;RP1=1, select bank3
  5059     1363  0088               	movwf	8	;volatile
  5060     1364                     l7063:
  5061                           
  5062                           ;adcon.c: 144:     ADCON1bits.VCFG1 = 0;
  5063     1364  1683               	bsf	3,5	;RP0=1, select bank1
  5064     1365  1303               	bcf	3,6	;RP1=0, select bank1
  5065     1366  129F               	bcf	31,5	;volatile
  5066     1367                     l7065:
  5067                           
  5068                           ;adcon.c: 146:     ADCON1bits.VCFG0 = 1;
  5069     1367  161F               	bsf	31,4	;volatile
  5070     1368                     l7067:
  5071                           
  5072                           ;adcon.c: 152:     ADCON0bits.ADCS = 1;
  5073     1368  1283               	bcf	3,5	;RP0=0, select bank0
  5074     1369  1303               	bcf	3,6	;RP1=0, select bank0
  5075     136A  081F               	movf	31,w	;volatile
  5076     136B  393F               	andlw	-193
  5077     136C  3840               	iorlw	64
  5078     136D  009F               	movwf	31	;volatile
  5079     136E                     l7069:
  5080                           
  5081                           ;adcon.c: 153:     ADCON1bits.ADFM = 1;
  5082     136E  1683               	bsf	3,5	;RP0=1, select bank1
  5083     136F  1303               	bcf	3,6	;RP1=0, select bank1
  5084     1370  179F               	bsf	31,7	;volatile
  5085     1371                     l7071:
  5086                           
  5087                           ;adcon.c: 154:     ADCON0bits.ADON = 1;
  5088     1371  1283               	bcf	3,5	;RP0=0, select bank0
  5089     1372  1303               	bcf	3,6	;RP1=0, select bank0
  5090     1373  141F               	bsf	31,0	;volatile
  5091     1374                     l284:
  5092     1374  0008               	return
  5093     1375                     __end_of_adcon_init:
  5094                           
  5095                           	psect	text17
  5096     0C0A                     __ptext17:	
  5097 ;; *************** function _handler *****************
  5098 ;; Defined at:
  5099 ;;		line 16 in file "handler.c"
  5100 ;; Parameters:    Size  Location     Type
  5101 ;;		None
  5102 ;; Auto vars:     Size  Location     Type
  5103 ;;  pos_taxa        2   10[BANK1 ] unsigned int 
  5104 ;;  tempo_amostr    2    8[BANK1 ] unsigned int 
  5105 ;;  option          1   12[BANK1 ] unsigned char 
  5106 ;; Return value:  Size  Location     Type
  5107 ;;                  1    wreg      void 
  5108 ;; Registers used:
  5109 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5110 ;; Tracked objects:
  5111 ;;		On entry : 0/0
  5112 ;;		On exit  : 0/0
  5113 ;;		Unchanged: 0/0
  5114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5115 ;;      Params:         0       0       0       0       0
  5116 ;;      Locals:         0       0       5       0       0
  5117 ;;      Temps:          0       0       5       0       0
  5118 ;;      Totals:         0       0      10       0       0
  5119 ;;Total ram usage:       10 bytes
  5120 ;; Hardware stack levels used: 1
  5121 ;; Hardware stack levels required when called: 6
  5122 ;; This function calls:
  5123 ;;		_adcon_captura_grava
  5124 ;;		_btns_testa
  5125 ;;		_eeprom_ler_word
  5126 ;;		_estado_maquina
  5127 ;;		_rs232_transmite
  5128 ;; This function is called by:
  5129 ;;		Interrupt level 1
  5130 ;; This function uses a non-reentrant model
  5131 ;;
  5132                           
  5133     0C0A                     _handler:	
  5134                           ;psect for function _handler
  5135                           
  5136     0C0A                     i1l8481:
  5137                           
  5138                           ;handler.c: 18:     uint8_t option;;handler.c: 20:     static uint16_t count_t0 = 0;;han
      +                          dler.c: 24:     uint16_t tempo_amostra, pos_taxa;;handler.c: 35:     if (PIE1bits.RCIE) 
      +                          {
  5139     0C0A  1E8C               	btfss	12,5	;volatile
  5140     0C0B  2C0D               	goto	u839_21
  5141     0C0C  2C0E               	goto	u839_20
  5142     0C0D                     u839_21:
  5143     0C0D  2C1F               	goto	i1l8489
  5144     0C0E                     u839_20:
  5145     0C0E                     i1l8483:
  5146                           
  5147                           ;handler.c: 36:         if (PIR1bits.RCIF) {
  5148     0C0E  1283               	bcf	3,5	;RP0=0, select bank0
  5149     0C0F  1303               	bcf	3,6	;RP1=0, select bank0
  5150     0C10  1E8C               	btfss	12,5	;volatile
  5151     0C11  2C13               	goto	u840_21
  5152     0C12  2C14               	goto	u840_20
  5153     0C13                     u840_21:
  5154     0C13  2C1F               	goto	i1l8489
  5155     0C14                     u840_20:
  5156     0C14                     i1l8485:
  5157                           
  5158                           ;handler.c: 37:             if (RCREG == 0x41) {
  5159     0C14  3041               	movlw	65
  5160     0C15  061A               	xorwf	26,w	;volatile
  5161     0C16  1D03               	btfss	3,2
  5162     0C17  2C19               	goto	u841_21
  5163     0C18  2C1A               	goto	u841_20
  5164     0C19                     u841_21:
  5165     0C19  2C1F               	goto	i1l8489
  5166     0C1A                     u841_20:
  5167     0C1A                     i1l8487:
  5168                           
  5169                           ;handler.c: 49:                 rs232_transmite();
  5170     0C1A  120A  158A  229D  120A  158A  	fcall	_rs232_transmite
  5171     0C1F                     i1l8489:
  5172                           
  5173                           ;handler.c: 57:     if (INTCONbits.T0IE) {
  5174     0C1F  1E8B               	btfss	11,5	;volatile
  5175     0C20  2C22               	goto	u842_21
  5176     0C21  2C23               	goto	u842_20
  5177     0C22                     u842_21:
  5178     0C22  2C77               	goto	i1l8509
  5179     0C23                     u842_20:
  5180     0C23                     i1l8491:
  5181                           
  5182                           ;handler.c: 58:         if (INTCONbits.T0IF) {
  5183     0C23  1D0B               	btfss	11,2	;volatile
  5184     0C24  2C26               	goto	u843_21
  5185     0C25  2C27               	goto	u843_20
  5186     0C26                     u843_21:
  5187     0C26  2C77               	goto	i1l8509
  5188     0C27                     u843_20:
  5189     0C27                     i1l8493:
  5190                           
  5191                           ;handler.c: 61:             pos_taxa = eeprom_ler_word(0x02);
  5192     0C27  3002               	movlw	2
  5193     0C28  160A  118A  23F2  120A  158A  	fcall	_eeprom_ler_word
  5194     0C2D  0872               	movf	?_eeprom_ler_word+1,w
  5195     0C2E  1683               	bsf	3,5	;RP0=1, select bank1
  5196     0C2F  1303               	bcf	3,6	;RP1=0, select bank1
  5197     0C30  00AB               	movwf	(handler@pos_taxa+1)^(0+128)
  5198     0C31  0871               	movf	?_eeprom_ler_word,w
  5199     0C32  00AA               	movwf	handler@pos_taxa^(0+128)
  5200     0C33                     i1l8495:
  5201                           
  5202                           ;handler.c: 63:             tempo_amostra = menu_tempo_amostra[pos_taxa].ul_tempo_amostr
      +                          a;
  5203     0C33  082A               	movf	handler@pos_taxa^(0+128),w
  5204     0C34  00A3               	movwf	??_handler^(0+128)
  5205     0C35  3001               	movlw	1
  5206     0C36                     u844_25:
  5207     0C36  1003               	clrc
  5208     0C37  0DA3               	rlf	??_handler^(0+128),f
  5209     0C38  3EFF               	addlw	-1
  5210     0C39  1D03               	skipz
  5211     0C3A  2C36               	goto	u844_25
  5212     0C3B  1003               	clrc
  5213     0C3C  0D23               	rlf	??_handler^(0+128),w
  5214     0C3D  3E02               	addlw	2
  5215     0C3E  3E12               	addlw	low (_menu_tempo_amostra| (0+32768))
  5216     0C3F  0084               	movwf	4
  5217     0C40  3087               	movlw	high (_menu_tempo_amostra| (0+32768))
  5218     0C41  1803               	skipnc
  5219     0C42  3E01               	addlw	1
  5220     0C43  1283               	bcf	3,5	;RP0=0, select bank0
  5221     0C44  1303               	bcf	3,6	;RP1=0, select bank0
  5222     0C45  00FF               	movwf	btemp+1
  5223     0C46  120A  118A  2700  120A  158A  	fcall	stringtab
  5224     0C4B  1683               	bsf	3,5	;RP0=1, select bank1
  5225     0C4C  1303               	bcf	3,6	;RP1=0, select bank1
  5226     0C4D  00A8               	movwf	handler@tempo_amostra^(0+128)
  5227     0C4E  1283               	bcf	3,5	;RP0=0, select bank0
  5228     0C4F  1303               	bcf	3,6	;RP1=0, select bank0
  5229     0C50  120A  118A  2700  120A  158A  	fcall	stringtab
  5230     0C55  1683               	bsf	3,5	;RP0=1, select bank1
  5231     0C56  1303               	bcf	3,6	;RP1=0, select bank1
  5232     0C57  00A9               	movwf	(handler@tempo_amostra+1)^(0+128)
  5233     0C58                     i1l8497:
  5234                           
  5235                           ;handler.c: 72:             if (count_t0 != tempo_amostra) {
  5236     0C58  0829               	movf	(handler@tempo_amostra+1)^(0+128),w
  5237     0C59  064E               	xorwf	(handler@count_t0+1)^(0+128),w
  5238     0C5A  1D03               	skipz
  5239     0C5B  2C5E               	goto	u845_25
  5240     0C5C  0828               	movf	handler@tempo_amostra^(0+128),w
  5241     0C5D  064D               	xorwf	handler@count_t0^(0+128),w
  5242     0C5E                     u845_25:
  5243     0C5E  1903               	skipnz
  5244     0C5F  2C61               	goto	u845_21
  5245     0C60  2C62               	goto	u845_20
  5246     0C61                     u845_21:
  5247     0C61  2C69               	goto	i1l8501
  5248     0C62                     u845_20:
  5249     0C62                     i1l8499:
  5250                           
  5251                           ;handler.c: 73:                 count_t0++;
  5252     0C62  3001               	movlw	1
  5253     0C63  07CD               	addwf	handler@count_t0^(0+128),f
  5254     0C64  1803               	skipnc
  5255     0C65  0ACE               	incf	(handler@count_t0+1)^(0+128),f
  5256     0C66  3000               	movlw	0
  5257     0C67  07CE               	addwf	(handler@count_t0+1)^(0+128),f
  5258                           
  5259                           ;handler.c: 82:             } else {
  5260     0C68  2C72               	goto	i1l8505
  5261     0C69                     i1l8501:
  5262                           
  5263                           ;handler.c: 83:                 adcon_captura_grava();
  5264     0C69  120A  158A  2557  120A  158A  	fcall	_adcon_captura_grava
  5265     0C6E                     i1l8503:
  5266                           
  5267                           ;handler.c: 98:                 count_t0 = 0;
  5268     0C6E  1683               	bsf	3,5	;RP0=1, select bank1
  5269     0C6F  1303               	bcf	3,6	;RP1=0, select bank1
  5270     0C70  01CD               	clrf	handler@count_t0^(0+128)
  5271     0C71  01CE               	clrf	(handler@count_t0+1)^(0+128)
  5272     0C72                     i1l8505:
  5273                           
  5274                           ;handler.c: 100:             TMR0 = 39;
  5275     0C72  3027               	movlw	39
  5276     0C73  1283               	bcf	3,5	;RP0=0, select bank0
  5277     0C74  1303               	bcf	3,6	;RP1=0, select bank0
  5278     0C75  0081               	movwf	1	;volatile
  5279     0C76                     i1l8507:
  5280                           
  5281                           ;handler.c: 101:             INTCONbits.T0IF = 0;
  5282     0C76  110B               	bcf	11,2	;volatile
  5283     0C77                     i1l8509:
  5284                           
  5285                           ;handler.c: 106:     if (RBIE) {
  5286     0C77  1D8B               	btfss	11,3	;volatile
  5287     0C78  2C7A               	goto	u846_21
  5288     0C79  2C7B               	goto	u846_20
  5289     0C7A                     u846_21:
  5290     0C7A  2C93               	goto	i1l197
  5291     0C7B                     u846_20:
  5292     0C7B                     i1l8511:
  5293                           
  5294                           ;handler.c: 108:         if (RBIF) {
  5295     0C7B  1C0B               	btfss	11,0	;volatile
  5296     0C7C  2C7E               	goto	u847_21
  5297     0C7D  2C7F               	goto	u847_20
  5298     0C7E                     u847_21:
  5299     0C7E  2C93               	goto	i1l197
  5300     0C7F                     u847_20:
  5301     0C7F                     i1l8513:
  5302                           
  5303                           ;handler.c: 112:             option = btns_testa();
  5304     0C7F  160A  118A  2418  120A  158A  	fcall	_btns_testa
  5305     0C84  1683               	bsf	3,5	;RP0=1, select bank1
  5306     0C85  1303               	bcf	3,6	;RP1=0, select bank1
  5307     0C86  00AC               	movwf	handler@option^(0+128)
  5308     0C87                     i1l8515:
  5309                           
  5310                           ;handler.c: 114:             if (option != 0) {
  5311     0C87  082C               	movf	handler@option^(0+128),w
  5312     0C88  1903               	btfsc	3,2
  5313     0C89  2C8B               	goto	u848_21
  5314     0C8A  2C8C               	goto	u848_20
  5315     0C8B                     u848_21:
  5316     0C8B  2C92               	goto	i1l8519
  5317     0C8C                     u848_20:
  5318     0C8C                     i1l8517:
  5319                           
  5320                           ;handler.c: 115:                 estado_maquina(option);
  5321     0C8C  082C               	movf	handler@option^(0+128),w
  5322     0C8D  120A  158A  2234  120A  158A  	fcall	_estado_maquina
  5323     0C92                     i1l8519:
  5324                           
  5325                           ;handler.c: 119:             RBIF = 0;
  5326     0C92  100B               	bcf	11,0	;volatile
  5327     0C93                     i1l197:
  5328     0C93  1683               	bsf	3,5	;RP0=1, select bank1
  5329     0C94  1303               	bcf	3,6	;RP1=0, select bank1
  5330     0C95  0827               	movf	(??_handler+4)^(0+128),w
  5331     0C96  00FF               	movwf	btemp+1
  5332     0C97  0826               	movf	(??_handler+3)^(0+128),w
  5333     0C98  008A               	movwf	10
  5334     0C99  0825               	movf	(??_handler+2)^(0+128),w
  5335     0C9A  0084               	movwf	4
  5336     0C9B  0E24               	swapf	(??_handler+1)^(0+128),w
  5337     0C9C  0083               	movwf	3
  5338     0C9D  0EFE               	swapf	btemp,f
  5339     0C9E  0E7E               	swapf	btemp,w
  5340     0C9F  0009               	retfie
  5341     0CA0                     __end_of_handler:
  5342                           
  5343                           	psect	intentry
  5344     0004                     __pintentry:	
  5345                           ;incstack = 0
  5346 ;; hardware stack exceeded
  5347                           ; Regs used in _handler: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5348                           
  5349     0004                     interrupt_function:
  5350     007E                     saved_w	set	btemp
  5351     0004  00FE               	movwf	btemp
  5352     0005  0E03               	swapf	3,w
  5353     0006  1683               	bsf	3,5	;RP0=1, select bank1
  5354     0007  1303               	bcf	3,6	;RP1=0, select bank1
  5355     0008  00A4               	movwf	(??_handler+1)^(0+128)
  5356     0009  0804               	movf	4,w
  5357     000A  00A5               	movwf	(??_handler+2)^(0+128)
  5358     000B  080A               	movf	10,w
  5359     000C  00A6               	movwf	(??_handler+3)^(0+128)
  5360     000D  087F               	movf	btemp+1,w
  5361     000E  00A7               	movwf	(??_handler+4)^(0+128)
  5362     000F  120A  158A  2C0A   	ljmp	_handler
  5363                           
  5364                           	psect	text18
  5365     0A9D                     __ptext18:	
  5366 ;; *************** function _rs232_transmite *****************
  5367 ;; Defined at:
  5368 ;;		line 26 in file "rs232.c"
  5369 ;; Parameters:    Size  Location     Type
  5370 ;;		None
  5371 ;; Auto vars:     Size  Location     Type
  5372 ;;  i               1    9[COMMON] unsigned char 
  5373 ;;  x               1    8[COMMON] unsigned char 
  5374 ;;  qtd_bytes       1    7[COMMON] unsigned char 
  5375 ;;  qtd_sens        1    6[COMMON] unsigned char 
  5376 ;;  qtd_val         1    5[COMMON] unsigned char 
  5377 ;; Return value:  Size  Location     Type
  5378 ;;                  1    wreg      unsigned char 
  5379 ;; Registers used:
  5380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5381 ;; Tracked objects:
  5382 ;;		On entry : 0/0
  5383 ;;		On exit  : 0/0
  5384 ;;		Unchanged: 0/0
  5385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5386 ;;      Params:         0       0       0       0       0
  5387 ;;      Locals:         5       0       0       0       0
  5388 ;;      Temps:          2       0       0       0       0
  5389 ;;      Totals:         7       0       0       0       0
  5390 ;;Total ram usage:        7 bytes
  5391 ;; Hardware stack levels used: 1
  5392 ;; Hardware stack levels required when called: 1
  5393 ;; This function calls:
  5394 ;;		___bmul
  5395 ;;		i1_eeprom_read
  5396 ;; This function is called by:
  5397 ;;		_handler
  5398 ;; This function uses a non-reentrant model
  5399 ;;
  5400                           
  5401     0A9D                     _rs232_transmite:	
  5402                           ;psect for function _rs232_transmite
  5403                           
  5404     0A9D                     i1l8329:	
  5405                           ;incstack = 0
  5406                           ; Regs used in _rs232_transmite: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5407                           
  5408                           
  5409                           ;rs232.c: 27:     uint8_t qtd_val, x;;rs232.c: 29:     uint8_t qtd_sens, qtd_bytes;;rs23
      +                          2.c: 30:     uint8_t i = 0;
  5410     0A9D  01F9               	clrf	rs232_transmite@i
  5411     0A9E                     i1l8331:
  5412                           
  5413                           ;rs232.c: 32:     qtd_val = eeprom_read(0x08);
  5414     0A9E  3008               	movlw	8
  5415     0A9F  160A  118A  232C  120A  158A  	fcall	i1_eeprom_read
  5416     0AA4  00F5               	movwf	rs232_transmite@qtd_val
  5417     0AA5                     i1l8333:
  5418                           
  5419                           ;rs232.c: 33:     qtd_bytes = qtd_val * 2;
  5420     0AA5  0875               	movf	rs232_transmite@qtd_val,w
  5421     0AA6  00F3               	movwf	??_rs232_transmite
  5422     0AA7  0773               	addwf	??_rs232_transmite,w
  5423     0AA8  00F7               	movwf	rs232_transmite@qtd_bytes
  5424     0AA9                     i1l8335:
  5425                           
  5426                           ;rs232.c: 46:     qtd_sens = eeprom_read(0x00);
  5427     0AA9  3000               	movlw	0
  5428     0AAA  160A  118A  232C  120A  158A  	fcall	i1_eeprom_read
  5429     0AAF  00F6               	movwf	rs232_transmite@qtd_sens
  5430     0AB0                     i1l8337:
  5431                           
  5432                           ;rs232.c: 47:     TXREG = menu_quant_sensores[qtd_sens].i_quant_sensores;
  5433     0AB0  3003               	movlw	3
  5434     0AB1  00F0               	movwf	___bmul@multiplicand
  5435     0AB2  0876               	movf	rs232_transmite@qtd_sens,w
  5436     0AB3  160A  118A  2317  120A  158A  	fcall	___bmul
  5437     0AB8  3E02               	addlw	2
  5438     0AB9  3E2E               	addlw	low (_menu_quant_sensores| (0+32768))
  5439     0ABA  0084               	movwf	4
  5440     0ABB  3087               	movlw	high (_menu_quant_sensores| (0+32768))
  5441     0ABC  1803               	skipnc
  5442     0ABD  3E01               	addlw	1
  5443     0ABE  1283               	bcf	3,5	;RP0=0, select bank0
  5444     0ABF  1303               	bcf	3,6	;RP1=0, select bank0
  5445     0AC0  00FF               	movwf	btemp+1
  5446     0AC1  120A  118A  2700  120A  158A  	fcall	stringtab
  5447     0AC6  0099               	movwf	25	;volatile
  5448     0AC7                     i1l8339:
  5449                           
  5450                           ;rs232.c: 49:     _delay((unsigned long)((5)*(4000000/4000.0)));
  5451     0AC7  3007               	movlw	7
  5452     0AC8  00F4               	movwf	??_rs232_transmite+1
  5453     0AC9  307D               	movlw	125
  5454     0ACA  00F3               	movwf	??_rs232_transmite
  5455     0ACB                     u855_27:
  5456     0ACB  0BF3               	decfsz	??_rs232_transmite,f
  5457     0ACC  2ACB               	goto	u855_27
  5458     0ACD  0BF4               	decfsz	??_rs232_transmite+1,f
  5459     0ACE  2ACB               	goto	u855_27
  5460     0ACF                     i1l8341:
  5461                           
  5462                           ;rs232.c: 50:     TXREG = 0;
  5463     0ACF  1283               	bcf	3,5	;RP0=0, select bank0
  5464     0AD0  1303               	bcf	3,6	;RP1=0, select bank0
  5465     0AD1  0199               	clrf	25	;volatile
  5466     0AD2                     i1l8343:
  5467                           
  5468                           ;rs232.c: 51:     _delay((unsigned long)((5)*(4000000/4000.0)));
  5469     0AD2  3007               	movlw	7
  5470     0AD3  00F4               	movwf	??_rs232_transmite+1
  5471     0AD4  307D               	movlw	125
  5472     0AD5  00F3               	movwf	??_rs232_transmite
  5473     0AD6                     u856_27:
  5474     0AD6  0BF3               	decfsz	??_rs232_transmite,f
  5475     0AD7  2AD6               	goto	u856_27
  5476     0AD8  0BF4               	decfsz	??_rs232_transmite+1,f
  5477     0AD9  2AD6               	goto	u856_27
  5478                           
  5479                           ;rs232.c: 53:     for (; i < qtd_bytes; i = i + 2) {
  5480     0ADA  2B06               	goto	i1l8357
  5481     0ADB                     i1l8345:
  5482                           
  5483                           ;rs232.c: 54:         x = eeprom_read(0x0e + i + 1);
  5484     0ADB  0879               	movf	rs232_transmite@i,w
  5485     0ADC  3E0F               	addlw	15
  5486     0ADD  160A  118A  232C  120A  158A  	fcall	i1_eeprom_read
  5487     0AE2  00F8               	movwf	rs232_transmite@x
  5488     0AE3                     i1l8347:
  5489                           
  5490                           ;rs232.c: 55:         TXREG = x;
  5491     0AE3  0878               	movf	rs232_transmite@x,w
  5492     0AE4  1283               	bcf	3,5	;RP0=0, select bank0
  5493     0AE5  1303               	bcf	3,6	;RP1=0, select bank0
  5494     0AE6  0099               	movwf	25	;volatile
  5495     0AE7                     i1l8349:
  5496                           
  5497                           ;rs232.c: 56:         _delay((unsigned long)((5)*(4000000/4000.0)));
  5498     0AE7  3007               	movlw	7
  5499     0AE8  00F4               	movwf	??_rs232_transmite+1
  5500     0AE9  307D               	movlw	125
  5501     0AEA  00F3               	movwf	??_rs232_transmite
  5502     0AEB                     u857_27:
  5503     0AEB  0BF3               	decfsz	??_rs232_transmite,f
  5504     0AEC  2AEB               	goto	u857_27
  5505     0AED  0BF4               	decfsz	??_rs232_transmite+1,f
  5506     0AEE  2AEB               	goto	u857_27
  5507                           
  5508                           ;rs232.c: 58:         x = eeprom_read(0x0e + i);
  5509     0AEF  0879               	movf	rs232_transmite@i,w
  5510     0AF0  3E0E               	addlw	14
  5511     0AF1  160A  118A  232C  120A  158A  	fcall	i1_eeprom_read
  5512     0AF6  00F8               	movwf	rs232_transmite@x
  5513     0AF7                     i1l8351:
  5514                           
  5515                           ;rs232.c: 59:         TXREG = x;
  5516     0AF7  0878               	movf	rs232_transmite@x,w
  5517     0AF8  1283               	bcf	3,5	;RP0=0, select bank0
  5518     0AF9  1303               	bcf	3,6	;RP1=0, select bank0
  5519     0AFA  0099               	movwf	25	;volatile
  5520     0AFB                     i1l8353:
  5521                           
  5522                           ;rs232.c: 60:         _delay((unsigned long)((5)*(4000000/4000.0)));
  5523     0AFB  3007               	movlw	7
  5524     0AFC  00F4               	movwf	??_rs232_transmite+1
  5525     0AFD  307D               	movlw	125
  5526     0AFE  00F3               	movwf	??_rs232_transmite
  5527     0AFF                     u858_27:
  5528     0AFF  0BF3               	decfsz	??_rs232_transmite,f
  5529     0B00  2AFF               	goto	u858_27
  5530     0B01  0BF4               	decfsz	??_rs232_transmite+1,f
  5531     0B02  2AFF               	goto	u858_27
  5532     0B03                     i1l8355:
  5533                           
  5534                           ;rs232.c: 61:     }
  5535     0B03  0879               	movf	rs232_transmite@i,w
  5536     0B04  3E02               	addlw	2
  5537     0B05  00F9               	movwf	rs232_transmite@i
  5538     0B06                     i1l8357:
  5539     0B06  0877               	movf	rs232_transmite@qtd_bytes,w
  5540     0B07  0279               	subwf	rs232_transmite@i,w
  5541     0B08  1C03               	skipc
  5542     0B09  2B0B               	goto	u829_21
  5543     0B0A  2B0C               	goto	u829_20
  5544     0B0B                     u829_21:
  5545     0B0B  2ADB               	goto	i1l8345
  5546     0B0C                     u829_20:
  5547     0B0C                     i1l337:
  5548     0B0C  0008               	return
  5549     0B0D                     __end_of_rs232_transmite:
  5550                           
  5551                           	psect	text19
  5552     0A34                     __ptext19:	
  5553 ;; *************** function _estado_maquina *****************
  5554 ;; Defined at:
  5555 ;;		line 41 in file "estados.c"
  5556 ;; Parameters:    Size  Location     Type
  5557 ;;  op              1    wreg     unsigned char 
  5558 ;; Auto vars:     Size  Location     Type
  5559 ;;  op              1    2[BANK1 ] unsigned char 
  5560 ;; Return value:  Size  Location     Type
  5561 ;;                  1    wreg      void 
  5562 ;; Registers used:
  5563 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5564 ;; Tracked objects:
  5565 ;;		On entry : 0/0
  5566 ;;		On exit  : 0/0
  5567 ;;		Unchanged: 0/0
  5568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5569 ;;      Params:         0       0       0       0       0
  5570 ;;      Locals:         0       0       1       0       0
  5571 ;;      Temps:          0       0       2       0       0
  5572 ;;      Totals:         0       0       3       0       0
  5573 ;;Total ram usage:        3 bytes
  5574 ;; Hardware stack levels used: 1
  5575 ;; Hardware stack levels required when called: 5
  5576 ;; This function calls:
  5577 ;;		_estado_captura_mostra
  5578 ;;		_estado_inicial
  5579 ;;		_estado_max_min
  5580 ;;		_estado_menu_conf_quant_sensores
  5581 ;;		_estado_menu_conf_tempo_amostra
  5582 ;;		_estado_menu_limpar
  5583 ;;		_estado_menu_principal
  5584 ;;		_estado_ver_todos
  5585 ;; This function is called by:
  5586 ;;		_handler
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590     0A34                     _estado_maquina:	
  5591                           ;psect for function _estado_maquina
  5592                           
  5593                           
  5594                           ;incstack = 0
  5595 ;; hardware stack exceeded
  5596                           ; Regs used in _estado_maquina: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5597                           ;estado_maquina@op stored from wreg
  5598     0A34  1683               	bsf	3,5	;RP0=1, select bank1
  5599     0A35  1303               	bcf	3,6	;RP1=0, select bank1
  5600     0A36  00A2               	movwf	estado_maquina@op^(0+128)
  5601     0A37                     i1l8415:
  5602                           
  5603                           ;estados.c: 43:     switch (gl_estado) {
  5604     0A37  2A77               	goto	i1l8437
  5605     0A38                     i1l8417:
  5606                           
  5607                           ;estados.c: 46:             estado_inicial(op);
  5608     0A38  0822               	movf	estado_maquina@op^(0+128),w
  5609     0A39  160A  118A  22A9  120A  158A  	fcall	_estado_inicial
  5610                           
  5611                           ;estados.c: 47:         break;
  5612     0A3E  2A9C               	goto	i1l443
  5613     0A3F                     i1l8419:
  5614                           
  5615                           ;estados.c: 50:             estado_menu_principal(op);
  5616     0A3F  0822               	movf	estado_maquina@op^(0+128),w
  5617     0A40  120A  158A  265A  120A  158A  	fcall	_estado_menu_principal
  5618                           
  5619                           ;estados.c: 51:         break;
  5620     0A45  2A9C               	goto	i1l443
  5621     0A46                     i1l8421:
  5622                           
  5623                           ;estados.c: 54:             estado_captura_mostra(op);
  5624     0A46  0822               	movf	estado_maquina@op^(0+128),w
  5625     0A47  160A  118A  22E2  120A  158A  	fcall	_estado_captura_mostra
  5626                           
  5627                           ;estados.c: 55:         break;
  5628     0A4C  2A9C               	goto	i1l443
  5629     0A4D                     i1l8423:
  5630                           
  5631                           ;estados.c: 64:             estado_captura_mostra(op);
  5632     0A4D  0822               	movf	estado_maquina@op^(0+128),w
  5633     0A4E  160A  118A  22E2  120A  158A  	fcall	_estado_captura_mostra
  5634                           
  5635                           ;estados.c: 65:         break;
  5636     0A53  2A9C               	goto	i1l443
  5637     0A54                     i1l8425:
  5638                           
  5639                           ;estados.c: 68:             estado_ver_todos(op);
  5640     0A54  0822               	movf	estado_maquina@op^(0+128),w
  5641     0A55  160A  118A  27AD  120A  158A  	fcall	_estado_ver_todos
  5642                           
  5643                           ;estados.c: 69:         break;
  5644     0A5A  2A9C               	goto	i1l443
  5645     0A5B                     i1l8427:
  5646                           
  5647                           ;estados.c: 72:             estado_max_min(op);
  5648     0A5B  0822               	movf	estado_maquina@op^(0+128),w
  5649     0A5C  160A  118A  22B8  120A  158A  	fcall	_estado_max_min
  5650                           
  5651                           ;estados.c: 73:         break;
  5652     0A61  2A9C               	goto	i1l443
  5653     0A62                     i1l8429:
  5654                           
  5655                           ;estados.c: 76:             estado_menu_limpar(op);
  5656     0A62  0822               	movf	estado_maquina@op^(0+128),w
  5657     0A63  160A  118A  22C6  120A  158A  	fcall	_estado_menu_limpar
  5658                           
  5659                           ;estados.c: 77:         break;
  5660     0A68  2A9C               	goto	i1l443
  5661     0A69                     i1l8431:
  5662                           
  5663                           ;estados.c: 80:             estado_menu_conf_tempo_amostra(op);
  5664     0A69  0822               	movf	estado_maquina@op^(0+128),w
  5665     0A6A  120A  158A  216B  120A  158A  	fcall	_estado_menu_conf_tempo_amostra
  5666                           
  5667                           ;estados.c: 81:         break;
  5668     0A6F  2A9C               	goto	i1l443
  5669     0A70                     i1l8433:
  5670                           
  5671                           ;estados.c: 89:             estado_menu_conf_quant_sensores(op);
  5672     0A70  0822               	movf	estado_maquina@op^(0+128),w
  5673     0A71  120A  158A  20BC  120A  158A  	fcall	_estado_menu_conf_quant_sensores
  5674                           
  5675                           ;estados.c: 90:         break;
  5676     0A76  2A9C               	goto	i1l443
  5677     0A77                     i1l8437:
  5678     0A77  0852               	movf	_gl_estado^(0+128),w
  5679     0A78  00A0               	movwf	??_estado_maquina^(0+128)
  5680     0A79  01A1               	clrf	(??_estado_maquina^(0+128)+1)
  5681                           
  5682                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5683                           ; Switch size 1, requested type "simple"
  5684                           ; Number of cases is 1, Range of values is 0 to 0
  5685                           ; switch strategies available:
  5686                           ; Name         Instructions Cycles
  5687                           ; simple_byte            4     3 (average)
  5688                           ; direct_byte           11     8 (fixed)
  5689                           ; jumptable            260     6 (fixed)
  5690                           ;	Chosen strategy is simple_byte
  5691     0A7A  0821               	movf	(??_estado_maquina+1)^(0+128),w
  5692     0A7B  3A00               	xorlw	0	; case 0
  5693     0A7C  1903               	skipnz
  5694     0A7D  2A7F               	goto	i1l8851
  5695     0A7E  2A9C               	goto	i1l443
  5696     0A7F                     i1l8851:
  5697                           
  5698                           ; Switch size 1, requested type "simple"
  5699                           ; Number of cases is 9, Range of values is 0 to 8
  5700                           ; switch strategies available:
  5701                           ; Name         Instructions Cycles
  5702                           ; simple_byte           28    15 (average)
  5703                           ; direct_byte           35     8 (fixed)
  5704                           ; jumptable            260     6 (fixed)
  5705                           ;	Chosen strategy is simple_byte
  5706     0A7F  0820               	movf	??_estado_maquina^(0+128),w
  5707     0A80  3A00               	xorlw	0	; case 0
  5708     0A81  1903               	skipnz
  5709     0A82  2A38               	goto	i1l8417
  5710     0A83  3A01               	xorlw	1	; case 1
  5711     0A84  1903               	skipnz
  5712     0A85  2A3F               	goto	i1l8419
  5713     0A86  3A03               	xorlw	3	; case 2
  5714     0A87  1903               	skipnz
  5715     0A88  2A46               	goto	i1l8421
  5716     0A89  3A01               	xorlw	1	; case 3
  5717     0A8A  1903               	skipnz
  5718     0A8B  2A4D               	goto	i1l8423
  5719     0A8C  3A07               	xorlw	7	; case 4
  5720     0A8D  1903               	skipnz
  5721     0A8E  2A54               	goto	i1l8425
  5722     0A8F  3A01               	xorlw	1	; case 5
  5723     0A90  1903               	skipnz
  5724     0A91  2A5B               	goto	i1l8427
  5725     0A92  3A03               	xorlw	3	; case 6
  5726     0A93  1903               	skipnz
  5727     0A94  2A62               	goto	i1l8429
  5728     0A95  3A01               	xorlw	1	; case 7
  5729     0A96  1903               	skipnz
  5730     0A97  2A69               	goto	i1l8431
  5731     0A98  3A0F               	xorlw	15	; case 8
  5732     0A99  1903               	skipnz
  5733     0A9A  2A70               	goto	i1l8433
  5734     0A9B  2A9C               	goto	i1l443
  5735     0A9C                     i1l443:
  5736     0A9C  0008               	return
  5737     0A9D                     __end_of_estado_maquina:
  5738                           
  5739                           	psect	text20
  5740     17AD                     __ptext20:	
  5741 ;; *************** function _estado_ver_todos *****************
  5742 ;; Defined at:
  5743 ;;		line 254 in file "estados.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;  opt             1    wreg     unsigned char 
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;  opt             1   66[BANK0 ] unsigned char 
  5748 ;; Return value:  Size  Location     Type
  5749 ;;                  1    wreg      void 
  5750 ;; Registers used:
  5751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5757 ;;      Params:         0       0       0       0       0
  5758 ;;      Locals:         0       1       0       0       0
  5759 ;;      Temps:          2       0       0       0       0
  5760 ;;      Totals:         2       1       0       0       0
  5761 ;;Total ram usage:        3 bytes
  5762 ;; Hardware stack levels used: 1
  5763 ;; Hardware stack levels required when called: 4
  5764 ;; This function calls:
  5765 ;;		___lbdiv
  5766 ;;		_estado_executa_muda
  5767 ;;		i1_eeprom_read
  5768 ;; This function is called by:
  5769 ;;		_estado_maquina
  5770 ;; This function uses a non-reentrant model
  5771 ;;
  5772                           
  5773     17AD                     _estado_ver_todos:	
  5774                           ;psect for function _estado_ver_todos
  5775                           
  5776                           
  5777                           ;incstack = 0
  5778 ;; hardware stack exceeded
  5779                           ; Regs used in _estado_ver_todos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5780                           ;estado_ver_todos@opt stored from wreg
  5781     17AD  1283               	bcf	3,5	;RP0=0, select bank0
  5782     17AE  1303               	bcf	3,6	;RP1=0, select bank0
  5783     17AF  00E2               	movwf	estado_ver_todos@opt
  5784     17B0                     i1l8149:
  5785                           
  5786                           ;estados.c: 255:     switch (opt) {
  5787     17B0  2FEC               	goto	i1l8167
  5788     17B1                     i1l8151:
  5789                           
  5790                           ;estados.c: 257:             if (gl_item_menu_ver_todos > 0) {
  5791     17B1  1683               	bsf	3,5	;RP0=1, select bank1
  5792     17B2  1303               	bcf	3,6	;RP1=0, select bank1
  5793     17B3  0850               	movf	_gl_item_menu_ver_todos^(0+128),w
  5794     17B4  1903               	btfsc	3,2
  5795     17B5  2FB7               	goto	u810_21
  5796     17B6  2FB8               	goto	u810_20
  5797     17B7                     u810_21:
  5798     17B7  2FFF               	goto	i1l493
  5799     17B8                     u810_20:
  5800     17B8                     i1l8153:
  5801                           
  5802                           ;estados.c: 258:                 gl_item_menu_ver_todos--;
  5803     17B8  3001               	movlw	1
  5804     17B9  02D0               	subwf	_gl_item_menu_ver_todos^(0+128),f
  5805     17BA                     i1l8155:
  5806                           
  5807                           ;estados.c: 259:                 estado_executa_muda(EST_MOSTRA_TODOS);
  5808     17BA  3004               	movlw	4
  5809     17BB  120A  118A  204B  160A  118A  	fcall	_estado_executa_muda
  5810     17C0  2FFF               	goto	i1l493
  5811     17C1                     i1l8157:
  5812                           
  5813                           ;estados.c: 265:             if (gl_item_menu_ver_todos < (eeprom_read(0x08) / eeprom_re
      +                          ad(0x00))) {
  5814     17C1  3000               	movlw	0
  5815     17C2  160A  118A  232C  160A  118A  	fcall	i1_eeprom_read
  5816     17C7  00F1               	movwf	___lbdiv@divisor
  5817     17C8  3008               	movlw	8
  5818     17C9  160A  118A  232C  160A  118A  	fcall	i1_eeprom_read
  5819     17CE  160A  118A  2441  160A  118A  	fcall	___lbdiv
  5820     17D3  1683               	bsf	3,5	;RP0=1, select bank1
  5821     17D4  1303               	bcf	3,6	;RP1=0, select bank1
  5822     17D5  0250               	subwf	_gl_item_menu_ver_todos^(0+128),w
  5823     17D6  1803               	skipnc
  5824     17D7  2FD9               	goto	u811_21
  5825     17D8  2FDA               	goto	u811_20
  5826     17D9                     u811_21:
  5827     17D9  2FFF               	goto	i1l493
  5828     17DA                     u811_20:
  5829     17DA                     i1l8159:
  5830                           
  5831                           ;estados.c: 266:                 gl_item_menu_ver_todos++;
  5832     17DA  3001               	movlw	1
  5833     17DB  00FF               	movwf	btemp+1
  5834     17DC  087F               	movf	btemp+1,w
  5835     17DD  07D0               	addwf	_gl_item_menu_ver_todos^(0+128),f
  5836     17DE                     i1l8161:
  5837                           
  5838                           ;estados.c: 267:                 estado_executa_muda(EST_MOSTRA_TODOS);
  5839     17DE  3004               	movlw	4
  5840     17DF  120A  118A  204B  160A  118A  	fcall	_estado_executa_muda
  5841     17E4  2FFF               	goto	i1l493
  5842     17E5                     i1l8163:
  5843                           
  5844                           ;estados.c: 271:             estado_executa_muda(EST_MENU_PRINCIPAL);
  5845     17E5  3001               	movlw	1
  5846     17E6  120A  118A  204B  160A  118A  	fcall	_estado_executa_muda
  5847                           
  5848                           ;estados.c: 272:             break;
  5849     17EB  2FFF               	goto	i1l493
  5850     17EC                     i1l8167:
  5851     17EC  0862               	movf	estado_ver_todos@opt,w
  5852     17ED  00FC               	movwf	??_estado_ver_todos
  5853     17EE  01FD               	clrf	??_estado_ver_todos+1
  5854                           
  5855                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5856                           ; Switch size 1, requested type "simple"
  5857                           ; Number of cases is 1, Range of values is 0 to 0
  5858                           ; switch strategies available:
  5859                           ; Name         Instructions Cycles
  5860                           ; simple_byte            4     3 (average)
  5861                           ; direct_byte           11     8 (fixed)
  5862                           ; jumptable            260     6 (fixed)
  5863                           ;	Chosen strategy is simple_byte
  5864     17EF  087D               	movf	??_estado_ver_todos+1,w
  5865     17F0  3A00               	xorlw	0	; case 0
  5866     17F1  1903               	skipnz
  5867     17F2  2FF4               	goto	i1l8853
  5868     17F3  2FFF               	goto	i1l493
  5869     17F4                     i1l8853:
  5870                           
  5871                           ; Switch size 1, requested type "simple"
  5872                           ; Number of cases is 3, Range of values is 2 to 4
  5873                           ; switch strategies available:
  5874                           ; Name         Instructions Cycles
  5875                           ; simple_byte           10     6 (average)
  5876                           ; direct_byte           20    11 (fixed)
  5877                           ; jumptable            263     9 (fixed)
  5878                           ;	Chosen strategy is simple_byte
  5879     17F4  087C               	movf	??_estado_ver_todos,w
  5880     17F5  3A02               	xorlw	2	; case 2
  5881     17F6  1903               	skipnz
  5882     17F7  2FE5               	goto	i1l8163
  5883     17F8  3A01               	xorlw	1	; case 3
  5884     17F9  1903               	skipnz
  5885     17FA  2FB1               	goto	i1l8151
  5886     17FB  3A07               	xorlw	7	; case 4
  5887     17FC  1903               	skipnz
  5888     17FD  2FC1               	goto	i1l8157
  5889     17FE  2FFF               	goto	i1l493
  5890     17FF                     i1l493:
  5891     17FF  0008               	return
  5892     1800                     __end_of_estado_ver_todos:
  5893                           
  5894                           	psect	text21
  5895     1441                     __ptext21:	
  5896 ;; *************** function ___lbdiv *****************
  5897 ;; Defined at:
  5898 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbdiv.c"
  5899 ;; Parameters:    Size  Location     Type
  5900 ;;  dividend        1    wreg     unsigned char 
  5901 ;;  divisor         1    1[COMMON] unsigned char 
  5902 ;; Auto vars:     Size  Location     Type
  5903 ;;  dividend        1    2[COMMON] unsigned char 
  5904 ;;  quotient        1    4[COMMON] unsigned char 
  5905 ;;  counter         1    3[COMMON] unsigned char 
  5906 ;; Return value:  Size  Location     Type
  5907 ;;                  1    wreg      unsigned char 
  5908 ;; Registers used:
  5909 ;;		wreg, status,2, status,0, btemp+1
  5910 ;; Tracked objects:
  5911 ;;		On entry : 0/0
  5912 ;;		On exit  : 0/0
  5913 ;;		Unchanged: 0/0
  5914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5915 ;;      Params:         1       0       0       0       0
  5916 ;;      Locals:         3       0       0       0       0
  5917 ;;      Temps:          0       0       0       0       0
  5918 ;;      Totals:         4       0       0       0       0
  5919 ;;Total ram usage:        4 bytes
  5920 ;; Hardware stack levels used: 1
  5921 ;; This function calls:
  5922 ;;		Nothing
  5923 ;; This function is called by:
  5924 ;;		_estado_ver_todos
  5925 ;; This function uses a non-reentrant model
  5926 ;;
  5927                           
  5928     1441                     ___lbdiv:	
  5929                           ;psect for function ___lbdiv
  5930                           
  5931                           
  5932                           ;incstack = 0
  5933                           ; Regs used in ___lbdiv: [wreg+status,2+status,0+btemp+1]
  5934                           ;___lbdiv@dividend stored from wreg
  5935     1441  00F2               	movwf	___lbdiv@dividend
  5936     1442                     i1l8009:
  5937     1442  01F4               	clrf	___lbdiv@quotient
  5938     1443                     i1l8011:
  5939     1443  0871               	movf	___lbdiv@divisor,w
  5940     1444  1903               	btfsc	3,2
  5941     1445  2C47               	goto	u798_21
  5942     1446  2C48               	goto	u798_20
  5943     1447                     u798_21:
  5944     1447  2C68               	goto	i1l8031
  5945     1448                     u798_20:
  5946     1448                     i1l8013:
  5947     1448  01F3               	clrf	___lbdiv@counter
  5948     1449  0AF3               	incf	___lbdiv@counter,f
  5949     144A  2C51               	goto	i1l8019
  5950     144B                     i1l8015:
  5951     144B  1003               	clrc
  5952     144C  0DF1               	rlf	___lbdiv@divisor,f
  5953     144D                     i1l8017:
  5954     144D  3001               	movlw	1
  5955     144E  00FF               	movwf	btemp+1
  5956     144F  087F               	movf	btemp+1,w
  5957     1450  07F3               	addwf	___lbdiv@counter,f
  5958     1451                     i1l8019:
  5959     1451  1FF1               	btfss	___lbdiv@divisor,7
  5960     1452  2C54               	goto	u799_21
  5961     1453  2C55               	goto	u799_20
  5962     1454                     u799_21:
  5963     1454  2C4B               	goto	i1l8015
  5964     1455                     u799_20:
  5965     1455                     i1l8021:
  5966     1455  1003               	clrc
  5967     1456  0DF4               	rlf	___lbdiv@quotient,f
  5968     1457  0871               	movf	___lbdiv@divisor,w
  5969     1458  0272               	subwf	___lbdiv@dividend,w
  5970     1459  1C03               	skipc
  5971     145A  2C5C               	goto	u800_21
  5972     145B  2C5D               	goto	u800_20
  5973     145C                     u800_21:
  5974     145C  2C60               	goto	i1l8027
  5975     145D                     u800_20:
  5976     145D                     i1l8023:
  5977     145D  0871               	movf	___lbdiv@divisor,w
  5978     145E  02F2               	subwf	___lbdiv@dividend,f
  5979     145F                     i1l8025:
  5980     145F  1474               	bsf	___lbdiv@quotient,0
  5981     1460                     i1l8027:
  5982     1460  1003               	clrc
  5983     1461  0CF1               	rrf	___lbdiv@divisor,f
  5984     1462                     i1l8029:
  5985     1462  3001               	movlw	1
  5986     1463  02F3               	subwf	___lbdiv@counter,f
  5987     1464  1D03               	btfss	3,2
  5988     1465  2C67               	goto	u801_21
  5989     1466  2C68               	goto	u801_20
  5990     1467                     u801_21:
  5991     1467  2C55               	goto	i1l8021
  5992     1468                     u801_20:
  5993     1468                     i1l8031:
  5994     1468  0874               	movf	___lbdiv@quotient,w
  5995     1469                     i1l877:
  5996     1469  0008               	return
  5997     146A                     __end_of___lbdiv:
  5998                           
  5999                           	psect	text22
  6000     0E5A                     __ptext22:	
  6001 ;; *************** function _estado_menu_principal *****************
  6002 ;; Defined at:
  6003 ;;		line 127 in file "estados.c"
  6004 ;; Parameters:    Size  Location     Type
  6005 ;;  opt             1    wreg     unsigned char 
  6006 ;; Auto vars:     Size  Location     Type
  6007 ;;  opt             1   68[BANK0 ] unsigned char 
  6008 ;;  i               1   77[BANK0 ] unsigned char 
  6009 ;;  i               1   76[BANK0 ] unsigned char 
  6010 ;;  t_int           2   78[BANK0 ] unsigned int 
  6011 ;;  menor           2   71[BANK0 ] unsigned int 
  6012 ;;  maior           2   69[BANK0 ] unsigned int 
  6013 ;;  qtd_val         1   75[BANK0 ] unsigned char 
  6014 ;;  qtd_sens        1   74[BANK0 ] unsigned char 
  6015 ;;  posicao         1   73[BANK0 ] unsigned char 
  6016 ;; Return value:  Size  Location     Type
  6017 ;;                  1    wreg      void 
  6018 ;; Registers used:
  6019 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6020 ;; Tracked objects:
  6021 ;;		On entry : 0/0
  6022 ;;		On exit  : 0/0
  6023 ;;		Unchanged: 0/0
  6024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6025 ;;      Params:         0       0       0       0       0
  6026 ;;      Locals:         0      12       0       0       0
  6027 ;;      Temps:          0       2       0       0       0
  6028 ;;      Totals:         0      14       0       0       0
  6029 ;;Total ram usage:       14 bytes
  6030 ;; Hardware stack levels used: 1
  6031 ;; Hardware stack levels required when called: 4
  6032 ;; This function calls:
  6033 ;;		___bmul
  6034 ;;		_adcon_ler_canal
  6035 ;;		_adcon_mostra
  6036 ;;		_eeprom_ler_word
  6037 ;;		_estado_executa_muda
  6038 ;;		_lcd_clear
  6039 ;;		i1_eeprom_gravar_word
  6040 ;;		i1_eeprom_read
  6041 ;;		i1_eeprom_write
  6042 ;;		i1_lcd_puts
  6043 ;; This function is called by:
  6044 ;;		_estado_maquina
  6045 ;; This function uses a non-reentrant model
  6046 ;;
  6047                           
  6048     0E5A                     _estado_menu_principal:	
  6049                           ;psect for function _estado_menu_principal
  6050                           
  6051                           
  6052                           ;incstack = 0
  6053 ;; hardware stack exceeded
  6054                           ; Regs used in _estado_menu_principal: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  6055                           ;estado_menu_principal@opt stored from wreg
  6056     0E5A  1283               	bcf	3,5	;RP0=0, select bank0
  6057     0E5B  1303               	bcf	3,6	;RP1=0, select bank0
  6058     0E5C  00E4               	movwf	estado_menu_principal@opt
  6059     0E5D                     i1l8037:
  6060                           
  6061                           ;estados.c: 128:     uint8_t qtd_val;;estados.c: 129:     uint8_t qtd_sens;;estados.c: 1
      +                          30:     uint16_t t_int;;estados.c: 131:     uint16_t maior, menor;;estados.c: 132:     u
      +                          int8_t posicao;;estados.c: 134:     switch (opt) {
  6062     0E5D  2FEC               	goto	i1l8129
  6063     0E5E                     i1l8039:
  6064                           
  6065                           ;estados.c: 136:             if (gl_item_menu_principal > 0) {
  6066     0E5E  1683               	bsf	3,5	;RP0=1, select bank1
  6067     0E5F  1303               	bcf	3,6	;RP1=0, select bank1
  6068     0E60  0851               	movf	_gl_item_menu_principal^(0+128),w
  6069     0E61  1903               	btfsc	3,2
  6070     0E62  2E64               	goto	u802_21
  6071     0E63  2E65               	goto	u802_20
  6072     0E64                     u802_21:
  6073     0E64  2FFF               	goto	i1l483
  6074     0E65                     u802_20:
  6075     0E65                     i1l8041:
  6076                           
  6077                           ;estados.c: 137:                 gl_item_menu_principal--;
  6078     0E65  3001               	movlw	1
  6079     0E66  02D1               	subwf	_gl_item_menu_principal^(0+128),f
  6080     0E67                     i1l8043:
  6081                           
  6082                           ;estados.c: 138:                 estado_executa_muda(EST_MENU_PRINCIPAL);
  6083     0E67  3001               	movlw	1
  6084     0E68  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6085     0E6D  2FFF               	goto	i1l483
  6086     0E6E                     i1l8045:
  6087                           
  6088                           ;estados.c: 143:             if (gl_item_menu_principal < 7 - 1) {
  6089     0E6E  3006               	movlw	6
  6090     0E6F  1683               	bsf	3,5	;RP0=1, select bank1
  6091     0E70  1303               	bcf	3,6	;RP1=0, select bank1
  6092     0E71  0251               	subwf	_gl_item_menu_principal^(0+128),w
  6093     0E72  1803               	skipnc
  6094     0E73  2E75               	goto	u803_21
  6095     0E74  2E76               	goto	u803_20
  6096     0E75                     u803_21:
  6097     0E75  2FFF               	goto	i1l483
  6098     0E76                     u803_20:
  6099     0E76                     i1l8047:
  6100                           
  6101                           ;estados.c: 144:                 gl_item_menu_principal++;
  6102     0E76  3001               	movlw	1
  6103     0E77  00FF               	movwf	btemp+1
  6104     0E78  087F               	movf	btemp+1,w
  6105     0E79  07D1               	addwf	_gl_item_menu_principal^(0+128),f
  6106     0E7A                     i1l8049:
  6107                           
  6108                           ;estados.c: 145:                 estado_executa_muda(EST_MENU_PRINCIPAL);
  6109     0E7A  3001               	movlw	1
  6110     0E7B  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6111     0E80  2FFF               	goto	i1l483
  6112     0E81                     i1l8051:
  6113                           
  6114                           ;estados.c: 156:                     lcd_clear();
  6115     0E81  160A  118A  2343  120A  158A  	fcall	_lcd_clear
  6116     0E86                     i1l8053:
  6117                           
  6118                           ;estados.c: 160:                     posicao = eeprom_read(0x00);
  6119     0E86  3000               	movlw	0
  6120     0E87  160A  118A  232C  120A  158A  	fcall	i1_eeprom_read
  6121     0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  6122     0E8D  1303               	bcf	3,6	;RP1=0, select bank0
  6123     0E8E  00E9               	movwf	estado_menu_principal@posicao
  6124     0E8F                     i1l8055:
  6125                           
  6126                           ;estados.c: 161:                     qtd_sens = menu_quant_sensores[posicao].i_quant_sen
      +                          sores;
  6127     0E8F  3003               	movlw	3
  6128     0E90  00F0               	movwf	___bmul@multiplicand
  6129     0E91  0869               	movf	estado_menu_principal@posicao,w
  6130     0E92  160A  118A  2317  120A  158A  	fcall	___bmul
  6131     0E97  3E02               	addlw	2
  6132     0E98  3E2E               	addlw	low (_menu_quant_sensores| (0+32768))
  6133     0E99  0084               	movwf	4
  6134     0E9A  3087               	movlw	high (_menu_quant_sensores| (0+32768))
  6135     0E9B  1803               	skipnc
  6136     0E9C  3E01               	addlw	1
  6137     0E9D  1283               	bcf	3,5	;RP0=0, select bank0
  6138     0E9E  1303               	bcf	3,6	;RP1=0, select bank0
  6139     0E9F  00FF               	movwf	btemp+1
  6140     0EA0  120A  118A  2700  120A  158A  	fcall	stringtab
  6141     0EA5  00EA               	movwf	estado_menu_principal@qtd_sens
  6142     0EA6                     i1l8057:
  6143                           
  6144                           ;estados.c: 163:                     for (uint8_t i = 0; i < qtd_sens; i++) {
  6145     0EA6  01EC               	clrf	estado_menu_principal@i
  6146     0EA7  2EC5               	goto	i1l8063
  6147     0EA8                     i1l8059:
  6148                           
  6149                           ;estados.c: 164:                         t_int = adcon_ler_canal(i);
  6150     0EA8  086C               	movf	estado_menu_principal@i,w
  6151     0EA9  120A  158A  230D  120A  158A  	fcall	_adcon_ler_canal
  6152     0EAE  0871               	movf	?_adcon_ler_canal+1,w
  6153     0EAF  1283               	bcf	3,5	;RP0=0, select bank0
  6154     0EB0  1303               	bcf	3,6	;RP1=0, select bank0
  6155     0EB1  00EF               	movwf	estado_menu_principal@t_int+1
  6156     0EB2  0870               	movf	?_adcon_ler_canal,w
  6157     0EB3  00EE               	movwf	estado_menu_principal@t_int
  6158                           
  6159                           ;estados.c: 166:                             adcon_mostra(t_int, i);
  6160     0EB4  086F               	movf	estado_menu_principal@t_int+1,w
  6161     0EB5  00BD               	movwf	adcon_mostra@t_int+1
  6162     0EB6  086E               	movf	estado_menu_principal@t_int,w
  6163     0EB7  00BC               	movwf	adcon_mostra@t_int
  6164     0EB8  086C               	movf	estado_menu_principal@i,w
  6165     0EB9  00BE               	movwf	adcon_mostra@i
  6166     0EBA  120A  158A  2383  120A  158A  	fcall	_adcon_mostra
  6167     0EBF                     i1l8061:
  6168                           
  6169                           ;estados.c: 174:                     }
  6170     0EBF  3001               	movlw	1
  6171     0EC0  00FF               	movwf	btemp+1
  6172     0EC1  087F               	movf	btemp+1,w
  6173     0EC2  1283               	bcf	3,5	;RP0=0, select bank0
  6174     0EC3  1303               	bcf	3,6	;RP1=0, select bank0
  6175     0EC4  07EC               	addwf	estado_menu_principal@i,f
  6176     0EC5                     i1l8063:
  6177     0EC5  086A               	movf	estado_menu_principal@qtd_sens,w
  6178     0EC6  026C               	subwf	estado_menu_principal@i,w
  6179     0EC7  1C03               	skipc
  6180     0EC8  2ECA               	goto	u804_21
  6181     0EC9  2ECB               	goto	u804_20
  6182     0ECA                     u804_21:
  6183     0ECA  2EA8               	goto	i1l8059
  6184     0ECB                     u804_20:
  6185     0ECB                     i1l8065:
  6186                           
  6187                           ;estados.c: 175:                     estado_executa_muda(EST_CAPTURA_E_MOSTRA);
  6188     0ECB  3002               	movlw	2
  6189     0ECC  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6190                           
  6191                           ;estados.c: 176:                     break;
  6192     0ED1  2FFF               	goto	i1l483
  6193     0ED2                     i1l8067:
  6194                           
  6195                           ;estados.c: 179:                     lcd_clear();
  6196     0ED2  160A  118A  2343  120A  158A  	fcall	_lcd_clear
  6197     0ED7                     i1l8069:
  6198                           
  6199                           ;estados.c: 184:                     qtd_val = eeprom_read(0x08);
  6200     0ED7  3008               	movlw	8
  6201     0ED8  160A  118A  232C  120A  158A  	fcall	i1_eeprom_read
  6202     0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  6203     0EDE  1303               	bcf	3,6	;RP1=0, select bank0
  6204     0EDF  00EB               	movwf	estado_menu_principal@qtd_val
  6205     0EE0                     i1l8071:
  6206                           
  6207                           ;estados.c: 185:                     maior = eeprom_ler_word(0x06);
  6208     0EE0  3006               	movlw	6
  6209     0EE1  160A  118A  23F2  120A  158A  	fcall	_eeprom_ler_word
  6210     0EE6  0872               	movf	?_eeprom_ler_word+1,w
  6211     0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  6212     0EE8  1303               	bcf	3,6	;RP1=0, select bank0
  6213     0EE9  00E6               	movwf	estado_menu_principal@maior+1
  6214     0EEA  0871               	movf	?_eeprom_ler_word,w
  6215     0EEB  00E5               	movwf	estado_menu_principal@maior
  6216     0EEC                     i1l8073:
  6217                           
  6218                           ;estados.c: 186:                     menor = eeprom_ler_word(0x04);
  6219     0EEC  3004               	movlw	4
  6220     0EED  160A  118A  23F2  120A  158A  	fcall	_eeprom_ler_word
  6221     0EF2  0872               	movf	?_eeprom_ler_word+1,w
  6222     0EF3  1283               	bcf	3,5	;RP0=0, select bank0
  6223     0EF4  1303               	bcf	3,6	;RP1=0, select bank0
  6224     0EF5  00E8               	movwf	estado_menu_principal@menor+1
  6225     0EF6  0871               	movf	?_eeprom_ler_word,w
  6226     0EF7  00E7               	movwf	estado_menu_principal@menor
  6227     0EF8                     i1l8075:
  6228                           
  6229                           ;estados.c: 188:                     for (uint8_t i = 0; i < qtd_sens; i++) {
  6230     0EF8  01ED               	clrf	estado_menu_principal@i_918
  6231     0EF9  2F84               	goto	i1l8105
  6232     0EFA                     i1l8077:
  6233                           
  6234                           ;estados.c: 189:                         if ((qtd_val + i) >= 100) {
  6235     0EFA  086B               	movf	estado_menu_principal@qtd_val,w
  6236     0EFB  076D               	addwf	estado_menu_principal@i_918,w
  6237     0EFC  00E2               	movwf	??_estado_menu_principal
  6238     0EFD  01E3               	clrf	??_estado_menu_principal+1
  6239     0EFE  0DE3               	rlf	??_estado_menu_principal+1,f
  6240     0EFF  0863               	movf	??_estado_menu_principal+1,w
  6241     0F00  3A80               	xorlw	128
  6242     0F01  00FF               	movwf	btemp+1
  6243     0F02  3080               	movlw	128
  6244     0F03  027F               	subwf	btemp+1,w
  6245     0F04  1D03               	skipz
  6246     0F05  2F08               	goto	u805_25
  6247     0F06  3064               	movlw	100
  6248     0F07  0262               	subwf	??_estado_menu_principal,w
  6249     0F08                     u805_25:
  6250     0F08  1C03               	skipc
  6251     0F09  2F0B               	goto	u805_21
  6252     0F0A  2F0C               	goto	u805_20
  6253     0F0B                     u805_21:
  6254     0F0B  2F1C               	goto	i1l8087
  6255     0F0C                     u805_20:
  6256     0F0C                     i1l8079:
  6257                           
  6258                           ;estados.c: 190:                             INTCONbits.T0IE = 0;
  6259     0F0C  128B               	bcf	11,5	;volatile
  6260     0F0D                     i1l8081:
  6261                           
  6262                           ;estados.c: 191:                             lcd_clear();
  6263     0F0D  160A  118A  2343  120A  158A  	fcall	_lcd_clear
  6264     0F12                     i1l8083:
  6265                           
  6266                           ;estados.c: 192:                             lcd_puts("Memoria Cheia");
  6267     0F12  30CA               	movlw	low (STR_16| (0+32768))
  6268     0F13  00F3               	movwf	i1lcd_puts@str
  6269     0F14  3087               	movlw	high (STR_16| (0+32768))
  6270     0F15  00F4               	movwf	i1lcd_puts@str+1
  6271     0F16  160A  118A  2494  120A  158A  	fcall	i1_lcd_puts
  6272                           
  6273                           ;estados.c: 193:                             break;
  6274     0F1B  2F8A               	goto	i1l8107
  6275     0F1C                     i1l8087:
  6276                           
  6277                           ;estados.c: 196:                             t_int = adcon_ler_canal(i);
  6278     0F1C  1283               	bcf	3,5	;RP0=0, select bank0
  6279     0F1D  1303               	bcf	3,6	;RP1=0, select bank0
  6280     0F1E  086D               	movf	estado_menu_principal@i_918,w
  6281     0F1F  120A  158A  230D  120A  158A  	fcall	_adcon_ler_canal
  6282     0F24  0871               	movf	?_adcon_ler_canal+1,w
  6283     0F25  1283               	bcf	3,5	;RP0=0, select bank0
  6284     0F26  1303               	bcf	3,6	;RP1=0, select bank0
  6285     0F27  00EF               	movwf	estado_menu_principal@t_int+1
  6286     0F28  0870               	movf	?_adcon_ler_canal,w
  6287     0F29  00EE               	movwf	estado_menu_principal@t_int
  6288     0F2A                     i1l8089:
  6289                           
  6290                           ;estados.c: 197:                             if (t_int < menor) {
  6291     0F2A  0868               	movf	estado_menu_principal@menor+1,w
  6292     0F2B  026F               	subwf	estado_menu_principal@t_int+1,w
  6293     0F2C  1D03               	skipz
  6294     0F2D  2F30               	goto	u806_25
  6295     0F2E  0867               	movf	estado_menu_principal@menor,w
  6296     0F2F  026E               	subwf	estado_menu_principal@t_int,w
  6297     0F30                     u806_25:
  6298     0F30  1803               	skipnc
  6299     0F31  2F33               	goto	u806_21
  6300     0F32  2F34               	goto	u806_20
  6301     0F33                     u806_21:
  6302     0F33  2F3E               	goto	i1l8093
  6303     0F34                     u806_20:
  6304     0F34                     i1l8091:
  6305                           
  6306                           ;estados.c: 198:                                 eeprom_gravar_word(0x04, t_int);
  6307     0F34  086F               	movf	estado_menu_principal@t_int+1,w
  6308     0F35  00F3               	movwf	i1eeprom_gravar_word@dado+1
  6309     0F36  086E               	movf	estado_menu_principal@t_int,w
  6310     0F37  00F2               	movwf	i1eeprom_gravar_word@dado
  6311     0F38  3004               	movlw	4
  6312     0F39  160A  118A  22F1  120A  158A  	fcall	i1_eeprom_gravar_word
  6313     0F3E                     i1l8093:
  6314                           
  6315                           ;estados.c: 200:                             if (t_int > maior) {
  6316     0F3E  1283               	bcf	3,5	;RP0=0, select bank0
  6317     0F3F  1303               	bcf	3,6	;RP1=0, select bank0
  6318     0F40  086F               	movf	estado_menu_principal@t_int+1,w
  6319     0F41  0266               	subwf	estado_menu_principal@maior+1,w
  6320     0F42  1D03               	skipz
  6321     0F43  2F46               	goto	u807_25
  6322     0F44  086E               	movf	estado_menu_principal@t_int,w
  6323     0F45  0265               	subwf	estado_menu_principal@maior,w
  6324     0F46                     u807_25:
  6325     0F46  1803               	skipnc
  6326     0F47  2F49               	goto	u807_21
  6327     0F48  2F4A               	goto	u807_20
  6328     0F49                     u807_21:
  6329     0F49  2F54               	goto	i1l477
  6330     0F4A                     u807_20:
  6331     0F4A                     i1l8095:
  6332                           
  6333                           ;estados.c: 201:                                 eeprom_gravar_word(0x06, t_int);
  6334     0F4A  086F               	movf	estado_menu_principal@t_int+1,w
  6335     0F4B  00F3               	movwf	i1eeprom_gravar_word@dado+1
  6336     0F4C  086E               	movf	estado_menu_principal@t_int,w
  6337     0F4D  00F2               	movwf	i1eeprom_gravar_word@dado
  6338     0F4E  3006               	movlw	6
  6339     0F4F  160A  118A  22F1  120A  158A  	fcall	i1_eeprom_gravar_word
  6340     0F54                     i1l477:	
  6341                           ;estados.c: 202:                             }
  6342                           
  6343                           
  6344                           ;estados.c: 203:                             eeprom_gravar_word(0x0e + (qtd_val * 2), t_
      +                          int);
  6345     0F54  1283               	bcf	3,5	;RP0=0, select bank0
  6346     0F55  1303               	bcf	3,6	;RP1=0, select bank0
  6347     0F56  086F               	movf	estado_menu_principal@t_int+1,w
  6348     0F57  00F3               	movwf	i1eeprom_gravar_word@dado+1
  6349     0F58  086E               	movf	estado_menu_principal@t_int,w
  6350     0F59  00F2               	movwf	i1eeprom_gravar_word@dado
  6351     0F5A  086B               	movf	estado_menu_principal@qtd_val,w
  6352     0F5B  00E2               	movwf	??_estado_menu_principal
  6353     0F5C  0762               	addwf	??_estado_menu_principal,w
  6354     0F5D  3E0E               	addlw	14
  6355     0F5E  160A  118A  22F1  120A  158A  	fcall	i1_eeprom_gravar_word
  6356     0F63                     i1l8097:
  6357                           
  6358                           ;estados.c: 204:                             qtd_val++;
  6359     0F63  3001               	movlw	1
  6360     0F64  00FF               	movwf	btemp+1
  6361     0F65  087F               	movf	btemp+1,w
  6362     0F66  1283               	bcf	3,5	;RP0=0, select bank0
  6363     0F67  1303               	bcf	3,6	;RP1=0, select bank0
  6364     0F68  07EB               	addwf	estado_menu_principal@qtd_val,f
  6365     0F69                     i1l8099:
  6366                           
  6367                           ;estados.c: 205:                             eeprom_write(0x08, qtd_val);
  6368     0F69  086B               	movf	estado_menu_principal@qtd_val,w
  6369     0F6A  00F0               	movwf	i1eeprom_write@value
  6370     0F6B  3008               	movlw	8
  6371     0F6C  160A  118A  24C1  120A  158A  	fcall	i1_eeprom_write
  6372     0F71                     i1l8101:
  6373                           
  6374                           ;estados.c: 207:                             adcon_mostra(t_int, i);
  6375     0F71  1283               	bcf	3,5	;RP0=0, select bank0
  6376     0F72  1303               	bcf	3,6	;RP1=0, select bank0
  6377     0F73  086F               	movf	estado_menu_principal@t_int+1,w
  6378     0F74  00BD               	movwf	adcon_mostra@t_int+1
  6379     0F75  086E               	movf	estado_menu_principal@t_int,w
  6380     0F76  00BC               	movwf	adcon_mostra@t_int
  6381     0F77  086D               	movf	estado_menu_principal@i_918,w
  6382     0F78  00BE               	movwf	adcon_mostra@i
  6383     0F79  120A  158A  2383  120A  158A  	fcall	_adcon_mostra
  6384     0F7E                     i1l8103:
  6385                           
  6386                           ;estados.c: 214:                     }
  6387     0F7E  3001               	movlw	1
  6388     0F7F  00FF               	movwf	btemp+1
  6389     0F80  087F               	movf	btemp+1,w
  6390     0F81  1283               	bcf	3,5	;RP0=0, select bank0
  6391     0F82  1303               	bcf	3,6	;RP1=0, select bank0
  6392     0F83  07ED               	addwf	estado_menu_principal@i_918,f
  6393     0F84                     i1l8105:
  6394     0F84  086A               	movf	estado_menu_principal@qtd_sens,w
  6395     0F85  026D               	subwf	estado_menu_principal@i_918,w
  6396     0F86  1C03               	skipc
  6397     0F87  2F89               	goto	u808_21
  6398     0F88  2F8A               	goto	u808_20
  6399     0F89                     u808_21:
  6400     0F89  2EFA               	goto	i1l8077
  6401     0F8A                     u808_20:
  6402     0F8A                     i1l8107:
  6403                           
  6404                           ;estados.c: 216:                     estado_executa_muda(EST_CAPTURA_E_GRAVA);
  6405     0F8A  3003               	movlw	3
  6406     0F8B  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6407                           
  6408                           ;estados.c: 217:                     break;
  6409     0F90  2FFF               	goto	i1l483
  6410     0F91                     i1l8109:
  6411                           
  6412                           ;estados.c: 220:                     estado_executa_muda(EST_MOSTRA_TODOS);
  6413     0F91  3004               	movlw	4
  6414     0F92  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6415                           
  6416                           ;estados.c: 221:                     break;
  6417     0F97  2FFF               	goto	i1l483
  6418     0F98                     i1l8111:
  6419                           
  6420                           ;estados.c: 224:                     estado_executa_muda(EST_MOSTRA_MAX_MIN);
  6421     0F98  3005               	movlw	5
  6422     0F99  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6423                           
  6424                           ;estados.c: 225:                     break;
  6425     0F9E  2FFF               	goto	i1l483
  6426     0F9F                     i1l8113:
  6427                           
  6428                           ;estados.c: 228:                     estado_executa_muda(EST_LIMPAR);
  6429     0F9F  3006               	movlw	6
  6430     0FA0  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6431                           
  6432                           ;estados.c: 229:                     break;
  6433     0FA5  2FFF               	goto	i1l483
  6434     0FA6                     i1l8115:
  6435                           
  6436                           ;estados.c: 232:                     gl_item_menu_config_amostra = eeprom_ler_word(0x02)
      +                          ;
  6437     0FA6  3002               	movlw	2
  6438     0FA7  160A  118A  23F2  120A  158A  	fcall	_eeprom_ler_word
  6439     0FAC  0872               	movf	?_eeprom_ler_word+1,w
  6440     0FAD  1683               	bsf	3,5	;RP0=1, select bank1
  6441     0FAE  1303               	bcf	3,6	;RP1=0, select bank1
  6442     0FAF  00CC               	movwf	(_gl_item_menu_config_amostra+1)^(0+128)
  6443     0FB0  0871               	movf	?_eeprom_ler_word,w
  6444     0FB1  00CB               	movwf	_gl_item_menu_config_amostra^(0+128)
  6445     0FB2                     i1l8117:
  6446                           
  6447                           ;estados.c: 233:                     estado_executa_muda(EST_MENU_CONF_TEMPO_AMOSTRA);
  6448     0FB2  3007               	movlw	7
  6449     0FB3  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6450                           
  6451                           ;estados.c: 234:                     break;
  6452     0FB8  2FFF               	goto	i1l483
  6453     0FB9                     i1l8119:
  6454                           
  6455                           ;estados.c: 237:                     gl_item_menu_config_sensores = eeprom_read(0x00);
  6456     0FB9  3000               	movlw	0
  6457     0FBA  160A  118A  232C  120A  158A  	fcall	i1_eeprom_read
  6458     0FBF  1683               	bsf	3,5	;RP0=1, select bank1
  6459     0FC0  1303               	bcf	3,6	;RP1=0, select bank1
  6460     0FC1  00CF               	movwf	_gl_item_menu_config_sensores^(0+128)
  6461     0FC2                     i1l8121:
  6462                           
  6463                           ;estados.c: 238:                     estado_executa_muda(EST_MENU_CONF_QUANT_SENSORES);
  6464     0FC2  3008               	movlw	8
  6465     0FC3  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6466                           
  6467                           ;estados.c: 239:                     break;
  6468     0FC8  2FFF               	goto	i1l483
  6469     0FC9                     i1l8125:
  6470     0FC9  1683               	bsf	3,5	;RP0=1, select bank1
  6471     0FCA  1303               	bcf	3,6	;RP1=0, select bank1
  6472     0FCB  0851               	movf	_gl_item_menu_principal^(0+128),w
  6473     0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  6474     0FCD  1303               	bcf	3,6	;RP1=0, select bank0
  6475     0FCE  00E2               	movwf	??_estado_menu_principal
  6476     0FCF  01E3               	clrf	??_estado_menu_principal+1
  6477                           
  6478                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6479                           ; Switch size 1, requested type "simple"
  6480                           ; Number of cases is 1, Range of values is 0 to 0
  6481                           ; switch strategies available:
  6482                           ; Name         Instructions Cycles
  6483                           ; simple_byte            4     3 (average)
  6484                           ; direct_byte           11     8 (fixed)
  6485                           ; jumptable            260     6 (fixed)
  6486                           ;	Chosen strategy is simple_byte
  6487     0FD0  0863               	movf	??_estado_menu_principal+1,w
  6488     0FD1  3A00               	xorlw	0	; case 0
  6489     0FD2  1903               	skipnz
  6490     0FD3  2FD5               	goto	i1l8855
  6491     0FD4  2FFF               	goto	i1l483
  6492     0FD5                     i1l8855:
  6493                           
  6494                           ; Switch size 1, requested type "simple"
  6495                           ; Number of cases is 7, Range of values is 0 to 6
  6496                           ; switch strategies available:
  6497                           ; Name         Instructions Cycles
  6498                           ; simple_byte           22    12 (average)
  6499                           ; direct_byte           29     8 (fixed)
  6500                           ; jumptable            260     6 (fixed)
  6501                           ;	Chosen strategy is simple_byte
  6502     0FD5  0862               	movf	??_estado_menu_principal,w
  6503     0FD6  3A00               	xorlw	0	; case 0
  6504     0FD7  1903               	skipnz
  6505     0FD8  2E81               	goto	i1l8051
  6506     0FD9  3A01               	xorlw	1	; case 1
  6507     0FDA  1903               	skipnz
  6508     0FDB  2ED2               	goto	i1l8067
  6509     0FDC  3A03               	xorlw	3	; case 2
  6510     0FDD  1903               	skipnz
  6511     0FDE  2F91               	goto	i1l8109
  6512     0FDF  3A01               	xorlw	1	; case 3
  6513     0FE0  1903               	skipnz
  6514     0FE1  2F98               	goto	i1l8111
  6515     0FE2  3A07               	xorlw	7	; case 4
  6516     0FE3  1903               	skipnz
  6517     0FE4  2F9F               	goto	i1l8113
  6518     0FE5  3A01               	xorlw	1	; case 5
  6519     0FE6  1903               	skipnz
  6520     0FE7  2FA6               	goto	i1l8115
  6521     0FE8  3A03               	xorlw	3	; case 6
  6522     0FE9  1903               	skipnz
  6523     0FEA  2FB9               	goto	i1l8119
  6524     0FEB  2FFF               	goto	i1l483
  6525     0FEC                     i1l8129:
  6526     0FEC  0864               	movf	estado_menu_principal@opt,w
  6527     0FED  00E2               	movwf	??_estado_menu_principal
  6528     0FEE  01E3               	clrf	??_estado_menu_principal+1
  6529                           
  6530                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6531                           ; Switch size 1, requested type "simple"
  6532                           ; Number of cases is 1, Range of values is 0 to 0
  6533                           ; switch strategies available:
  6534                           ; Name         Instructions Cycles
  6535                           ; simple_byte            4     3 (average)
  6536                           ; direct_byte           11     8 (fixed)
  6537                           ; jumptable            260     6 (fixed)
  6538                           ;	Chosen strategy is simple_byte
  6539     0FEF  0863               	movf	??_estado_menu_principal+1,w
  6540     0FF0  3A00               	xorlw	0	; case 0
  6541     0FF1  1903               	skipnz
  6542     0FF2  2FF4               	goto	i1l8857
  6543     0FF3  2FFF               	goto	i1l483
  6544     0FF4                     i1l8857:
  6545                           
  6546                           ; Switch size 1, requested type "simple"
  6547                           ; Number of cases is 3, Range of values is 1 to 4
  6548                           ; switch strategies available:
  6549                           ; Name         Instructions Cycles
  6550                           ; simple_byte           10     6 (average)
  6551                           ; direct_byte           23    11 (fixed)
  6552                           ; jumptable            263     9 (fixed)
  6553                           ;	Chosen strategy is simple_byte
  6554     0FF4  0862               	movf	??_estado_menu_principal,w
  6555     0FF5  3A01               	xorlw	1	; case 1
  6556     0FF6  1903               	skipnz
  6557     0FF7  2FC9               	goto	i1l8125
  6558     0FF8  3A02               	xorlw	2	; case 3
  6559     0FF9  1903               	skipnz
  6560     0FFA  2E5E               	goto	i1l8039
  6561     0FFB  3A07               	xorlw	7	; case 4
  6562     0FFC  1903               	skipnz
  6563     0FFD  2E6E               	goto	i1l8045
  6564     0FFE  2FFF               	goto	i1l483
  6565     0FFF                     i1l483:
  6566     0FFF  0008               	return
  6567     1000                     __end_of_estado_menu_principal:
  6568                           
  6569                           	psect	text23
  6570     12C6                     __ptext23:	
  6571 ;; *************** function _estado_menu_limpar *****************
  6572 ;; Defined at:
  6573 ;;		line 106 in file "estados.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;  opt             1    wreg     unsigned char 
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;  opt             1   12[COMMON] unsigned char 
  6578 ;; Return value:  Size  Location     Type
  6579 ;;                  1    wreg      void 
  6580 ;; Registers used:
  6581 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6582 ;; Tracked objects:
  6583 ;;		On entry : 0/0
  6584 ;;		On exit  : 0/0
  6585 ;;		Unchanged: 0/0
  6586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6587 ;;      Params:         0       0       0       0       0
  6588 ;;      Locals:         1       0       0       0       0
  6589 ;;      Temps:          0       0       0       0       0
  6590 ;;      Totals:         1       0       0       0       0
  6591 ;;Total ram usage:        1 bytes
  6592 ;; Hardware stack levels used: 1
  6593 ;; Hardware stack levels required when called: 4
  6594 ;; This function calls:
  6595 ;;		_estado_executa_muda
  6596 ;; This function is called by:
  6597 ;;		_estado_maquina
  6598 ;; This function uses a non-reentrant model
  6599 ;;
  6600                           
  6601     12C6                     _estado_menu_limpar:	
  6602                           ;psect for function _estado_menu_limpar
  6603                           
  6604                           
  6605                           ;incstack = 0
  6606 ;; hardware stack exceeded
  6607                           ; Regs used in _estado_menu_limpar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6608                           ;estado_menu_limpar@opt stored from wreg
  6609     12C6  00FC               	movwf	estado_menu_limpar@opt
  6610     12C7                     i1l8179:
  6611                           
  6612                           ;estados.c: 107:     if (opt == 2) {
  6613     12C7  3002               	movlw	2
  6614     12C8  067C               	xorwf	estado_menu_limpar@opt,w
  6615     12C9  1D03               	btfss	3,2
  6616     12CA  2ACC               	goto	u813_21
  6617     12CB  2ACD               	goto	u813_20
  6618     12CC                     u813_21:
  6619     12CC  2AD3               	goto	i1l450
  6620     12CD                     u813_20:
  6621     12CD                     i1l8181:
  6622                           
  6623                           ;estados.c: 108:         estado_executa_muda(EST_MENU_PRINCIPAL);
  6624     12CD  3001               	movlw	1
  6625     12CE  120A  118A  204B  160A  118A  	fcall	_estado_executa_muda
  6626     12D3                     i1l450:
  6627     12D3  0008               	return
  6628     12D4                     __end_of_estado_menu_limpar:
  6629                           
  6630                           	psect	text24
  6631     096B                     __ptext24:	
  6632 ;; *************** function _estado_menu_conf_tempo_amostra *****************
  6633 ;; Defined at:
  6634 ;;		line 290 in file "estados.c"
  6635 ;; Parameters:    Size  Location     Type
  6636 ;;  opt             1    wreg     unsigned char 
  6637 ;; Auto vars:     Size  Location     Type
  6638 ;;  opt             1   66[BANK0 ] unsigned char 
  6639 ;; Return value:  Size  Location     Type
  6640 ;;                  1    wreg      void 
  6641 ;; Registers used:
  6642 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6643 ;; Tracked objects:
  6644 ;;		On entry : 0/0
  6645 ;;		On exit  : 0/0
  6646 ;;		Unchanged: 0/0
  6647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6648 ;;      Params:         0       0       0       0       0
  6649 ;;      Locals:         0       1       0       0       0
  6650 ;;      Temps:          2       0       0       0       0
  6651 ;;      Totals:         2       1       0       0       0
  6652 ;;Total ram usage:        3 bytes
  6653 ;; Hardware stack levels used: 1
  6654 ;; Hardware stack levels required when called: 4
  6655 ;; This function calls:
  6656 ;;		_estado_executa_muda
  6657 ;;		i1_eeprom_gravar_word
  6658 ;; This function is called by:
  6659 ;;		_estado_maquina
  6660 ;; This function uses a non-reentrant model
  6661 ;;
  6662                           
  6663     096B                     _estado_menu_conf_tempo_amostra:	
  6664                           ;psect for function _estado_menu_conf_tempo_amostra
  6665                           
  6666                           
  6667                           ;incstack = 0
  6668 ;; hardware stack exceeded
  6669                           ; Regs used in _estado_menu_conf_tempo_amostra: [wreg-fsr0h+status,2+status,0+btemp+1+pc
      +                          lath+cstack]
  6670                           ;estado_menu_conf_tempo_amostra@opt stored from wreg
  6671     096B  1283               	bcf	3,5	;RP0=0, select bank0
  6672     096C  1303               	bcf	3,6	;RP1=0, select bank0
  6673     096D  00E2               	movwf	estado_menu_conf_tempo_amostra@opt
  6674     096E                     i1l8183:
  6675                           
  6676                           ;estados.c: 291:     switch (opt) {
  6677     096E  29B6               	goto	i1l8205
  6678     096F                     i1l8185:
  6679                           
  6680                           ;estados.c: 293:             if (gl_item_menu_config_amostra >= 1) {
  6681     096F  1683               	bsf	3,5	;RP0=1, select bank1
  6682     0970  1303               	bcf	3,6	;RP1=0, select bank1
  6683     0971  084B               	movf	_gl_item_menu_config_amostra^(0+128),w
  6684     0972  044C               	iorwf	(_gl_item_menu_config_amostra+1)^(0+128),w
  6685     0973  1903               	btfsc	3,2
  6686     0974  2976               	goto	u814_21
  6687     0975  2977               	goto	u814_20
  6688     0976                     u814_21:
  6689     0976  29CC               	goto	i1l508
  6690     0977                     u814_20:
  6691     0977                     i1l8187:
  6692                           
  6693                           ;estados.c: 294:                 gl_item_menu_config_amostra--;
  6694     0977  3001               	movlw	1
  6695     0978  02CB               	subwf	_gl_item_menu_config_amostra^(0+128),f
  6696     0979  3000               	movlw	0
  6697     097A  1C03               	skipc
  6698     097B  03CC               	decf	(_gl_item_menu_config_amostra+1)^(0+128),f
  6699     097C  02CC               	subwf	(_gl_item_menu_config_amostra+1)^(0+128),f
  6700     097D                     i1l8189:
  6701                           
  6702                           ;estados.c: 295:                 estado_executa_muda(EST_MENU_CONF_TEMPO_AMOSTRA);
  6703     097D  3007               	movlw	7
  6704     097E  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6705     0983  29CC               	goto	i1l508
  6706     0984                     i1l8191:
  6707                           
  6708                           ;estados.c: 300:             if (gl_item_menu_config_amostra < ((sizeof(menu_tempo_amost
      +                          ra) / sizeof(menu_amostra)) - 1)) {
  6709     0984  3000               	movlw	0
  6710     0985  1683               	bsf	3,5	;RP0=1, select bank1
  6711     0986  1303               	bcf	3,6	;RP1=0, select bank1
  6712     0987  024C               	subwf	(_gl_item_menu_config_amostra+1)^(0+128),w
  6713     0988  3006               	movlw	6
  6714     0989  1903               	skipnz
  6715     098A  024B               	subwf	_gl_item_menu_config_amostra^(0+128),w
  6716     098B  1803               	skipnc
  6717     098C  298E               	goto	u815_21
  6718     098D  298F               	goto	u815_20
  6719     098E                     u815_21:
  6720     098E  29CC               	goto	i1l508
  6721     098F                     u815_20:
  6722     098F                     i1l8193:
  6723                           
  6724                           ;estados.c: 301:                 gl_item_menu_config_amostra++;
  6725     098F  3001               	movlw	1
  6726     0990  07CB               	addwf	_gl_item_menu_config_amostra^(0+128),f
  6727     0991  1803               	skipnc
  6728     0992  0ACC               	incf	(_gl_item_menu_config_amostra+1)^(0+128),f
  6729     0993  3000               	movlw	0
  6730     0994  07CC               	addwf	(_gl_item_menu_config_amostra+1)^(0+128),f
  6731     0995                     i1l8195:
  6732                           
  6733                           ;estados.c: 302:                 estado_executa_muda(EST_MENU_CONF_TEMPO_AMOSTRA);
  6734     0995  3007               	movlw	7
  6735     0996  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6736     099B  29CC               	goto	i1l508
  6737     099C                     i1l8197:
  6738                           
  6739                           ;estados.c: 306:             estado_executa_muda(EST_MENU_PRINCIPAL);
  6740     099C  3001               	movlw	1
  6741     099D  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6742                           
  6743                           ;estados.c: 307:             break;
  6744     09A2  29CC               	goto	i1l508
  6745     09A3                     i1l8199:
  6746                           
  6747                           ;estados.c: 309:             eeprom_gravar_word(0x02, gl_item_menu_config_amostra);
  6748     09A3  1683               	bsf	3,5	;RP0=1, select bank1
  6749     09A4  1303               	bcf	3,6	;RP1=0, select bank1
  6750     09A5  084C               	movf	(_gl_item_menu_config_amostra+1)^(0+128),w
  6751     09A6  00F3               	movwf	i1eeprom_gravar_word@dado+1
  6752     09A7  084B               	movf	_gl_item_menu_config_amostra^(0+128),w
  6753     09A8  00F2               	movwf	i1eeprom_gravar_word@dado
  6754     09A9  3002               	movlw	2
  6755     09AA  160A  118A  22F1  120A  158A  	fcall	i1_eeprom_gravar_word
  6756     09AF                     i1l8201:
  6757                           
  6758                           ;estados.c: 310:             estado_executa_muda(EST_MENU_PRINCIPAL);
  6759     09AF  3001               	movlw	1
  6760     09B0  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6761                           
  6762                           ;estados.c: 311:             break;
  6763     09B5  29CC               	goto	i1l508
  6764     09B6                     i1l8205:
  6765     09B6  0862               	movf	estado_menu_conf_tempo_amostra@opt,w
  6766     09B7  00FC               	movwf	??_estado_menu_conf_tempo_amostra
  6767     09B8  01FD               	clrf	??_estado_menu_conf_tempo_amostra+1
  6768                           
  6769                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6770                           ; Switch size 1, requested type "simple"
  6771                           ; Number of cases is 1, Range of values is 0 to 0
  6772                           ; switch strategies available:
  6773                           ; Name         Instructions Cycles
  6774                           ; simple_byte            4     3 (average)
  6775                           ; direct_byte           11     8 (fixed)
  6776                           ; jumptable            260     6 (fixed)
  6777                           ;	Chosen strategy is simple_byte
  6778     09B9  087D               	movf	??_estado_menu_conf_tempo_amostra+1,w
  6779     09BA  3A00               	xorlw	0	; case 0
  6780     09BB  1903               	skipnz
  6781     09BC  29BE               	goto	i1l8859
  6782     09BD  29CC               	goto	i1l508
  6783     09BE                     i1l8859:
  6784                           
  6785                           ; Switch size 1, requested type "simple"
  6786                           ; Number of cases is 4, Range of values is 1 to 4
  6787                           ; switch strategies available:
  6788                           ; Name         Instructions Cycles
  6789                           ; simple_byte           13     7 (average)
  6790                           ; direct_byte           23    11 (fixed)
  6791                           ; jumptable            263     9 (fixed)
  6792                           ;	Chosen strategy is simple_byte
  6793     09BE  087C               	movf	??_estado_menu_conf_tempo_amostra,w
  6794     09BF  3A01               	xorlw	1	; case 1
  6795     09C0  1903               	skipnz
  6796     09C1  29A3               	goto	i1l8199
  6797     09C2  3A03               	xorlw	3	; case 2
  6798     09C3  1903               	skipnz
  6799     09C4  299C               	goto	i1l8197
  6800     09C5  3A01               	xorlw	1	; case 3
  6801     09C6  1903               	skipnz
  6802     09C7  296F               	goto	i1l8185
  6803     09C8  3A07               	xorlw	7	; case 4
  6804     09C9  1903               	skipnz
  6805     09CA  2984               	goto	i1l8191
  6806     09CB  29CC               	goto	i1l508
  6807     09CC                     i1l508:
  6808     09CC  0008               	return
  6809     09CD                     __end_of_estado_menu_conf_tempo_amostra:
  6810                           
  6811                           	psect	text25
  6812     08BC                     __ptext25:	
  6813 ;; *************** function _estado_menu_conf_quant_sensores *****************
  6814 ;; Defined at:
  6815 ;;		line 329 in file "estados.c"
  6816 ;; Parameters:    Size  Location     Type
  6817 ;;  opt             1    wreg     unsigned char 
  6818 ;; Auto vars:     Size  Location     Type
  6819 ;;  opt             1   66[BANK0 ] unsigned char 
  6820 ;; Return value:  Size  Location     Type
  6821 ;;                  1    wreg      void 
  6822 ;; Registers used:
  6823 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6824 ;; Tracked objects:
  6825 ;;		On entry : 0/0
  6826 ;;		On exit  : 0/0
  6827 ;;		Unchanged: 0/0
  6828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6829 ;;      Params:         0       0       0       0       0
  6830 ;;      Locals:         0       1       0       0       0
  6831 ;;      Temps:          2       0       0       0       0
  6832 ;;      Totals:         2       1       0       0       0
  6833 ;;Total ram usage:        3 bytes
  6834 ;; Hardware stack levels used: 1
  6835 ;; Hardware stack levels required when called: 4
  6836 ;; This function calls:
  6837 ;;		_estado_executa_muda
  6838 ;;		i1_eeprom_write
  6839 ;; This function is called by:
  6840 ;;		_estado_maquina
  6841 ;; This function uses a non-reentrant model
  6842 ;;
  6843                           
  6844     08BC                     _estado_menu_conf_quant_sensores:	
  6845                           ;psect for function _estado_menu_conf_quant_sensores
  6846                           
  6847                           
  6848                           ;incstack = 0
  6849 ;; hardware stack exceeded
  6850                           ; Regs used in _estado_menu_conf_quant_sensores: [wreg-fsr0h+status,2+status,0+btemp+1+p
      +                          clath+cstack]
  6851                           ;estado_menu_conf_quant_sensores@opt stored from wreg
  6852     08BC  1283               	bcf	3,5	;RP0=0, select bank0
  6853     08BD  1303               	bcf	3,6	;RP1=0, select bank0
  6854     08BE  00E2               	movwf	estado_menu_conf_quant_sensores@opt
  6855     08BF                     i1l8213:
  6856                           
  6857                           ;estados.c: 330:     switch (opt) {
  6858     08BF  28FB               	goto	i1l8235
  6859     08C0                     i1l8215:
  6860                           
  6861                           ;estados.c: 333:             if (gl_item_menu_config_sensores >= 1) {
  6862     08C0  1683               	bsf	3,5	;RP0=1, select bank1
  6863     08C1  1303               	bcf	3,6	;RP1=0, select bank1
  6864     08C2  084F               	movf	_gl_item_menu_config_sensores^(0+128),w
  6865     08C3  1903               	btfsc	3,2
  6866     08C4  28C6               	goto	u816_21
  6867     08C5  28C7               	goto	u816_20
  6868     08C6                     u816_21:
  6869     08C6  2911               	goto	i1l523
  6870     08C7                     u816_20:
  6871     08C7                     i1l8217:
  6872                           
  6873                           ;estados.c: 334:                 gl_item_menu_config_sensores--;
  6874     08C7  3001               	movlw	1
  6875     08C8  02CF               	subwf	_gl_item_menu_config_sensores^(0+128),f
  6876     08C9                     i1l8219:
  6877                           
  6878                           ;estados.c: 335:                 estado_executa_muda(EST_MENU_CONF_QUANT_SENSORES);
  6879     08C9  3008               	movlw	8
  6880     08CA  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6881     08CF  2911               	goto	i1l523
  6882     08D0                     i1l8221:
  6883                           
  6884                           ;estados.c: 340:             if (gl_item_menu_config_sensores < 4 - 1) {
  6885     08D0  3003               	movlw	3
  6886     08D1  1683               	bsf	3,5	;RP0=1, select bank1
  6887     08D2  1303               	bcf	3,6	;RP1=0, select bank1
  6888     08D3  024F               	subwf	_gl_item_menu_config_sensores^(0+128),w
  6889     08D4  1803               	skipnc
  6890     08D5  28D7               	goto	u817_21
  6891     08D6  28D8               	goto	u817_20
  6892     08D7                     u817_21:
  6893     08D7  2911               	goto	i1l523
  6894     08D8                     u817_20:
  6895     08D8                     i1l8223:
  6896                           
  6897                           ;estados.c: 341:                 gl_item_menu_config_sensores++;
  6898     08D8  3001               	movlw	1
  6899     08D9  00FF               	movwf	btemp+1
  6900     08DA  087F               	movf	btemp+1,w
  6901     08DB  07CF               	addwf	_gl_item_menu_config_sensores^(0+128),f
  6902     08DC                     i1l8225:
  6903                           
  6904                           ;estados.c: 342:                 estado_executa_muda(EST_MENU_CONF_QUANT_SENSORES);
  6905     08DC  3008               	movlw	8
  6906     08DD  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6907     08E2  2911               	goto	i1l523
  6908     08E3                     i1l8227:
  6909                           
  6910                           ;estados.c: 346:             estado_executa_muda(EST_MENU_PRINCIPAL);
  6911     08E3  3001               	movlw	1
  6912     08E4  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6913                           
  6914                           ;estados.c: 347:             break;
  6915     08E9  2911               	goto	i1l523
  6916     08EA                     i1l8229:
  6917                           
  6918                           ;estados.c: 349:             eeprom_write(0x00, gl_item_menu_config_sensores);
  6919     08EA  1683               	bsf	3,5	;RP0=1, select bank1
  6920     08EB  1303               	bcf	3,6	;RP1=0, select bank1
  6921     08EC  084F               	movf	_gl_item_menu_config_sensores^(0+128),w
  6922     08ED  00F0               	movwf	i1eeprom_write@value
  6923     08EE  3000               	movlw	0
  6924     08EF  160A  118A  24C1  120A  158A  	fcall	i1_eeprom_write
  6925     08F4                     i1l8231:
  6926                           
  6927                           ;estados.c: 350:             estado_executa_muda(EST_MENU_PRINCIPAL);
  6928     08F4  3001               	movlw	1
  6929     08F5  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6930                           
  6931                           ;estados.c: 351:             break;
  6932     08FA  2911               	goto	i1l523
  6933     08FB                     i1l8235:
  6934     08FB  0862               	movf	estado_menu_conf_quant_sensores@opt,w
  6935     08FC  00FC               	movwf	??_estado_menu_conf_quant_sensores
  6936     08FD  01FD               	clrf	??_estado_menu_conf_quant_sensores+1
  6937                           
  6938                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6939                           ; Switch size 1, requested type "simple"
  6940                           ; Number of cases is 1, Range of values is 0 to 0
  6941                           ; switch strategies available:
  6942                           ; Name         Instructions Cycles
  6943                           ; simple_byte            4     3 (average)
  6944                           ; direct_byte           11     8 (fixed)
  6945                           ; jumptable            260     6 (fixed)
  6946                           ;	Chosen strategy is simple_byte
  6947     08FE  087D               	movf	??_estado_menu_conf_quant_sensores+1,w
  6948     08FF  3A00               	xorlw	0	; case 0
  6949     0900  1903               	skipnz
  6950     0901  2903               	goto	i1l8861
  6951     0902  2911               	goto	i1l523
  6952     0903                     i1l8861:
  6953                           
  6954                           ; Switch size 1, requested type "simple"
  6955                           ; Number of cases is 4, Range of values is 1 to 4
  6956                           ; switch strategies available:
  6957                           ; Name         Instructions Cycles
  6958                           ; simple_byte           13     7 (average)
  6959                           ; direct_byte           23    11 (fixed)
  6960                           ; jumptable            263     9 (fixed)
  6961                           ;	Chosen strategy is simple_byte
  6962     0903  087C               	movf	??_estado_menu_conf_quant_sensores,w
  6963     0904  3A01               	xorlw	1	; case 1
  6964     0905  1903               	skipnz
  6965     0906  28EA               	goto	i1l8229
  6966     0907  3A03               	xorlw	3	; case 2
  6967     0908  1903               	skipnz
  6968     0909  28E3               	goto	i1l8227
  6969     090A  3A01               	xorlw	1	; case 3
  6970     090B  1903               	skipnz
  6971     090C  28C0               	goto	i1l8215
  6972     090D  3A07               	xorlw	7	; case 4
  6973     090E  1903               	skipnz
  6974     090F  28D0               	goto	i1l8221
  6975     0910  2911               	goto	i1l523
  6976     0911                     i1l523:
  6977     0911  0008               	return
  6978     0912                     __end_of_estado_menu_conf_quant_sensores:
  6979                           
  6980                           	psect	text26
  6981     12B8                     __ptext26:	
  6982 ;; *************** function _estado_max_min *****************
  6983 ;; Defined at:
  6984 ;;		line 280 in file "estados.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;  opt             1    wreg     unsigned char 
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;  opt             1   12[COMMON] unsigned char 
  6989 ;; Return value:  Size  Location     Type
  6990 ;;                  1    wreg      void 
  6991 ;; Registers used:
  6992 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6993 ;; Tracked objects:
  6994 ;;		On entry : 0/0
  6995 ;;		On exit  : 0/0
  6996 ;;		Unchanged: 0/0
  6997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6998 ;;      Params:         0       0       0       0       0
  6999 ;;      Locals:         1       0       0       0       0
  7000 ;;      Temps:          0       0       0       0       0
  7001 ;;      Totals:         1       0       0       0       0
  7002 ;;Total ram usage:        1 bytes
  7003 ;; Hardware stack levels used: 1
  7004 ;; Hardware stack levels required when called: 4
  7005 ;; This function calls:
  7006 ;;		_estado_executa_muda
  7007 ;; This function is called by:
  7008 ;;		_estado_maquina
  7009 ;; This function uses a non-reentrant model
  7010 ;;
  7011                           
  7012     12B8                     _estado_max_min:	
  7013                           ;psect for function _estado_max_min
  7014                           
  7015                           
  7016                           ;incstack = 0
  7017 ;; hardware stack exceeded
  7018                           ; Regs used in _estado_max_min: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7019                           ;estado_max_min@opt stored from wreg
  7020     12B8  00FC               	movwf	estado_max_min@opt
  7021     12B9                     i1l8175:
  7022                           
  7023                           ;estados.c: 281:     if (opt == 2) {
  7024     12B9  3002               	movlw	2
  7025     12BA  067C               	xorwf	estado_max_min@opt,w
  7026     12BB  1D03               	btfss	3,2
  7027     12BC  2ABE               	goto	u812_21
  7028     12BD  2ABF               	goto	u812_20
  7029     12BE                     u812_21:
  7030     12BE  2AC5               	goto	i1l497
  7031     12BF                     u812_20:
  7032     12BF                     i1l8177:
  7033                           
  7034                           ;estados.c: 282:         estado_executa_muda(EST_MENU_PRINCIPAL);
  7035     12BF  3001               	movlw	1
  7036     12C0  120A  118A  204B  160A  118A  	fcall	_estado_executa_muda
  7037     12C5                     i1l497:
  7038     12C5  0008               	return
  7039     12C6                     __end_of_estado_max_min:
  7040                           
  7041                           	psect	text27
  7042     12A9                     __ptext27:	
  7043 ;; *************** function _estado_inicial *****************
  7044 ;; Defined at:
  7045 ;;		line 98 in file "estados.c"
  7046 ;; Parameters:    Size  Location     Type
  7047 ;;  opt             1    wreg     unsigned char 
  7048 ;; Auto vars:     Size  Location     Type
  7049 ;;  opt             1    0[COMMON] unsigned char 
  7050 ;; Return value:  Size  Location     Type
  7051 ;;                  1    wreg      void 
  7052 ;; Registers used:
  7053 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7054 ;; Tracked objects:
  7055 ;;		On entry : 0/0
  7056 ;;		On exit  : 0/0
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7059 ;;      Params:         0       0       0       0       0
  7060 ;;      Locals:         0       0       0       0       0
  7061 ;;      Temps:          0       0       0       0       0
  7062 ;;      Totals:         0       0       0       0       0
  7063 ;;Total ram usage:        0 bytes
  7064 ;; Hardware stack levels used: 1
  7065 ;; Hardware stack levels required when called: 4
  7066 ;; This function calls:
  7067 ;;		_estado_executa_muda
  7068 ;; This function is called by:
  7069 ;;		_estado_maquina
  7070 ;; This function uses a non-reentrant model
  7071 ;;
  7072                           
  7073     12A9                     _estado_inicial:	
  7074                           ;psect for function _estado_inicial
  7075                           
  7076     12A9                     i1l8035:	
  7077                           ;incstack = 0
  7078 ;; hardware stack exceeded
  7079                           ; Regs used in _estado_inicial: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7080                           
  7081                           
  7082                           ;estados.c: 99:     estado_executa_muda(EST_MENU_PRINCIPAL);
  7083     12A9  3001               	movlw	1
  7084     12AA  120A  118A  204B  160A  118A  	fcall	_estado_executa_muda
  7085     12AF                     i1l446:
  7086     12AF  0008               	return
  7087     12B0                     __end_of_estado_inicial:
  7088                           
  7089                           	psect	text28
  7090     12E2                     __ptext28:	
  7091 ;; *************** function _estado_captura_mostra *****************
  7092 ;; Defined at:
  7093 ;;		line 116 in file "estados.c"
  7094 ;; Parameters:    Size  Location     Type
  7095 ;;  opt             1    wreg     unsigned char 
  7096 ;; Auto vars:     Size  Location     Type
  7097 ;;  opt             1   12[COMMON] unsigned char 
  7098 ;; Return value:  Size  Location     Type
  7099 ;;                  1    wreg      void 
  7100 ;; Registers used:
  7101 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7102 ;; Tracked objects:
  7103 ;;		On entry : 0/0
  7104 ;;		On exit  : 0/0
  7105 ;;		Unchanged: 0/0
  7106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7107 ;;      Params:         0       0       0       0       0
  7108 ;;      Locals:         1       0       0       0       0
  7109 ;;      Temps:          0       0       0       0       0
  7110 ;;      Totals:         1       0       0       0       0
  7111 ;;Total ram usage:        1 bytes
  7112 ;; Hardware stack levels used: 1
  7113 ;; Hardware stack levels required when called: 4
  7114 ;; This function calls:
  7115 ;;		_estado_executa_muda
  7116 ;; This function is called by:
  7117 ;;		_estado_maquina
  7118 ;; This function uses a non-reentrant model
  7119 ;;
  7120                           
  7121     12E2                     _estado_captura_mostra:	
  7122                           ;psect for function _estado_captura_mostra
  7123                           
  7124                           
  7125                           ;incstack = 0
  7126 ;; hardware stack exceeded
  7127                           ; Regs used in _estado_captura_mostra: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  7128                           ;estado_captura_mostra@opt stored from wreg
  7129     12E2  00FC               	movwf	estado_captura_mostra@opt
  7130     12E3                     i1l8143:
  7131                           
  7132                           ;estados.c: 117:     if (opt == 2) {
  7133     12E3  3002               	movlw	2
  7134     12E4  067C               	xorwf	estado_captura_mostra@opt,w
  7135     12E5  1D03               	btfss	3,2
  7136     12E6  2AE8               	goto	u809_21
  7137     12E7  2AE9               	goto	u809_20
  7138     12E8                     u809_21:
  7139     12E8  2AF0               	goto	i1l454
  7140     12E9                     u809_20:
  7141     12E9                     i1l8145:
  7142                           
  7143                           ;estados.c: 118:         INTCONbits.T0IE = 0;
  7144     12E9  128B               	bcf	11,5	;volatile
  7145     12EA                     i1l8147:
  7146                           
  7147                           ;estados.c: 119:         estado_executa_muda(EST_MENU_PRINCIPAL);
  7148     12EA  3001               	movlw	1
  7149     12EB  120A  118A  204B  160A  118A  	fcall	_estado_executa_muda
  7150     12F0                     i1l454:
  7151     12F0  0008               	return
  7152     12F1                     __end_of_estado_captura_mostra:
  7153                           
  7154                           	psect	text29
  7155     004B                     __ptext29:	
  7156 ;; *************** function _estado_executa_muda *****************
  7157 ;; Defined at:
  7158 ;;		line 360 in file "estados.c"
  7159 ;; Parameters:    Size  Location     Type
  7160 ;;  novo_estado     1    wreg     enum E1327
  7161 ;; Auto vars:     Size  Location     Type
  7162 ;;  novo_estado     1   51[BANK0 ] enum E1327
  7163 ;;  i               1   65[BANK0 ] unsigned char 
  7164 ;;  i               1   60[BANK0 ] unsigned char 
  7165 ;;  tmp            17   32[BANK0 ] unsigned char [17]
  7166 ;;  menor           2   58[BANK0 ] unsigned int 
  7167 ;;  maior           2   56[BANK0 ] unsigned int 
  7168 ;;  temp_int        2   52[BANK0 ] unsigned int 
  7169 ;;  endereco        1   55[BANK0 ] unsigned char 
  7170 ;;  qtd_sens        1   54[BANK0 ] unsigned char 
  7171 ;;  posicao         1   50[BANK0 ] unsigned char 
  7172 ;;  qtd_val         1   49[BANK0 ] unsigned char 
  7173 ;; Return value:  Size  Location     Type
  7174 ;;                  1    wreg      void 
  7175 ;; Registers used:
  7176 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7177 ;; Tracked objects:
  7178 ;;		On entry : 0/0
  7179 ;;		On exit  : 0/0
  7180 ;;		Unchanged: 0/0
  7181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7182 ;;      Params:         0       0       0       0       0
  7183 ;;      Locals:         0      34       0       0       0
  7184 ;;      Temps:          0       4       0       0       0
  7185 ;;      Totals:         0      38       0       0       0
  7186 ;;Total ram usage:       38 bytes
  7187 ;; Hardware stack levels used: 1
  7188 ;; Hardware stack levels required when called: 3
  7189 ;; This function calls:
  7190 ;;		___bmul
  7191 ;;		_eeprom_ler_word
  7192 ;;		_lcd_clear
  7193 ;;		_sprintf
  7194 ;;		i1___lwdiv
  7195 ;;		i1___lwmod
  7196 ;;		i1_eeprom_gravar_word
  7197 ;;		i1_eeprom_read
  7198 ;;		i1_eeprom_write
  7199 ;;		i1_lcd_goto
  7200 ;;		i1_lcd_puts
  7201 ;; This function is called by:
  7202 ;;		_estado_inicial
  7203 ;;		_estado_menu_limpar
  7204 ;;		_estado_captura_mostra
  7205 ;;		_estado_menu_principal
  7206 ;;		_estado_ver_todos
  7207 ;;		_estado_max_min
  7208 ;;		_estado_menu_conf_tempo_amostra
  7209 ;;		_estado_menu_conf_quant_sensores
  7210 ;;		_estado_enviar_dados
  7211 ;; This function uses a non-reentrant model
  7212 ;;
  7213                           
  7214     004B                     _estado_executa_muda:	
  7215                           ;psect for function _estado_executa_muda
  7216                           
  7217                           
  7218                           ;incstack = 0
  7219 ;; hardware stack exceeded
  7220                           ; Regs used in _estado_executa_muda: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  7221                           ;estado_executa_muda@novo_estado stored from wreg
  7222     004B  1283               	bcf	3,5	;RP0=0, select bank0
  7223     004C  1303               	bcf	3,6	;RP1=0, select bank0
  7224     004D  00D3               	movwf	estado_executa_muda@novo_estado
  7225     004E                     i1l7907:
  7226                           
  7227                           ;estados.c: 362:     uint16_t maior, menor, temp_int;;estados.c: 363:     uint8_t endere
      +                          co, qtd_val, qtd_sens;;estados.c: 364:     uint8_t posicao;;estados.c: 368:     char tmp
      +                          [17] = {0};
  7228     004E  3040               	movlw	estado_executa_muda@tmp& (0+255)
  7229     004F  0084               	movwf	4
  7230     0050  3090               	movlw	low estado_executa_muda@F1404
  7231     0051  00BC               	movwf	??_estado_executa_muda
  7232     0052  0804               	movf	4,w
  7233     0053  00BD               	movwf	??_estado_executa_muda+1
  7234     0054  3011               	movlw	17
  7235     0055  00BE               	movwf	??_estado_executa_muda+2
  7236     0056                     u791_20:
  7237     0056  083C               	movf	??_estado_executa_muda,w
  7238     0057  0084               	movwf	4
  7239     0058  1783               	bsf	3,7	;select IRP bank3
  7240     0059  0800               	movf	0,w
  7241     005A  00BF               	movwf	??_estado_executa_muda+3
  7242     005B  0ABC               	incf	??_estado_executa_muda,f
  7243     005C  083D               	movf	??_estado_executa_muda+1,w
  7244     005D  0084               	movwf	4
  7245     005E  1383               	bcf	3,7	;select IRP bank0
  7246     005F  083F               	movf	??_estado_executa_muda+3,w
  7247     0060  0080               	movwf	0
  7248     0061  0ABD               	incf	??_estado_executa_muda+1,f
  7249     0062  0BBE               	decfsz	??_estado_executa_muda+2,f
  7250     0063  2856               	goto	u791_20
  7251                           
  7252                           ;estados.c: 371:     switch (novo_estado) {
  7253     0064  2AC7               	goto	i1l7999
  7254     0065                     i1l7909:
  7255                           
  7256                           ;estados.c: 373:             lcd_clear();
  7257     0065  160A  118A  2343  120A  118A  	fcall	_lcd_clear
  7258     006A                     i1l7911:
  7259                           
  7260                           ;estados.c: 374:             lcd_puts(menu_inicial[gl_item_menu_principal]);
  7261     006A  1683               	bsf	3,5	;RP0=1, select bank1
  7262     006B  1303               	bcf	3,6	;RP1=0, select bank1
  7263     006C  0851               	movf	_gl_item_menu_principal^(0+128),w
  7264     006D  1283               	bcf	3,5	;RP0=0, select bank0
  7265     006E  1303               	bcf	3,6	;RP1=0, select bank0
  7266     006F  00BC               	movwf	??_estado_executa_muda
  7267     0070  073C               	addwf	??_estado_executa_muda,w
  7268     0071  3ED3               	addlw	(low (_menu_inicial| 0))& (0+255)
  7269     0072  0084               	movwf	4
  7270     0073  1383               	bcf	3,7	;select IRP bank1
  7271     0074  0800               	movf	0,w
  7272     0075  00F3               	movwf	i1lcd_puts@str
  7273     0076  0A84               	incf	4,f
  7274     0077  0800               	movf	0,w
  7275     0078  0384               	decf	4,f
  7276     0079  00F4               	movwf	i1lcd_puts@str+1
  7277     007A  160A  118A  2494  120A  118A  	fcall	i1_lcd_puts
  7278                           
  7279                           ;estados.c: 375:             break;
  7280     007F  2AE9               	goto	i1l8001
  7281     0080                     i1l531:	
  7282                           ;estados.c: 376:         case EST_CAPTURA_E_MOSTRA:
  7283                           
  7284                           
  7285                           ;estados.c: 377:             INTCONbits.T0IE = 1;
  7286     0080  168B               	bsf	11,5	;volatile
  7287                           
  7288                           ;estados.c: 378:             break;
  7289     0081  2AE9               	goto	i1l8001
  7290     0082                     i1l532:	
  7291                           ;estados.c: 379:         case EST_CAPTURA_E_GRAVA:
  7292                           
  7293                           
  7294                           ;estados.c: 380:             INTCONbits.T0IE = 1;
  7295     0082  168B               	bsf	11,5	;volatile
  7296                           
  7297                           ;estados.c: 381:             break;
  7298     0083  2AE9               	goto	i1l8001
  7299     0084                     i1l7913:
  7300                           
  7301                           ;estados.c: 383:             lcd_clear();
  7302     0084  160A  118A  2343  120A  118A  	fcall	_lcd_clear
  7303     0089                     i1l7915:
  7304                           
  7305                           ;estados.c: 384:             qtd_val = eeprom_read(0x08);
  7306     0089  3008               	movlw	8
  7307     008A  160A  118A  232C  120A  118A  	fcall	i1_eeprom_read
  7308     008F  1283               	bcf	3,5	;RP0=0, select bank0
  7309     0090  1303               	bcf	3,6	;RP1=0, select bank0
  7310     0091  00D1               	movwf	estado_executa_muda@qtd_val
  7311     0092                     i1l7917:
  7312                           
  7313                           ;estados.c: 385:             if (qtd_val == 0) {
  7314     0092  0851               	movf	estado_executa_muda@qtd_val,w
  7315     0093  1D03               	btfss	3,2
  7316     0094  2896               	goto	u792_21
  7317     0095  2897               	goto	u792_20
  7318     0096                     u792_21:
  7319     0096  28A1               	goto	i1l7921
  7320     0097                     u792_20:
  7321     0097                     i1l7919:
  7322                           
  7323                           ;estados.c: 386:                 lcd_puts("Nenhum Dado");
  7324     0097  30E6               	movlw	low (STR_42| (0+32768))
  7325     0098  00F3               	movwf	i1lcd_puts@str
  7326     0099  3087               	movlw	high (STR_42| (0+32768))
  7327     009A  00F4               	movwf	i1lcd_puts@str+1
  7328     009B  160A  118A  2494  120A  118A  	fcall	i1_lcd_puts
  7329                           
  7330                           ;estados.c: 387:             } else {
  7331     00A0  2AE9               	goto	i1l8001
  7332     00A1                     i1l7921:
  7333                           
  7334                           ;estados.c: 391:                 posicao = eeprom_read(0x00);
  7335     00A1  3000               	movlw	0
  7336     00A2  160A  118A  232C  120A  118A  	fcall	i1_eeprom_read
  7337     00A7  1283               	bcf	3,5	;RP0=0, select bank0
  7338     00A8  1303               	bcf	3,6	;RP1=0, select bank0
  7339     00A9  00D2               	movwf	estado_executa_muda@posicao
  7340     00AA                     i1l7923:
  7341                           
  7342                           ;estados.c: 392:                 qtd_sens = menu_quant_sensores[posicao].i_quant_sensore
      +                          s;
  7343     00AA  3003               	movlw	3
  7344     00AB  00F0               	movwf	___bmul@multiplicand
  7345     00AC  0852               	movf	estado_executa_muda@posicao,w
  7346     00AD  160A  118A  2317  120A  118A  	fcall	___bmul
  7347     00B2  3E02               	addlw	2
  7348     00B3  3E2E               	addlw	low (_menu_quant_sensores| (0+32768))
  7349     00B4  0084               	movwf	4
  7350     00B5  3087               	movlw	high (_menu_quant_sensores| (0+32768))
  7351     00B6  1803               	skipnc
  7352     00B7  3E01               	addlw	1
  7353     00B8  1283               	bcf	3,5	;RP0=0, select bank0
  7354     00B9  1303               	bcf	3,6	;RP1=0, select bank0
  7355     00BA  00FF               	movwf	btemp+1
  7356     00BB  120A  118A  2700  120A  118A  	fcall	stringtab
  7357     00C0  00D6               	movwf	estado_executa_muda@qtd_sens
  7358     00C1                     i1l7925:
  7359                           
  7360                           ;estados.c: 395:                 endereco = 0x0e + (gl_item_menu_ver_todos * qtd_sens * 
      +                          2);
  7361     00C1  0856               	movf	estado_executa_muda@qtd_sens,w
  7362     00C2  00F0               	movwf	___bmul@multiplicand
  7363     00C3  1683               	bsf	3,5	;RP0=1, select bank1
  7364     00C4  1303               	bcf	3,6	;RP1=0, select bank1
  7365     00C5  0850               	movf	_gl_item_menu_ver_todos^(0+128),w
  7366     00C6  160A  118A  2317  120A  118A  	fcall	___bmul
  7367     00CB  1283               	bcf	3,5	;RP0=0, select bank0
  7368     00CC  1303               	bcf	3,6	;RP1=0, select bank0
  7369     00CD  00BC               	movwf	??_estado_executa_muda
  7370     00CE  073C               	addwf	??_estado_executa_muda,w
  7371     00CF  3E0E               	addlw	14
  7372     00D0  00D7               	movwf	estado_executa_muda@endereco
  7373     00D1                     i1l7927:
  7374                           
  7375                           ;estados.c: 398:                 for (uint8_t i = 0; i < qtd_sens; i++) {
  7376     00D1  01E1               	clrf	estado_executa_muda@i
  7377     00D2  2953               	goto	i1l7941
  7378     00D3                     i1l7929:
  7379                           
  7380                           ;estados.c: 400:                     temp_int = eeprom_ler_word(endereco);
  7381     00D3  0857               	movf	estado_executa_muda@endereco,w
  7382     00D4  160A  118A  23F2  120A  118A  	fcall	_eeprom_ler_word
  7383     00D9  0872               	movf	?_eeprom_ler_word+1,w
  7384     00DA  1283               	bcf	3,5	;RP0=0, select bank0
  7385     00DB  1303               	bcf	3,6	;RP1=0, select bank0
  7386     00DC  00D5               	movwf	estado_executa_muda@temp_int+1
  7387     00DD  0871               	movf	?_eeprom_ler_word,w
  7388     00DE  00D4               	movwf	estado_executa_muda@temp_int
  7389                           
  7390                           ;estados.c: 402:                     sprintf(tmp, "%d=%d.%d", i + 1, temp_int / 10, temp
      +                          _int % 10);
  7391     00DF  300A               	movlw	10
  7392     00E0  00F0               	movwf	i1___lwdiv@divisor
  7393     00E1  3000               	movlw	0
  7394     00E2  00F1               	movwf	i1___lwdiv@divisor+1
  7395     00E3  0855               	movf	estado_executa_muda@temp_int+1,w
  7396     00E4  00F3               	movwf	i1___lwdiv@dividend+1
  7397     00E5  0854               	movf	estado_executa_muda@temp_int,w
  7398     00E6  00F2               	movwf	i1___lwdiv@dividend
  7399     00E7  160A  118A  26DD  120A  118A  	fcall	i1___lwdiv
  7400     00EC  0871               	movf	?i1___lwdiv+1,w
  7401     00ED  1283               	bcf	3,5	;RP0=0, select bank0
  7402     00EE  1303               	bcf	3,6	;RP1=0, select bank0
  7403     00EF  00DE               	movwf	_estado_executa_muda$1887+1
  7404     00F0  0870               	movf	?i1___lwdiv,w
  7405     00F1  00DD               	movwf	_estado_executa_muda$1887
  7406                           
  7407                           ;estados.c: 402:                     sprintf(tmp, "%d=%d.%d", i + 1, temp_int / 10, temp
      +                          _int % 10);
  7408     00F2  300A               	movlw	10
  7409     00F3  00F7               	movwf	i1___lwmod@divisor
  7410     00F4  3000               	movlw	0
  7411     00F5  00F8               	movwf	i1___lwmod@divisor+1
  7412     00F6  0855               	movf	estado_executa_muda@temp_int+1,w
  7413     00F7  00FA               	movwf	i1___lwmod@dividend+1
  7414     00F8  0854               	movf	estado_executa_muda@temp_int,w
  7415     00F9  00F9               	movwf	i1___lwmod@dividend
  7416     00FA  160A  118A  25EB  120A  118A  	fcall	i1___lwmod
  7417     00FF  0878               	movf	?i1___lwmod+1,w
  7418     0100  1283               	bcf	3,5	;RP0=0, select bank0
  7419     0101  1303               	bcf	3,6	;RP1=0, select bank0
  7420     0102  00E0               	movwf	_estado_executa_muda$1888+1
  7421     0103  0877               	movf	?i1___lwmod,w
  7422     0104  00DF               	movwf	_estado_executa_muda$1888
  7423     0105                     i1l7931:
  7424                           
  7425                           ;estados.c: 402:                     sprintf(tmp, "%d=%d.%d", i + 1, temp_int / 10, temp
      +                          _int % 10);
  7426     0105  3050               	movlw	low (STR_17| (0+32768))
  7427     0106  00AF               	movwf	sprintf@f
  7428     0107  3088               	movlw	high (STR_17| (0+32768))
  7429     0108  00B0               	movwf	sprintf@f+1
  7430     0109  0861               	movf	estado_executa_muda@i,w
  7431     010A  3E01               	addlw	1
  7432     010B  00B1               	movwf	?_sprintf+2
  7433     010C  3000               	movlw	0
  7434     010D  1803               	skipnc
  7435     010E  3001               	movlw	1
  7436     010F  00B2               	movwf	?_sprintf+3
  7437     0110  085E               	movf	_estado_executa_muda$1887+1,w
  7438     0111  00B4               	movwf	?_sprintf+5
  7439     0112  085D               	movf	_estado_executa_muda$1887,w
  7440     0113  00B3               	movwf	?_sprintf+4
  7441     0114  0860               	movf	_estado_executa_muda$1888+1,w
  7442     0115  00B6               	movwf	?_sprintf+7
  7443     0116  085F               	movf	_estado_executa_muda$1888,w
  7444     0117  00B5               	movwf	?_sprintf+6
  7445     0118  3040               	movlw	(low (estado_executa_muda@tmp| 0))& (0+255)
  7446     0119  160A  118A  23AB  120A  118A  	fcall	_sprintf
  7447     011E                     i1l7933:
  7448                           
  7449                           ;estados.c: 403:                     lcd_goto(LCD_POSICAO[i].y, LCD_POSICAO[i].x);
  7450     011E  1403               	setc
  7451     011F  1283               	bcf	3,5	;RP0=0, select bank0
  7452     0120  1303               	bcf	3,6	;RP1=0, select bank0
  7453     0121  0D61               	rlf	estado_executa_muda@i,w
  7454     0122  3E44               	addlw	low (_LCD_POSICAO| (0+32768))
  7455     0123  0084               	movwf	4
  7456     0124  3087               	movlw	high (_LCD_POSICAO| (0+32768))
  7457     0125  1803               	skipnc
  7458     0126  3E01               	addlw	1
  7459     0127  00FF               	movwf	btemp+1
  7460     0128  120A  118A  2700  120A  118A  	fcall	stringtab
  7461     012D  00F2               	movwf	i1lcd_goto@x
  7462     012E  0861               	movf	estado_executa_muda@i,w
  7463     012F  00BC               	movwf	??_estado_executa_muda
  7464     0130  073C               	addwf	??_estado_executa_muda,w
  7465     0131  3E44               	addlw	low (_LCD_POSICAO| (0+32768))
  7466     0132  0084               	movwf	4
  7467     0133  3087               	movlw	high (_LCD_POSICAO| (0+32768))
  7468     0134  1803               	skipnc
  7469     0135  3E01               	addlw	1
  7470     0136  00FF               	movwf	btemp+1
  7471     0137  120A  118A  2700  120A  118A  	fcall	stringtab
  7472     013C  160A  118A  24EE  120A  118A  	fcall	i1_lcd_goto
  7473     0141                     i1l7935:
  7474                           
  7475                           ;estados.c: 404:                     lcd_puts(tmp);
  7476     0141  3040               	movlw	(low (estado_executa_muda@tmp| 0))& (0+255)
  7477     0142  00F3               	movwf	i1lcd_puts@str
  7478     0143  3000               	movlw	0
  7479     0144  00F4               	movwf	i1lcd_puts@str+1
  7480     0145  160A  118A  2494  120A  118A  	fcall	i1_lcd_puts
  7481     014A                     i1l7937:
  7482                           
  7483                           ;estados.c: 405:                     endereco = endereco + 2;
  7484     014A  1283               	bcf	3,5	;RP0=0, select bank0
  7485     014B  1303               	bcf	3,6	;RP1=0, select bank0
  7486     014C  0857               	movf	estado_executa_muda@endereco,w
  7487     014D  3E02               	addlw	2
  7488     014E  00D7               	movwf	estado_executa_muda@endereco
  7489     014F                     i1l7939:
  7490                           
  7491                           ;estados.c: 406:                 }
  7492     014F  3001               	movlw	1
  7493     0150  00FF               	movwf	btemp+1
  7494     0151  087F               	movf	btemp+1,w
  7495     0152  07E1               	addwf	estado_executa_muda@i,f
  7496     0153                     i1l7941:
  7497     0153  0856               	movf	estado_executa_muda@qtd_sens,w
  7498     0154  0261               	subwf	estado_executa_muda@i,w
  7499     0155  1C03               	skipc
  7500     0156  2958               	goto	u793_21
  7501     0157  2959               	goto	u793_20
  7502     0158                     u793_21:
  7503     0158  28D3               	goto	i1l7929
  7504     0159                     u793_20:
  7505     0159  2AE9               	goto	i1l8001
  7506     015A                     i1l7943:
  7507                           
  7508                           ;estados.c: 410:             lcd_clear();
  7509     015A  160A  118A  2343  120A  118A  	fcall	_lcd_clear
  7510     015F                     i1l7945:
  7511                           
  7512                           ;estados.c: 411:             maior = eeprom_ler_word(0x06);
  7513     015F  3006               	movlw	6
  7514     0160  160A  118A  23F2  120A  118A  	fcall	_eeprom_ler_word
  7515     0165  0872               	movf	?_eeprom_ler_word+1,w
  7516     0166  1283               	bcf	3,5	;RP0=0, select bank0
  7517     0167  1303               	bcf	3,6	;RP1=0, select bank0
  7518     0168  00D9               	movwf	estado_executa_muda@maior+1
  7519     0169  0871               	movf	?_eeprom_ler_word,w
  7520     016A  00D8               	movwf	estado_executa_muda@maior
  7521     016B                     i1l7947:
  7522                           
  7523                           ;estados.c: 412:             menor = eeprom_ler_word(0x04);
  7524     016B  3004               	movlw	4
  7525     016C  160A  118A  23F2  120A  118A  	fcall	_eeprom_ler_word
  7526     0171  0872               	movf	?_eeprom_ler_word+1,w
  7527     0172  1283               	bcf	3,5	;RP0=0, select bank0
  7528     0173  1303               	bcf	3,6	;RP1=0, select bank0
  7529     0174  00DB               	movwf	estado_executa_muda@menor+1
  7530     0175  0871               	movf	?_eeprom_ler_word,w
  7531     0176  00DA               	movwf	estado_executa_muda@menor
  7532     0177                     i1l7949:
  7533                           
  7534                           ;estados.c: 414:             if (maior == 0) {
  7535     0177  0858               	movf	estado_executa_muda@maior,w
  7536     0178  0459               	iorwf	estado_executa_muda@maior+1,w
  7537     0179  1D03               	btfss	3,2
  7538     017A  297C               	goto	u794_21
  7539     017B  297D               	goto	u794_20
  7540     017C                     u794_21:
  7541     017C  298F               	goto	i1l7955
  7542     017D                     u794_20:
  7543     017D                     i1l7951:
  7544                           
  7545                           ;estados.c: 415:                 if (menor == 0xffff) {
  7546     017D  0A5A               	incf	estado_executa_muda@menor,w
  7547     017E  1D03               	skipz
  7548     017F  2984               	goto	u795_21
  7549     0180  0A5B               	incf	estado_executa_muda@menor+1,w
  7550     0181  1D03               	btfss	3,2
  7551     0182  2984               	goto	u795_21
  7552     0183  2985               	goto	u795_20
  7553     0184                     u795_21:
  7554     0184  2AE9               	goto	i1l8001
  7555     0185                     u795_20:
  7556     0185                     i1l7953:
  7557                           
  7558                           ;estados.c: 416:                     lcd_puts("Nenhum Dado");
  7559     0185  30E6               	movlw	low (STR_42| (0+32768))
  7560     0186  00F3               	movwf	i1lcd_puts@str
  7561     0187  3087               	movlw	high (STR_42| (0+32768))
  7562     0188  00F4               	movwf	i1lcd_puts@str+1
  7563     0189  160A  118A  2494  120A  118A  	fcall	i1_lcd_puts
  7564     018E  2AE9               	goto	i1l8001
  7565     018F                     i1l7955:
  7566                           
  7567                           ;estados.c: 419:                 sprintf(tmp, "Max=%d.%d", maior / 10, maior % 10);
  7568     018F  300A               	movlw	10
  7569     0190  00F0               	movwf	i1___lwdiv@divisor
  7570     0191  3000               	movlw	0
  7571     0192  00F1               	movwf	i1___lwdiv@divisor+1
  7572     0193  0859               	movf	estado_executa_muda@maior+1,w
  7573     0194  00F3               	movwf	i1___lwdiv@dividend+1
  7574     0195  0858               	movf	estado_executa_muda@maior,w
  7575     0196  00F2               	movwf	i1___lwdiv@dividend
  7576     0197  160A  118A  26DD  120A  118A  	fcall	i1___lwdiv
  7577     019C  0871               	movf	?i1___lwdiv+1,w
  7578     019D  1283               	bcf	3,5	;RP0=0, select bank0
  7579     019E  1303               	bcf	3,6	;RP1=0, select bank0
  7580     019F  00DE               	movwf	_estado_executa_muda$1887+1
  7581     01A0  0870               	movf	?i1___lwdiv,w
  7582     01A1  00DD               	movwf	_estado_executa_muda$1887
  7583                           
  7584                           ;estados.c: 419:                 sprintf(tmp, "Max=%d.%d", maior / 10, maior % 10);
  7585     01A2  300A               	movlw	10
  7586     01A3  00F7               	movwf	i1___lwmod@divisor
  7587     01A4  3000               	movlw	0
  7588     01A5  00F8               	movwf	i1___lwmod@divisor+1
  7589     01A6  0859               	movf	estado_executa_muda@maior+1,w
  7590     01A7  00FA               	movwf	i1___lwmod@dividend+1
  7591     01A8  0858               	movf	estado_executa_muda@maior,w
  7592     01A9  00F9               	movwf	i1___lwmod@dividend
  7593     01AA  160A  118A  25EB  120A  118A  	fcall	i1___lwmod
  7594     01AF  0878               	movf	?i1___lwmod+1,w
  7595     01B0  1283               	bcf	3,5	;RP0=0, select bank0
  7596     01B1  1303               	bcf	3,6	;RP1=0, select bank0
  7597     01B2  00E0               	movwf	_estado_executa_muda$1888+1
  7598     01B3  0877               	movf	?i1___lwmod,w
  7599     01B4  00DF               	movwf	_estado_executa_muda$1888
  7600     01B5                     i1l7957:
  7601                           
  7602                           ;estados.c: 419:                 sprintf(tmp, "Max=%d.%d", maior / 10, maior % 10);
  7603     01B5  3033               	movlw	low (STR_45| (0+32768))
  7604     01B6  00AF               	movwf	sprintf@f
  7605     01B7  3088               	movlw	high (STR_45| (0+32768))
  7606     01B8  00B0               	movwf	sprintf@f+1
  7607     01B9  085E               	movf	_estado_executa_muda$1887+1,w
  7608     01BA  00B2               	movwf	?_sprintf+3
  7609     01BB  085D               	movf	_estado_executa_muda$1887,w
  7610     01BC  00B1               	movwf	?_sprintf+2
  7611     01BD  0860               	movf	_estado_executa_muda$1888+1,w
  7612     01BE  00B4               	movwf	?_sprintf+5
  7613     01BF  085F               	movf	_estado_executa_muda$1888,w
  7614     01C0  00B3               	movwf	?_sprintf+4
  7615     01C1  3040               	movlw	(low (estado_executa_muda@tmp| 0))& (0+255)
  7616     01C2  160A  118A  23AB  120A  118A  	fcall	_sprintf
  7617     01C7                     i1l7959:
  7618                           
  7619                           ;estados.c: 420:                 lcd_puts(tmp);
  7620     01C7  3040               	movlw	(low (estado_executa_muda@tmp| 0))& (0+255)
  7621     01C8  00F3               	movwf	i1lcd_puts@str
  7622     01C9  3000               	movlw	0
  7623     01CA  00F4               	movwf	i1lcd_puts@str+1
  7624     01CB  160A  118A  2494  120A  118A  	fcall	i1_lcd_puts
  7625     01D0                     i1l7961:
  7626                           
  7627                           ;estados.c: 421:                 lcd_goto(2, 0);
  7628     01D0  01F2               	clrf	i1lcd_goto@x
  7629     01D1  3002               	movlw	2
  7630     01D2  160A  118A  24EE  120A  118A  	fcall	i1_lcd_goto
  7631     01D7                     i1l7963:
  7632                           
  7633                           ;estados.c: 422:                 sprintf(tmp, "Min=%d.%d", menor / 10, menor % 10);
  7634     01D7  300A               	movlw	10
  7635     01D8  00F0               	movwf	i1___lwdiv@divisor
  7636     01D9  3000               	movlw	0
  7637     01DA  00F1               	movwf	i1___lwdiv@divisor+1
  7638     01DB  1283               	bcf	3,5	;RP0=0, select bank0
  7639     01DC  1303               	bcf	3,6	;RP1=0, select bank0
  7640     01DD  085B               	movf	estado_executa_muda@menor+1,w
  7641     01DE  00F3               	movwf	i1___lwdiv@dividend+1
  7642     01DF  085A               	movf	estado_executa_muda@menor,w
  7643     01E0  00F2               	movwf	i1___lwdiv@dividend
  7644     01E1  160A  118A  26DD  120A  118A  	fcall	i1___lwdiv
  7645     01E6  0871               	movf	?i1___lwdiv+1,w
  7646     01E7  1283               	bcf	3,5	;RP0=0, select bank0
  7647     01E8  1303               	bcf	3,6	;RP1=0, select bank0
  7648     01E9  00DE               	movwf	_estado_executa_muda$1887+1
  7649     01EA  0870               	movf	?i1___lwdiv,w
  7650     01EB  00DD               	movwf	_estado_executa_muda$1887
  7651     01EC                     i1l7965:
  7652                           
  7653                           ;estados.c: 422:                 sprintf(tmp, "Min=%d.%d", menor / 10, menor % 10);
  7654     01EC  300A               	movlw	10
  7655     01ED  00F7               	movwf	i1___lwmod@divisor
  7656     01EE  3000               	movlw	0
  7657     01EF  00F8               	movwf	i1___lwmod@divisor+1
  7658     01F0  085B               	movf	estado_executa_muda@menor+1,w
  7659     01F1  00FA               	movwf	i1___lwmod@dividend+1
  7660     01F2  085A               	movf	estado_executa_muda@menor,w
  7661     01F3  00F9               	movwf	i1___lwmod@dividend
  7662     01F4  160A  118A  25EB  120A  118A  	fcall	i1___lwmod
  7663     01F9  0878               	movf	?i1___lwmod+1,w
  7664     01FA  1283               	bcf	3,5	;RP0=0, select bank0
  7665     01FB  1303               	bcf	3,6	;RP1=0, select bank0
  7666     01FC  00E0               	movwf	_estado_executa_muda$1888+1
  7667     01FD  0877               	movf	?i1___lwmod,w
  7668     01FE  00DF               	movwf	_estado_executa_muda$1888
  7669     01FF                     i1l7967:
  7670                           
  7671                           ;estados.c: 422:                 sprintf(tmp, "Min=%d.%d", menor / 10, menor % 10);
  7672     01FF  3029               	movlw	low (STR_46| (0+32768))
  7673     0200  00AF               	movwf	sprintf@f
  7674     0201  3088               	movlw	high (STR_46| (0+32768))
  7675     0202  00B0               	movwf	sprintf@f+1
  7676     0203  085E               	movf	_estado_executa_muda$1887+1,w
  7677     0204  00B2               	movwf	?_sprintf+3
  7678     0205  085D               	movf	_estado_executa_muda$1887,w
  7679     0206  00B1               	movwf	?_sprintf+2
  7680     0207  0860               	movf	_estado_executa_muda$1888+1,w
  7681     0208  00B4               	movwf	?_sprintf+5
  7682     0209  085F               	movf	_estado_executa_muda$1888,w
  7683     020A  00B3               	movwf	?_sprintf+4
  7684     020B  3040               	movlw	(low (estado_executa_muda@tmp| 0))& (0+255)
  7685     020C  160A  118A  23AB  120A  118A  	fcall	_sprintf
  7686     0211                     i1l7969:
  7687                           
  7688                           ;estados.c: 423:                 lcd_puts(tmp);
  7689     0211  3040               	movlw	(low (estado_executa_muda@tmp| 0))& (0+255)
  7690     0212  00F3               	movwf	i1lcd_puts@str
  7691     0213  3000               	movlw	0
  7692     0214  00F4               	movwf	i1lcd_puts@str+1
  7693     0215  160A  118A  2494  120A  118A  	fcall	i1_lcd_puts
  7694     021A  2AE9               	goto	i1l8001
  7695     021B                     i1l7971:
  7696                           
  7697                           ;estados.c: 427:             eeprom_write(0x08, 0);
  7698     021B  01F0               	clrf	i1eeprom_write@value
  7699     021C  3008               	movlw	8
  7700     021D  160A  118A  24C1  120A  118A  	fcall	i1_eeprom_write
  7701                           
  7702                           ;estados.c: 428:             eeprom_write(0x00, 0);
  7703     0222  01F0               	clrf	i1eeprom_write@value
  7704     0223  3000               	movlw	0
  7705     0224  160A  118A  24C1  120A  118A  	fcall	i1_eeprom_write
  7706                           
  7707                           ;estados.c: 429:             eeprom_gravar_word(0x02, 0);
  7708     0229  3000               	movlw	0
  7709     022A  00F2               	movwf	i1eeprom_gravar_word@dado
  7710     022B  00F3               	movwf	i1eeprom_gravar_word@dado+1
  7711     022C  3002               	movlw	2
  7712     022D  160A  118A  22F1  120A  118A  	fcall	i1_eeprom_gravar_word
  7713                           
  7714                           ;estados.c: 430:             eeprom_gravar_word(0x04, 0xffff);
  7715     0232  30FF               	movlw	255
  7716     0233  00F2               	movwf	i1eeprom_gravar_word@dado
  7717     0234  30FF               	movlw	255
  7718     0235  00F3               	movwf	i1eeprom_gravar_word@dado+1
  7719     0236  3004               	movlw	4
  7720     0237  160A  118A  22F1  120A  118A  	fcall	i1_eeprom_gravar_word
  7721                           
  7722                           ;estados.c: 431:             eeprom_gravar_word(0x06, 0);
  7723     023C  3000               	movlw	0
  7724     023D  00F2               	movwf	i1eeprom_gravar_word@dado
  7725     023E  00F3               	movwf	i1eeprom_gravar_word@dado+1
  7726     023F  3006               	movlw	6
  7727     0240  160A  118A  22F1  120A  118A  	fcall	i1_eeprom_gravar_word
  7728     0245                     i1l7973:
  7729                           
  7730                           ;estados.c: 432:             for (uint8_t i = 0; i < 100 * 2; i++) {
  7731     0245  1283               	bcf	3,5	;RP0=0, select bank0
  7732     0246  1303               	bcf	3,6	;RP1=0, select bank0
  7733     0247  01DC               	clrf	estado_executa_muda@i_947
  7734     0248                     i1l7979:
  7735                           
  7736                           ;estados.c: 433:                 eeprom_write(i + 0x0e, 0);
  7737     0248  01F0               	clrf	i1eeprom_write@value
  7738     0249  085C               	movf	estado_executa_muda@i_947,w
  7739     024A  3E0E               	addlw	14
  7740     024B  160A  118A  24C1  120A  118A  	fcall	i1_eeprom_write
  7741     0250                     i1l7981:
  7742                           
  7743                           ;estados.c: 434:             }
  7744     0250  3001               	movlw	1
  7745     0251  00FF               	movwf	btemp+1
  7746     0252  087F               	movf	btemp+1,w
  7747     0253  1283               	bcf	3,5	;RP0=0, select bank0
  7748     0254  1303               	bcf	3,6	;RP1=0, select bank0
  7749     0255  07DC               	addwf	estado_executa_muda@i_947,f
  7750     0256                     i1l7983:
  7751     0256  30C8               	movlw	200
  7752     0257  025C               	subwf	estado_executa_muda@i_947,w
  7753     0258  1C03               	skipc
  7754     0259  2A5B               	goto	u796_21
  7755     025A  2A5C               	goto	u796_20
  7756     025B                     u796_21:
  7757     025B  2A48               	goto	i1l7979
  7758     025C                     u796_20:
  7759     025C                     i1l7985:
  7760                           
  7761                           ;estados.c: 435:             lcd_clear();
  7762     025C  160A  118A  2343  120A  118A  	fcall	_lcd_clear
  7763     0261                     i1l7987:
  7764                           
  7765                           ;estados.c: 436:             lcd_puts("Tudo Limpo");
  7766     0261  30F2               	movlw	low (STR_47| (0+32768))
  7767     0262  00F3               	movwf	i1lcd_puts@str
  7768     0263  3087               	movlw	high (STR_47| (0+32768))
  7769     0264  00F4               	movwf	i1lcd_puts@str+1
  7770     0265  160A  118A  2494  120A  118A  	fcall	i1_lcd_puts
  7771                           
  7772                           ;estados.c: 437:             break;
  7773     026A  2AE9               	goto	i1l8001
  7774     026B                     i1l7989:
  7775                           
  7776                           ;estados.c: 440:             lcd_clear();
  7777     026B  160A  118A  2343  120A  118A  	fcall	_lcd_clear
  7778     0270                     i1l7991:
  7779                           
  7780                           ;estados.c: 441:             lcd_puts(menu_tempo_amostra[gl_item_menu_config_amostra].st
      +                          r_tempo_amostra);
  7781     0270  1683               	bsf	3,5	;RP0=1, select bank1
  7782     0271  1303               	bcf	3,6	;RP1=0, select bank1
  7783     0272  084B               	movf	_gl_item_menu_config_amostra^(0+128),w
  7784     0273  1283               	bcf	3,5	;RP0=0, select bank0
  7785     0274  1303               	bcf	3,6	;RP1=0, select bank0
  7786     0275  00BC               	movwf	??_estado_executa_muda
  7787     0276  3001               	movlw	1
  7788     0277                     u797_25:
  7789     0277  1003               	clrc
  7790     0278  0DBC               	rlf	??_estado_executa_muda,f
  7791     0279  3EFF               	addlw	-1
  7792     027A  1D03               	skipz
  7793     027B  2A77               	goto	u797_25
  7794     027C  1003               	clrc
  7795     027D  0D3C               	rlf	??_estado_executa_muda,w
  7796     027E  3E12               	addlw	low (_menu_tempo_amostra| (0+32768))
  7797     027F  0084               	movwf	4
  7798     0280  3087               	movlw	high (_menu_tempo_amostra| (0+32768))
  7799     0281  1803               	skipnc
  7800     0282  3E01               	addlw	1
  7801     0283  00FF               	movwf	btemp+1
  7802     0284  120A  118A  2700  120A  118A  	fcall	stringtab
  7803     0289  00BD               	movwf	??_estado_executa_muda+1
  7804     028A  120A  118A  2700  120A  118A  	fcall	stringtab
  7805     028F  00BE               	movwf	??_estado_executa_muda+2
  7806     0290  083D               	movf	??_estado_executa_muda+1,w
  7807     0291  00F3               	movwf	i1lcd_puts@str
  7808     0292  083E               	movf	??_estado_executa_muda+2,w
  7809     0293  00F4               	movwf	i1lcd_puts@str+1
  7810     0294  160A  118A  2494  120A  118A  	fcall	i1_lcd_puts
  7811                           
  7812                           ;estados.c: 442:             break;
  7813     0299  2AE9               	goto	i1l8001
  7814     029A                     i1l7993:
  7815                           
  7816                           ;estados.c: 452:             lcd_clear();
  7817     029A  160A  118A  2343  120A  118A  	fcall	_lcd_clear
  7818     029F                     i1l7995:
  7819                           
  7820                           ;estados.c: 453:             lcd_puts(menu_quant_sensores[gl_item_menu_config_sensores].
      +                          str_quant_sensores);
  7821     029F  3003               	movlw	3
  7822     02A0  00F0               	movwf	___bmul@multiplicand
  7823     02A1  1683               	bsf	3,5	;RP0=1, select bank1
  7824     02A2  1303               	bcf	3,6	;RP1=0, select bank1
  7825     02A3  084F               	movf	_gl_item_menu_config_sensores^(0+128),w
  7826     02A4  160A  118A  2317  120A  118A  	fcall	___bmul
  7827     02A9  3E2E               	addlw	low (_menu_quant_sensores| (0+32768))
  7828     02AA  0084               	movwf	4
  7829     02AB  3087               	movlw	high (_menu_quant_sensores| (0+32768))
  7830     02AC  1803               	skipnc
  7831     02AD  3E01               	addlw	1
  7832     02AE  1283               	bcf	3,5	;RP0=0, select bank0
  7833     02AF  1303               	bcf	3,6	;RP1=0, select bank0
  7834     02B0  00FF               	movwf	btemp+1
  7835     02B1  120A  118A  2700  120A  118A  	fcall	stringtab
  7836     02B6  00BC               	movwf	??_estado_executa_muda
  7837     02B7  120A  118A  2700  120A  118A  	fcall	stringtab
  7838     02BC  00BD               	movwf	??_estado_executa_muda+1
  7839     02BD  083C               	movf	??_estado_executa_muda,w
  7840     02BE  00F3               	movwf	i1lcd_puts@str
  7841     02BF  083D               	movf	??_estado_executa_muda+1,w
  7842     02C0  00F4               	movwf	i1lcd_puts@str+1
  7843     02C1  160A  118A  2494  120A  118A  	fcall	i1_lcd_puts
  7844                           
  7845                           ;estados.c: 454:             break;
  7846     02C6  2AE9               	goto	i1l8001
  7847     02C7                     i1l7999:
  7848     02C7  0853               	movf	estado_executa_muda@novo_estado,w
  7849     02C8  00BC               	movwf	??_estado_executa_muda
  7850     02C9  01BD               	clrf	??_estado_executa_muda+1
  7851                           
  7852                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7853                           ; Switch size 1, requested type "simple"
  7854                           ; Number of cases is 1, Range of values is 0 to 0
  7855                           ; switch strategies available:
  7856                           ; Name         Instructions Cycles
  7857                           ; simple_byte            4     3 (average)
  7858                           ; direct_byte           11     8 (fixed)
  7859                           ; jumptable            260     6 (fixed)
  7860                           ;	Chosen strategy is simple_byte
  7861     02CA  083D               	movf	??_estado_executa_muda+1,w
  7862     02CB  3A00               	xorlw	0	; case 0
  7863     02CC  1903               	skipnz
  7864     02CD  2ACF               	goto	i1l8863
  7865     02CE  2AE9               	goto	i1l8001
  7866     02CF                     i1l8863:
  7867                           
  7868                           ; Switch size 1, requested type "simple"
  7869                           ; Number of cases is 8, Range of values is 1 to 8
  7870                           ; switch strategies available:
  7871                           ; Name         Instructions Cycles
  7872                           ; simple_byte           25    13 (average)
  7873                           ; direct_byte           35    11 (fixed)
  7874                           ; jumptable            263     9 (fixed)
  7875                           ;	Chosen strategy is simple_byte
  7876     02CF  083C               	movf	??_estado_executa_muda,w
  7877     02D0  3A01               	xorlw	1	; case 1
  7878     02D1  1903               	skipnz
  7879     02D2  2865               	goto	i1l7909
  7880     02D3  3A03               	xorlw	3	; case 2
  7881     02D4  1903               	skipnz
  7882     02D5  2880               	goto	i1l531
  7883     02D6  3A01               	xorlw	1	; case 3
  7884     02D7  1903               	skipnz
  7885     02D8  2882               	goto	i1l532
  7886     02D9  3A07               	xorlw	7	; case 4
  7887     02DA  1903               	skipnz
  7888     02DB  2884               	goto	i1l7913
  7889     02DC  3A01               	xorlw	1	; case 5
  7890     02DD  1903               	skipnz
  7891     02DE  295A               	goto	i1l7943
  7892     02DF  3A03               	xorlw	3	; case 6
  7893     02E0  1903               	skipnz
  7894     02E1  2A1B               	goto	i1l7971
  7895     02E2  3A01               	xorlw	1	; case 7
  7896     02E3  1903               	skipnz
  7897     02E4  2A6B               	goto	i1l7989
  7898     02E5  3A0F               	xorlw	15	; case 8
  7899     02E6  1903               	skipnz
  7900     02E7  2A9A               	goto	i1l7993
  7901     02E8  2AE9               	goto	i1l8001
  7902     02E9                     i1l8001:
  7903                           
  7904                           ;estados.c: 456:     gl_estado = novo_estado;
  7905     02E9  1283               	bcf	3,5	;RP0=0, select bank0
  7906     02EA  1303               	bcf	3,6	;RP1=0, select bank0
  7907     02EB  0853               	movf	estado_executa_muda@novo_estado,w
  7908     02EC  1683               	bsf	3,5	;RP0=1, select bank1
  7909     02ED  1303               	bcf	3,6	;RP1=0, select bank1
  7910     02EE  00D2               	movwf	_gl_estado^(0+128)
  7911     02EF                     i1l548:
  7912     02EF  0008               	return
  7913     02F0                     __end_of_estado_executa_muda:
  7914                           
  7915                           	psect	text30
  7916     1418                     __ptext30:	
  7917 ;; *************** function _btns_testa *****************
  7918 ;; Defined at:
  7919 ;;		line 7 in file "botoes.c"
  7920 ;; Parameters:    Size  Location     Type
  7921 ;;		None
  7922 ;; Auto vars:     Size  Location     Type
  7923 ;;		None
  7924 ;; Return value:  Size  Location     Type
  7925 ;;                  1    wreg      unsigned char 
  7926 ;; Registers used:
  7927 ;;		wreg
  7928 ;; Tracked objects:
  7929 ;;		On entry : 0/0
  7930 ;;		On exit  : 0/0
  7931 ;;		Unchanged: 0/0
  7932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7933 ;;      Params:         0       0       0       0       0
  7934 ;;      Locals:         0       0       0       0       0
  7935 ;;      Temps:          3       0       0       0       0
  7936 ;;      Totals:         3       0       0       0       0
  7937 ;;Total ram usage:        3 bytes
  7938 ;; Hardware stack levels used: 1
  7939 ;; This function calls:
  7940 ;;		Nothing
  7941 ;; This function is called by:
  7942 ;;		_handler
  7943 ;; This function uses a non-reentrant model
  7944 ;;
  7945                           
  7946     1418                     _btns_testa:	
  7947                           ;psect for function _btns_testa
  7948                           
  7949     1418                     i1l4173:	
  7950                           ;incstack = 0
  7951                           ; Regs used in _btns_testa: [wreg]
  7952                           
  7953                           
  7954                           ;botoes.c: 9:     _delay((unsigned long)((200)*(4000000/4000.0)));
  7955     1418  3002               	movlw	2
  7956     1419  00F2               	movwf	??_btns_testa+2
  7957     141A  3004               	movlw	4
  7958     141B  00F1               	movwf	??_btns_testa+1
  7959     141C  30BA               	movlw	186
  7960     141D  00F0               	movwf	??_btns_testa
  7961     141E                     u859_27:
  7962     141E  0BF0               	decfsz	??_btns_testa,f
  7963     141F  2C1E               	goto	u859_27
  7964     1420  0BF1               	decfsz	??_btns_testa+1,f
  7965     1421  2C1E               	goto	u859_27
  7966     1422  0BF2               	decfsz	??_btns_testa+2,f
  7967     1423  2C1E               	goto	u859_27
  7968     1424  0000               	nop
  7969     1425                     i1l4175:
  7970                           
  7971                           ;botoes.c: 10:     if(RB4 == 0) {
  7972     1425  1283               	bcf	3,5	;RP0=0, select bank0
  7973     1426  1303               	bcf	3,6	;RP1=0, select bank0
  7974     1427  1A06               	btfsc	6,4	;volatile
  7975     1428  2C2A               	goto	u399_21
  7976     1429  2C2B               	goto	u399_20
  7977     142A                     u399_21:
  7978     142A  2C2D               	goto	i1l143
  7979     142B                     u399_20:
  7980     142B                     i1l4177:
  7981                           
  7982                           ;botoes.c: 11:         return 1;
  7983     142B  3001               	movlw	1
  7984     142C  2C40               	goto	i1l144
  7985     142D                     i1l143:	
  7986                           ;botoes.c: 12:     }
  7987                           
  7988                           
  7989                           ;botoes.c: 13:     if(RB5 == 0) {
  7990     142D  1A86               	btfsc	6,5	;volatile
  7991     142E  2C30               	goto	u400_21
  7992     142F  2C31               	goto	u400_20
  7993     1430                     u400_21:
  7994     1430  2C33               	goto	i1l145
  7995     1431                     u400_20:
  7996     1431                     i1l4181:
  7997                           
  7998                           ;botoes.c: 14:         return 2;
  7999     1431  3002               	movlw	2
  8000     1432  2C40               	goto	i1l144
  8001     1433                     i1l145:	
  8002                           ;botoes.c: 15:     }
  8003                           
  8004                           
  8005                           ;botoes.c: 16:     if(RB6 == 0) {
  8006     1433  1B06               	btfsc	6,6	;volatile
  8007     1434  2C36               	goto	u401_21
  8008     1435  2C37               	goto	u401_20
  8009     1436                     u401_21:
  8010     1436  2C39               	goto	i1l146
  8011     1437                     u401_20:
  8012     1437                     i1l4185:
  8013                           
  8014                           ;botoes.c: 17:         return 3;
  8015     1437  3003               	movlw	3
  8016     1438  2C40               	goto	i1l144
  8017     1439                     i1l146:	
  8018                           ;botoes.c: 18:     }
  8019                           
  8020                           
  8021                           ;botoes.c: 19:     if(RB7 == 0) {
  8022     1439  1B86               	btfsc	6,7	;volatile
  8023     143A  2C3C               	goto	u402_21
  8024     143B  2C3D               	goto	u402_20
  8025     143C                     u402_21:
  8026     143C  2C3F               	goto	i1l4193
  8027     143D                     u402_20:
  8028     143D                     i1l4189:
  8029                           
  8030                           ;botoes.c: 20:         return 4;
  8031     143D  3004               	movlw	4
  8032     143E  2C40               	goto	i1l144
  8033     143F                     i1l4193:
  8034                           
  8035                           ;botoes.c: 22:     return 0;
  8036     143F  3000               	movlw	0
  8037     1440                     i1l144:
  8038     1440  0008               	return
  8039     1441                     __end_of_btns_testa:
  8040                           
  8041                           	psect	text31
  8042     0D57                     __ptext31:	
  8043 ;; *************** function _adcon_captura_grava *****************
  8044 ;; Defined at:
  8045 ;;		line 19 in file "adcon.c"
  8046 ;; Parameters:    Size  Location     Type
  8047 ;;		None
  8048 ;; Auto vars:     Size  Location     Type
  8049 ;;  i               1   58[BANK0 ] unsigned char 
  8050 ;;  x               2   52[BANK0 ] unsigned int 
  8051 ;;  i               1   57[BANK0 ] unsigned char 
  8052 ;;  t_int           2   59[BANK0 ] unsigned int 
  8053 ;;  menor           2   50[BANK0 ] unsigned int 
  8054 ;;  maior           2   48[BANK0 ] unsigned int 
  8055 ;;  qtd_val         1   56[BANK0 ] unsigned char 
  8056 ;;  qtd_sens        1   55[BANK0 ] unsigned char 
  8057 ;;  posicao         1   54[BANK0 ] unsigned char 
  8058 ;; Return value:  Size  Location     Type
  8059 ;;                  1    wreg      void 
  8060 ;; Registers used:
  8061 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8062 ;; Tracked objects:
  8063 ;;		On entry : 0/0
  8064 ;;		On exit  : 0/0
  8065 ;;		Unchanged: 0/0
  8066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8067 ;;      Params:         0       0       0       0       0
  8068 ;;      Locals:         0      13       0       0       0
  8069 ;;      Temps:          1       0       0       0       0
  8070 ;;      Totals:         1      13       0       0       0
  8071 ;;Total ram usage:       14 bytes
  8072 ;; Hardware stack levels used: 1
  8073 ;; Hardware stack levels required when called: 4
  8074 ;; This function calls:
  8075 ;;		___bmul
  8076 ;;		_adcon_ler_canal
  8077 ;;		_adcon_mostra
  8078 ;;		_eeprom_ler_word
  8079 ;;		_lcd_clear
  8080 ;;		i1_eeprom_gravar_word
  8081 ;;		i1_eeprom_read
  8082 ;;		i1_eeprom_write
  8083 ;;		i1_lcd_puts
  8084 ;; This function is called by:
  8085 ;;		_handler
  8086 ;; This function uses a non-reentrant model
  8087 ;;
  8088                           
  8089     0D57                     _adcon_captura_grava:	
  8090                           ;psect for function _adcon_captura_grava
  8091                           
  8092     0D57                     i1l8359:	
  8093                           ;incstack = 0
  8094 ;; hardware stack exceeded
  8095                           ; Regs used in _adcon_captura_grava: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  8096                           
  8097                           
  8098                           ;adcon.c: 20:     uint16_t t_int;;adcon.c: 21:     uint16_t maior, menor;;adcon.c: 22:  
      +                             uint8_t qtd_val, qtd_sens;;adcon.c: 23:     uint8_t posicao;;adcon.c: 31:     posicao
      +                           = eeprom_read(0x00);
  8099     0D57  3000               	movlw	0
  8100     0D58  160A  118A  232C  120A  158A  	fcall	i1_eeprom_read
  8101     0D5D  1283               	bcf	3,5	;RP0=0, select bank0
  8102     0D5E  1303               	bcf	3,6	;RP1=0, select bank0
  8103     0D5F  00D6               	movwf	adcon_captura_grava@posicao
  8104     0D60                     i1l8361:
  8105                           
  8106                           ;adcon.c: 32:     qtd_sens = menu_quant_sensores[posicao].i_quant_sensores;
  8107     0D60  3003               	movlw	3
  8108     0D61  00F0               	movwf	___bmul@multiplicand
  8109     0D62  0856               	movf	adcon_captura_grava@posicao,w
  8110     0D63  160A  118A  2317  120A  158A  	fcall	___bmul
  8111     0D68  3E02               	addlw	2
  8112     0D69  3E2E               	addlw	low (_menu_quant_sensores| (0+32768))
  8113     0D6A  0084               	movwf	4
  8114     0D6B  3087               	movlw	high (_menu_quant_sensores| (0+32768))
  8115     0D6C  1803               	skipnc
  8116     0D6D  3E01               	addlw	1
  8117     0D6E  1283               	bcf	3,5	;RP0=0, select bank0
  8118     0D6F  1303               	bcf	3,6	;RP1=0, select bank0
  8119     0D70  00FF               	movwf	btemp+1
  8120     0D71  120A  118A  2700  120A  158A  	fcall	stringtab
  8121     0D76  00D7               	movwf	adcon_captura_grava@qtd_sens
  8122     0D77                     i1l8363:
  8123                           
  8124                           ;adcon.c: 34:     qtd_val = eeprom_read(0x08);
  8125     0D77  3008               	movlw	8
  8126     0D78  160A  118A  232C  120A  158A  	fcall	i1_eeprom_read
  8127     0D7D  1283               	bcf	3,5	;RP0=0, select bank0
  8128     0D7E  1303               	bcf	3,6	;RP1=0, select bank0
  8129     0D7F  00D8               	movwf	adcon_captura_grava@qtd_val
  8130     0D80                     i1l8365:
  8131                           
  8132                           ;adcon.c: 35:     maior = eeprom_ler_word(0x06);
  8133     0D80  3006               	movlw	6
  8134     0D81  160A  118A  23F2  120A  158A  	fcall	_eeprom_ler_word
  8135     0D86  0872               	movf	?_eeprom_ler_word+1,w
  8136     0D87  1283               	bcf	3,5	;RP0=0, select bank0
  8137     0D88  1303               	bcf	3,6	;RP1=0, select bank0
  8138     0D89  00D1               	movwf	adcon_captura_grava@maior+1
  8139     0D8A  0871               	movf	?_eeprom_ler_word,w
  8140     0D8B  00D0               	movwf	adcon_captura_grava@maior
  8141     0D8C                     i1l8367:
  8142                           
  8143                           ;adcon.c: 36:     menor = eeprom_ler_word(0x04);
  8144     0D8C  3004               	movlw	4
  8145     0D8D  160A  118A  23F2  120A  158A  	fcall	_eeprom_ler_word
  8146     0D92  0872               	movf	?_eeprom_ler_word+1,w
  8147     0D93  1283               	bcf	3,5	;RP0=0, select bank0
  8148     0D94  1303               	bcf	3,6	;RP1=0, select bank0
  8149     0D95  00D3               	movwf	adcon_captura_grava@menor+1
  8150     0D96  0871               	movf	?_eeprom_ler_word,w
  8151     0D97  00D2               	movwf	adcon_captura_grava@menor
  8152     0D98                     i1l8369:
  8153                           
  8154                           ;adcon.c: 41:     lcd_clear();
  8155     0D98  160A  118A  2343  120A  158A  	fcall	_lcd_clear
  8156     0D9D                     i1l8371:
  8157                           
  8158                           ;adcon.c: 43:     if (gl_estado == EST_CAPTURA_E_MOSTRA) {
  8159     0D9D  3002               	movlw	2
  8160     0D9E  1683               	bsf	3,5	;RP0=1, select bank1
  8161     0D9F  1303               	bcf	3,6	;RP1=0, select bank1
  8162     0DA0  0652               	xorwf	_gl_estado^(0+128),w
  8163     0DA1  1D03               	btfss	3,2
  8164     0DA2  2DA4               	goto	u830_21
  8165     0DA3  2DA5               	goto	u830_20
  8166     0DA4                     u830_21:
  8167     0DA4  2DCD               	goto	i1l8381
  8168     0DA5                     u830_20:
  8169     0DA5                     i1l8373:
  8170                           
  8171                           ;adcon.c: 44:         for (uint8_t i = 0; i < qtd_sens; i++) {
  8172     0DA5  1283               	bcf	3,5	;RP0=0, select bank0
  8173     0DA6  1303               	bcf	3,6	;RP1=0, select bank0
  8174     0DA7  01D9               	clrf	adcon_captura_grava@i
  8175     0DA8  2DC6               	goto	i1l8379
  8176     0DA9                     i1l8375:
  8177                           
  8178                           ;adcon.c: 45:             uint16_t x = adcon_ler_canal(i);
  8179     0DA9  0859               	movf	adcon_captura_grava@i,w
  8180     0DAA  120A  158A  230D  120A  158A  	fcall	_adcon_ler_canal
  8181     0DAF  0871               	movf	?_adcon_ler_canal+1,w
  8182     0DB0  1283               	bcf	3,5	;RP0=0, select bank0
  8183     0DB1  1303               	bcf	3,6	;RP1=0, select bank0
  8184     0DB2  00D5               	movwf	adcon_captura_grava@x+1
  8185     0DB3  0870               	movf	?_adcon_ler_canal,w
  8186     0DB4  00D4               	movwf	adcon_captura_grava@x
  8187                           
  8188                           ;adcon.c: 46:             adcon_mostra(x, i);
  8189     0DB5  0855               	movf	adcon_captura_grava@x+1,w
  8190     0DB6  00BD               	movwf	adcon_mostra@t_int+1
  8191     0DB7  0854               	movf	adcon_captura_grava@x,w
  8192     0DB8  00BC               	movwf	adcon_mostra@t_int
  8193     0DB9  0859               	movf	adcon_captura_grava@i,w
  8194     0DBA  00BE               	movwf	adcon_mostra@i
  8195     0DBB  120A  158A  2383  120A  158A  	fcall	_adcon_mostra
  8196     0DC0                     i1l8377:
  8197                           
  8198                           ;adcon.c: 48:         }
  8199     0DC0  3001               	movlw	1
  8200     0DC1  00FF               	movwf	btemp+1
  8201     0DC2  087F               	movf	btemp+1,w
  8202     0DC3  1283               	bcf	3,5	;RP0=0, select bank0
  8203     0DC4  1303               	bcf	3,6	;RP1=0, select bank0
  8204     0DC5  07D9               	addwf	adcon_captura_grava@i,f
  8205     0DC6                     i1l8379:
  8206     0DC6  0857               	movf	adcon_captura_grava@qtd_sens,w
  8207     0DC7  0259               	subwf	adcon_captura_grava@i,w
  8208     0DC8  1C03               	skipc
  8209     0DC9  2DCB               	goto	u831_21
  8210     0DCA  2DCC               	goto	u831_20
  8211     0DCB                     u831_21:
  8212     0DCB  2DA9               	goto	i1l8375
  8213     0DCC                     u831_20:
  8214     0DCC  2E59               	goto	i1l268
  8215     0DCD                     i1l8381:
  8216                           
  8217                           ;adcon.c: 50:         if (gl_estado == EST_CAPTURA_E_GRAVA) {
  8218     0DCD  3003               	movlw	3
  8219     0DCE  0652               	xorwf	_gl_estado^(0+128),w
  8220     0DCF  1D03               	btfss	3,2
  8221     0DD0  2DD2               	goto	u832_21
  8222     0DD1  2DD3               	goto	u832_20
  8223     0DD2                     u832_21:
  8224     0DD2  2E59               	goto	i1l268
  8225     0DD3                     u832_20:
  8226     0DD3                     i1l8383:
  8227                           
  8228                           ;adcon.c: 51:             for (uint8_t i = 0; i < qtd_sens; i++) {
  8229     0DD3  1283               	bcf	3,5	;RP0=0, select bank0
  8230     0DD4  1303               	bcf	3,6	;RP1=0, select bank0
  8231     0DD5  01DA               	clrf	adcon_captura_grava@i_646
  8232     0DD6  2E53               	goto	i1l8413
  8233     0DD7                     i1l8385:
  8234                           
  8235                           ;adcon.c: 53:                 if (qtd_val >= 100) {
  8236     0DD7  3064               	movlw	100
  8237     0DD8  0258               	subwf	adcon_captura_grava@qtd_val,w
  8238     0DD9  1C03               	skipc
  8239     0DDA  2DDC               	goto	u833_21
  8240     0DDB  2DDD               	goto	u833_20
  8241     0DDC                     u833_21:
  8242     0DDC  2DED               	goto	i1l8395
  8243     0DDD                     u833_20:
  8244     0DDD                     i1l8387:
  8245                           
  8246                           ;adcon.c: 54:                     INTCONbits.T0IE = 0;
  8247     0DDD  128B               	bcf	11,5	;volatile
  8248     0DDE                     i1l8389:
  8249                           
  8250                           ;adcon.c: 55:                     lcd_clear();
  8251     0DDE  160A  118A  2343  120A  158A  	fcall	_lcd_clear
  8252     0DE3                     i1l8391:
  8253                           
  8254                           ;adcon.c: 56:                     lcd_puts("Memoria Cheia");
  8255     0DE3  30CA               	movlw	low (STR_16| (0+32768))
  8256     0DE4  00F3               	movwf	i1lcd_puts@str
  8257     0DE5  3087               	movlw	high (STR_16| (0+32768))
  8258     0DE6  00F4               	movwf	i1lcd_puts@str+1
  8259     0DE7  160A  118A  2494  120A  158A  	fcall	i1_lcd_puts
  8260                           
  8261                           ;adcon.c: 57:                     break;
  8262     0DEC  2E59               	goto	i1l268
  8263     0DED                     i1l8395:
  8264                           
  8265                           ;adcon.c: 60:                     t_int = adcon_ler_canal(i);
  8266     0DED  085A               	movf	adcon_captura_grava@i_646,w
  8267     0DEE  120A  158A  230D  120A  158A  	fcall	_adcon_ler_canal
  8268     0DF3  0871               	movf	?_adcon_ler_canal+1,w
  8269     0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  8270     0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  8271     0DF6  00DC               	movwf	adcon_captura_grava@t_int+1
  8272     0DF7  0870               	movf	?_adcon_ler_canal,w
  8273     0DF8  00DB               	movwf	adcon_captura_grava@t_int
  8274     0DF9                     i1l8397:
  8275                           
  8276                           ;adcon.c: 61:                     if (t_int < menor) {
  8277     0DF9  0853               	movf	adcon_captura_grava@menor+1,w
  8278     0DFA  025C               	subwf	adcon_captura_grava@t_int+1,w
  8279     0DFB  1D03               	skipz
  8280     0DFC  2DFF               	goto	u834_25
  8281     0DFD  0852               	movf	adcon_captura_grava@menor,w
  8282     0DFE  025B               	subwf	adcon_captura_grava@t_int,w
  8283     0DFF                     u834_25:
  8284     0DFF  1803               	skipnc
  8285     0E00  2E02               	goto	u834_21
  8286     0E01  2E03               	goto	u834_20
  8287     0E02                     u834_21:
  8288     0E02  2E0D               	goto	i1l8401
  8289     0E03                     u834_20:
  8290     0E03                     i1l8399:
  8291                           
  8292                           ;adcon.c: 62:                         eeprom_gravar_word(0x04, t_int);
  8293     0E03  085C               	movf	adcon_captura_grava@t_int+1,w
  8294     0E04  00F3               	movwf	i1eeprom_gravar_word@dado+1
  8295     0E05  085B               	movf	adcon_captura_grava@t_int,w
  8296     0E06  00F2               	movwf	i1eeprom_gravar_word@dado
  8297     0E07  3004               	movlw	4
  8298     0E08  160A  118A  22F1  120A  158A  	fcall	i1_eeprom_gravar_word
  8299     0E0D                     i1l8401:
  8300                           
  8301                           ;adcon.c: 64:                     if (t_int > maior) {
  8302     0E0D  1283               	bcf	3,5	;RP0=0, select bank0
  8303     0E0E  1303               	bcf	3,6	;RP1=0, select bank0
  8304     0E0F  085C               	movf	adcon_captura_grava@t_int+1,w
  8305     0E10  0251               	subwf	adcon_captura_grava@maior+1,w
  8306     0E11  1D03               	skipz
  8307     0E12  2E15               	goto	u835_25
  8308     0E13  085B               	movf	adcon_captura_grava@t_int,w
  8309     0E14  0250               	subwf	adcon_captura_grava@maior,w
  8310     0E15                     u835_25:
  8311     0E15  1803               	skipnc
  8312     0E16  2E18               	goto	u835_21
  8313     0E17  2E19               	goto	u835_20
  8314     0E18                     u835_21:
  8315     0E18  2E23               	goto	i1l267
  8316     0E19                     u835_20:
  8317     0E19                     i1l8403:
  8318                           
  8319                           ;adcon.c: 65:                         eeprom_gravar_word(0x06, t_int);
  8320     0E19  085C               	movf	adcon_captura_grava@t_int+1,w
  8321     0E1A  00F3               	movwf	i1eeprom_gravar_word@dado+1
  8322     0E1B  085B               	movf	adcon_captura_grava@t_int,w
  8323     0E1C  00F2               	movwf	i1eeprom_gravar_word@dado
  8324     0E1D  3006               	movlw	6
  8325     0E1E  160A  118A  22F1  120A  158A  	fcall	i1_eeprom_gravar_word
  8326     0E23                     i1l267:	
  8327                           ;adcon.c: 66:                     }
  8328                           
  8329                           
  8330                           ;adcon.c: 67:                     eeprom_gravar_word(0x0e + (qtd_val * 2), t_int);
  8331     0E23  1283               	bcf	3,5	;RP0=0, select bank0
  8332     0E24  1303               	bcf	3,6	;RP1=0, select bank0
  8333     0E25  085C               	movf	adcon_captura_grava@t_int+1,w
  8334     0E26  00F3               	movwf	i1eeprom_gravar_word@dado+1
  8335     0E27  085B               	movf	adcon_captura_grava@t_int,w
  8336     0E28  00F2               	movwf	i1eeprom_gravar_word@dado
  8337     0E29  0858               	movf	adcon_captura_grava@qtd_val,w
  8338     0E2A  00FD               	movwf	??_adcon_captura_grava
  8339     0E2B  077D               	addwf	??_adcon_captura_grava,w
  8340     0E2C  3E0E               	addlw	14
  8341     0E2D  160A  118A  22F1  120A  158A  	fcall	i1_eeprom_gravar_word
  8342     0E32                     i1l8405:
  8343                           
  8344                           ;adcon.c: 69:                     qtd_val++;
  8345     0E32  3001               	movlw	1
  8346     0E33  00FF               	movwf	btemp+1
  8347     0E34  087F               	movf	btemp+1,w
  8348     0E35  1283               	bcf	3,5	;RP0=0, select bank0
  8349     0E36  1303               	bcf	3,6	;RP1=0, select bank0
  8350     0E37  07D8               	addwf	adcon_captura_grava@qtd_val,f
  8351     0E38                     i1l8407:
  8352                           
  8353                           ;adcon.c: 70:                     eeprom_write(0x08, qtd_val);
  8354     0E38  0858               	movf	adcon_captura_grava@qtd_val,w
  8355     0E39  00F0               	movwf	i1eeprom_write@value
  8356     0E3A  3008               	movlw	8
  8357     0E3B  160A  118A  24C1  120A  158A  	fcall	i1_eeprom_write
  8358     0E40                     i1l8409:
  8359                           
  8360                           ;adcon.c: 72:                     adcon_mostra(t_int, i);
  8361     0E40  1283               	bcf	3,5	;RP0=0, select bank0
  8362     0E41  1303               	bcf	3,6	;RP1=0, select bank0
  8363     0E42  085C               	movf	adcon_captura_grava@t_int+1,w
  8364     0E43  00BD               	movwf	adcon_mostra@t_int+1
  8365     0E44  085B               	movf	adcon_captura_grava@t_int,w
  8366     0E45  00BC               	movwf	adcon_mostra@t_int
  8367     0E46  085A               	movf	adcon_captura_grava@i_646,w
  8368     0E47  00BE               	movwf	adcon_mostra@i
  8369     0E48  120A  158A  2383  120A  158A  	fcall	_adcon_mostra
  8370     0E4D                     i1l8411:
  8371                           
  8372                           ;adcon.c: 76:             }
  8373     0E4D  3001               	movlw	1
  8374     0E4E  00FF               	movwf	btemp+1
  8375     0E4F  087F               	movf	btemp+1,w
  8376     0E50  1283               	bcf	3,5	;RP0=0, select bank0
  8377     0E51  1303               	bcf	3,6	;RP1=0, select bank0
  8378     0E52  07DA               	addwf	adcon_captura_grava@i_646,f
  8379     0E53                     i1l8413:
  8380     0E53  0857               	movf	adcon_captura_grava@qtd_sens,w
  8381     0E54  025A               	subwf	adcon_captura_grava@i_646,w
  8382     0E55  1C03               	skipc
  8383     0E56  2E58               	goto	u836_21
  8384     0E57  2E59               	goto	u836_20
  8385     0E58                     u836_21:
  8386     0E58  2DD7               	goto	i1l8385
  8387     0E59                     u836_20:
  8388     0E59                     i1l268:
  8389     0E59  0008               	return
  8390     0E5A                     __end_of_adcon_captura_grava:
  8391                           
  8392                           	psect	text32
  8393     12F1                     __ptext32:	
  8394 ;; *************** function i1_eeprom_gravar_word *****************
  8395 ;; Defined at:
  8396 ;;		line 23 in file "eeprom.c"
  8397 ;; Parameters:    Size  Location     Type
  8398 ;;  end             1    wreg     unsigned char 
  8399 ;;  dado            2    2[COMMON] unsigned int 
  8400 ;; Auto vars:     Size  Location     Type
  8401 ;;  end             1    4[COMMON] unsigned char 
  8402 ;; Return value:  Size  Location     Type
  8403 ;;                  1    wreg      void 
  8404 ;; Registers used:
  8405 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8406 ;; Tracked objects:
  8407 ;;		On entry : 0/0
  8408 ;;		On exit  : 0/0
  8409 ;;		Unchanged: 0/0
  8410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8411 ;;      Params:         2       0       0       0       0
  8412 ;;      Locals:         1       0       0       0       0
  8413 ;;      Temps:          0       0       0       0       0
  8414 ;;      Totals:         3       0       0       0       0
  8415 ;;Total ram usage:        3 bytes
  8416 ;; Hardware stack levels used: 1
  8417 ;; Hardware stack levels required when called: 1
  8418 ;; This function calls:
  8419 ;;		i1_eeprom_write
  8420 ;; This function is called by:
  8421 ;;		_adcon_captura_grava
  8422 ;;		_estado_menu_principal
  8423 ;;		_estado_menu_conf_tempo_amostra
  8424 ;;		_estado_executa_muda
  8425 ;; This function uses a non-reentrant model
  8426 ;;
  8427                           
  8428     12F1                     i1_eeprom_gravar_word:	
  8429                           ;psect for function i1_eeprom_gravar_word
  8430                           
  8431                           
  8432                           ;incstack = 0
  8433 ;; hardware stack exceeded
  8434                           ; Regs used in i1_eeprom_gravar_word: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8435                           ;i1eeprom_gravar_word@end stored from wreg
  8436     12F1  00F4               	movwf	i1eeprom_gravar_word@end
  8437     12F2                     i1l7877:
  8438                           
  8439                           ;eeprom.c: 30:     eeprom_write(end, dado >> 8);
  8440     12F2  0873               	movf	i1eeprom_gravar_word@dado+1,w
  8441     12F3  00F0               	movwf	i1eeprom_write@value
  8442     12F4  0874               	movf	i1eeprom_gravar_word@end,w
  8443     12F5  160A  118A  24C1  160A  118A  	fcall	i1_eeprom_write
  8444                           
  8445                           ;eeprom.c: 32:     eeprom_write(end + 1, dado);
  8446     12FA  0872               	movf	i1eeprom_gravar_word@dado,w
  8447     12FB  00F0               	movwf	i1eeprom_write@value
  8448     12FC  0874               	movf	i1eeprom_gravar_word@end,w
  8449     12FD  3E01               	addlw	1
  8450     12FE  160A  118A  24C1  160A  118A  	fcall	i1_eeprom_write
  8451     1303                     i1l294:
  8452     1303  0008               	return
  8453     1304                     __end_ofi1_eeprom_gravar_word:
  8454                           
  8455                           	psect	text33
  8456     14C1                     __ptext33:	
  8457 ;; *************** function i1_eeprom_write *****************
  8458 ;; Defined at:
  8459 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eewrite.c"
  8460 ;; Parameters:    Size  Location     Type
  8461 ;;  addr            1    wreg     unsigned char 
  8462 ;;  value           1    0[COMMON] unsigned char 
  8463 ;; Auto vars:     Size  Location     Type
  8464 ;;  addr            1    1[COMMON] unsigned char 
  8465 ;; Return value:  Size  Location     Type
  8466 ;;                  1    wreg      void 
  8467 ;; Registers used:
  8468 ;;		wreg, status,2, status,0, btemp+1
  8469 ;; Tracked objects:
  8470 ;;		On entry : 0/0
  8471 ;;		On exit  : 0/0
  8472 ;;		Unchanged: 0/0
  8473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8474 ;;      Params:         1       0       0       0       0
  8475 ;;      Locals:         1       0       0       0       0
  8476 ;;      Temps:          0       0       0       0       0
  8477 ;;      Totals:         2       0       0       0       0
  8478 ;;Total ram usage:        2 bytes
  8479 ;; Hardware stack levels used: 1
  8480 ;; This function calls:
  8481 ;;		Nothing
  8482 ;; This function is called by:
  8483 ;;		_adcon_captura_grava
  8484 ;;		_estado_menu_principal
  8485 ;;		_estado_menu_conf_quant_sensores
  8486 ;;		_estado_executa_muda
  8487 ;;		i1_eeprom_gravar_word
  8488 ;; This function uses a non-reentrant model
  8489 ;;
  8490                           
  8491     14C1                     i1_eeprom_write:	
  8492                           ;psect for function i1_eeprom_write
  8493                           
  8494                           
  8495                           ;incstack = 0
  8496                           ; Regs used in i1_eeprom_write: [wreg+status,2+status,0+btemp+1]
  8497                           ;i1eeprom_write@addr stored from wreg
  8498     14C1  00F1               	movwf	i1eeprom_write@addr
  8499     14C2                     i1l660:	
  8500                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eewrite.c: 6: eeprom_write(u
      +                          nsigned char addr, unsigned char value);C:\Program Files\Microchip\xc8\v2.41\pic\sources
      +                          \c90\pic\__eewrite.c: 7: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__ee
      +                          write.c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value); E
      +                          ECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCO
      +                          Nbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1; EEC
      +                          ON1bits.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
  8501                           
  8502     14C2                     i1l661:
  8503     14C2  1683               	bsf	3,5	;RP0=1, select bank3
  8504     14C3  1703               	bsf	3,6	;RP1=1, select bank3
  8505     14C4  188C               	btfsc	12,1	;volsfr
  8506     14C5  2CC7               	goto	u767_21
  8507     14C6  2CC8               	goto	u767_20
  8508     14C7                     u767_21:
  8509     14C7  2CC2               	goto	i1l661
  8510     14C8                     u767_20:
  8511     14C8                     i1l7707:
  8512     14C8  0871               	movf	i1eeprom_write@addr,w
  8513     14C9  1283               	bcf	3,5	;RP0=0, select bank2
  8514     14CA  1703               	bsf	3,6	;RP1=1, select bank2
  8515     14CB  008D               	movwf	13	;volatile
  8516     14CC  0870               	movf	i1eeprom_write@value,w
  8517     14CD  008C               	movwf	12	;volatile
  8518     14CE                     i1l7709:
  8519     14CE  303F               	movlw	63
  8520     14CF  00FF               	movwf	btemp+1
  8521     14D0  087F               	movf	btemp+1,w
  8522     14D1  1683               	bsf	3,5	;RP0=1, select bank3
  8523     14D2  1703               	bsf	3,6	;RP1=1, select bank3
  8524     14D3  058C               	andwf	12,f	;volsfr
  8525     14D4                     i1l7711:
  8526     14D4  1283               	bcf	3,5	;RP0=0, select bank0
  8527     14D5  1303               	bcf	3,6	;RP1=0, select bank0
  8528     14D6  1003               	bcf	3,0	;volatile
  8529     14D7                     i1l7713:
  8530     14D7  1F8B               	btfss	11,7	;volatile
  8531     14D8  2CDA               	goto	u768_21
  8532     14D9  2CDB               	goto	u768_20
  8533     14DA                     u768_21:
  8534     14DA  2CDC               	goto	i1l664
  8535     14DB                     u768_20:
  8536     14DB                     i1l7715:
  8537     14DB  1403               	bsf	3,0	;volatile
  8538     14DC                     i1l664:
  8539     14DC  138B               	bcf	11,7	;volatile
  8540     14DD  1683               	bsf	3,5	;RP0=1, select bank3
  8541     14DE  1703               	bsf	3,6	;RP1=1, select bank3
  8542     14DF  150C               	bsf	12,2	;volsfr
  8543     14E0                     i1l7717:
  8544     14E0  3055               	movlw	85
  8545     14E1  008D               	movwf	13	;volsfr
  8546     14E2  30AA               	movlw	170
  8547     14E3  008D               	movwf	13	;volsfr
  8548     14E4                     i1l7719:
  8549     14E4  148C               	bsf	12,1	;volsfr
  8550     14E5                     i1l7721:
  8551     14E5  110C               	bcf	12,2	;volsfr
  8552     14E6                     i1l7723:
  8553     14E6  1283               	bcf	3,5	;RP0=0, select bank0
  8554     14E7  1303               	bcf	3,6	;RP1=0, select bank0
  8555     14E8  1C03               	btfss	3,0	;volatile
  8556     14E9  2CEB               	goto	u769_21
  8557     14EA  2CEC               	goto	u769_20
  8558     14EB                     u769_21:
  8559     14EB  2CED               	goto	i1l667
  8560     14EC                     u769_20:
  8561     14EC                     i1l7725:
  8562     14EC  178B               	bsf	11,7	;volatile
  8563     14ED                     i1l667:
  8564     14ED  0008               	return
  8565     14EE                     __end_ofi1_eeprom_write:
  8566                           
  8567                           	psect	text34
  8568     1343                     __ptext34:	
  8569 ;; *************** function _lcd_clear *****************
  8570 ;; Defined at:
  8571 ;;		line 40 in file "lcd.c"
  8572 ;; Parameters:    Size  Location     Type
  8573 ;;		None
  8574 ;; Auto vars:     Size  Location     Type
  8575 ;;		None
  8576 ;; Return value:  Size  Location     Type
  8577 ;;                  1    wreg      void 
  8578 ;; Registers used:
  8579 ;;		wreg, status,2, status,0, pclath, cstack
  8580 ;; Tracked objects:
  8581 ;;		On entry : 0/0
  8582 ;;		On exit  : 0/0
  8583 ;;		Unchanged: 0/0
  8584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8585 ;;      Params:         0       0       0       0       0
  8586 ;;      Locals:         0       0       0       0       0
  8587 ;;      Temps:          2       0       0       0       0
  8588 ;;      Totals:         2       0       0       0       0
  8589 ;;Total ram usage:        2 bytes
  8590 ;; Hardware stack levels used: 1
  8591 ;; Hardware stack levels required when called: 1
  8592 ;; This function calls:
  8593 ;;		i1_lcd_write
  8594 ;; This function is called by:
  8595 ;;		_adcon_captura_grava
  8596 ;;		_estado_menu_principal
  8597 ;;		_estado_executa_muda
  8598 ;;		_mq_mostra
  8599 ;; This function uses a non-reentrant model
  8600 ;;
  8601                           
  8602     1343                     _lcd_clear:	
  8603                           ;psect for function _lcd_clear
  8604                           
  8605     1343                     i1l7799:	
  8606                           ;incstack = 0
  8607 ;; hardware stack exceeded
  8608                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  8609                           
  8610                           
  8611                           ;lcd.c: 41:     RC0 = 0;
  8612     1343  1283               	bcf	3,5	;RP0=0, select bank0
  8613     1344  1303               	bcf	3,6	;RP1=0, select bank0
  8614     1345  1007               	bcf	7,0	;volatile
  8615     1346                     i1l7801:
  8616                           
  8617                           ;lcd.c: 42:     lcd_write(0);
  8618     1346  3000               	movlw	0
  8619     1347  160A  118A  246A  160A  118A  	fcall	i1_lcd_write
  8620                           
  8621                           ;lcd.c: 43:     lcd_write(1);
  8622     134C  3001               	movlw	1
  8623     134D  160A  118A  246A  160A  118A  	fcall	i1_lcd_write
  8624     1352                     i1l7803:
  8625                           
  8626                           ;lcd.c: 44:     _delay((unsigned long)((2)*(4000000/4000.0)));
  8627     1352  3003               	movlw	3
  8628     1353  00F3               	movwf	??_lcd_clear+1
  8629     1354  3097               	movlw	151
  8630     1355  00F2               	movwf	??_lcd_clear
  8631     1356                     u860_27:
  8632     1356  0BF2               	decfsz	??_lcd_clear,f
  8633     1357  2B56               	goto	u860_27
  8634     1358  0BF3               	decfsz	??_lcd_clear+1,f
  8635     1359  2B56               	goto	u860_27
  8636     135A  2B5B               	nop2
  8637     135B                     i1l90:
  8638     135B  0008               	return
  8639     135C                     __end_of_lcd_clear:
  8640                           
  8641                           	psect	text35
  8642     13F2                     __ptext35:	
  8643 ;; *************** function _eeprom_ler_word *****************
  8644 ;; Defined at:
  8645 ;;		line 4 in file "eeprom.c"
  8646 ;; Parameters:    Size  Location     Type
  8647 ;;  end             1    wreg     unsigned char 
  8648 ;; Auto vars:     Size  Location     Type
  8649 ;;  end             1    5[COMMON] unsigned char 
  8650 ;;  temp_int        2    6[COMMON] unsigned int 
  8651 ;; Return value:  Size  Location     Type
  8652 ;;                  2    1[COMMON] unsigned int 
  8653 ;; Registers used:
  8654 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8655 ;; Tracked objects:
  8656 ;;		On entry : 0/0
  8657 ;;		On exit  : 0/0
  8658 ;;		Unchanged: 0/0
  8659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8660 ;;      Params:         2       0       0       0       0
  8661 ;;      Locals:         3       0       0       0       0
  8662 ;;      Temps:          2       0       0       0       0
  8663 ;;      Totals:         7       0       0       0       0
  8664 ;;Total ram usage:        7 bytes
  8665 ;; Hardware stack levels used: 1
  8666 ;; Hardware stack levels required when called: 1
  8667 ;; This function calls:
  8668 ;;		i1_eeprom_read
  8669 ;; This function is called by:
  8670 ;;		_handler
  8671 ;;		_adcon_captura_grava
  8672 ;;		_estado_menu_principal
  8673 ;;		_estado_executa_muda
  8674 ;; This function uses a non-reentrant model
  8675 ;;
  8676                           
  8677     13F2                     _eeprom_ler_word:	
  8678                           ;psect for function _eeprom_ler_word
  8679                           
  8680                           
  8681                           ;incstack = 0
  8682 ;; hardware stack exceeded
  8683                           ; Regs used in _eeprom_ler_word: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8684                           ;eeprom_ler_word@end stored from wreg
  8685     13F2  00F5               	movwf	eeprom_ler_word@end
  8686     13F3                     i1l7805:
  8687     13F3                     i1l7807:
  8688                           
  8689                           ;eeprom.c: 14:     temp_int = eeprom_read(end+1);
  8690     13F3  0875               	movf	eeprom_ler_word@end,w
  8691     13F4  3E01               	addlw	1
  8692     13F5  160A  118A  232C  160A  118A  	fcall	i1_eeprom_read
  8693     13FA  00F3               	movwf	??_eeprom_ler_word
  8694     13FB  01F4               	clrf	??_eeprom_ler_word+1
  8695     13FC  0873               	movf	??_eeprom_ler_word,w
  8696     13FD  00F6               	movwf	eeprom_ler_word@temp_int
  8697     13FE  0874               	movf	??_eeprom_ler_word+1,w
  8698     13FF  00F7               	movwf	eeprom_ler_word@temp_int+1
  8699     1400                     i1l7809:
  8700                           
  8701                           ;eeprom.c: 17:     temp_int = temp_int + (eeprom_read(end) << 8);
  8702     1400  0875               	movf	eeprom_ler_word@end,w
  8703     1401  160A  118A  232C  160A  118A  	fcall	i1_eeprom_read
  8704     1406  00F3               	movwf	??_eeprom_ler_word
  8705     1407  01F4               	clrf	??_eeprom_ler_word+1
  8706     1408  0873               	movf	??_eeprom_ler_word,w
  8707     1409  00F4               	movwf	??_eeprom_ler_word+1
  8708     140A  01F3               	clrf	??_eeprom_ler_word
  8709     140B  0876               	movf	eeprom_ler_word@temp_int,w
  8710     140C  0773               	addwf	??_eeprom_ler_word,w
  8711     140D  00F6               	movwf	eeprom_ler_word@temp_int
  8712     140E  0877               	movf	eeprom_ler_word@temp_int+1,w
  8713     140F  1803               	skipnc
  8714     1410  0A77               	incf	eeprom_ler_word@temp_int+1,w
  8715     1411  0774               	addwf	??_eeprom_ler_word+1,w
  8716     1412  00F7               	movwf	eeprom_ler_word@temp_int+1
  8717     1413                     i1l7811:
  8718                           
  8719                           ;eeprom.c: 20:     return temp_int;
  8720     1413  0877               	movf	eeprom_ler_word@temp_int+1,w
  8721     1414  00F2               	movwf	?_eeprom_ler_word+1
  8722     1415  0876               	movf	eeprom_ler_word@temp_int,w
  8723     1416  00F1               	movwf	?_eeprom_ler_word
  8724     1417                     i1l291:
  8725     1417  0008               	return
  8726     1418                     __end_of_eeprom_ler_word:
  8727                           
  8728                           	psect	text36
  8729     132C                     __ptext36:	
  8730 ;; *************** function i1_eeprom_read *****************
  8731 ;; Defined at:
  8732 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eeread.c"
  8733 ;; Parameters:    Size  Location     Type
  8734 ;;  addr            1    wreg     unsigned char 
  8735 ;; Auto vars:     Size  Location     Type
  8736 ;;  addr            1    0[COMMON] unsigned char 
  8737 ;; Return value:  Size  Location     Type
  8738 ;;                  1    wreg      unsigned char 
  8739 ;; Registers used:
  8740 ;;		wreg, status,2, status,0, btemp+1
  8741 ;; Tracked objects:
  8742 ;;		On entry : 0/0
  8743 ;;		On exit  : 0/0
  8744 ;;		Unchanged: 0/0
  8745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8746 ;;      Params:         0       0       0       0       0
  8747 ;;      Locals:         1       0       0       0       0
  8748 ;;      Temps:          0       0       0       0       0
  8749 ;;      Totals:         1       0       0       0       0
  8750 ;;Total ram usage:        1 bytes
  8751 ;; Hardware stack levels used: 1
  8752 ;; This function calls:
  8753 ;;		Nothing
  8754 ;; This function is called by:
  8755 ;;		_adcon_captura_grava
  8756 ;;		_eeprom_ler_word
  8757 ;;		_rs232_transmite
  8758 ;;		_estado_menu_principal
  8759 ;;		_estado_ver_todos
  8760 ;;		_estado_executa_muda
  8761 ;; This function uses a non-reentrant model
  8762 ;;
  8763                           
  8764     132C                     i1_eeprom_read:	
  8765                           ;psect for function i1_eeprom_read
  8766                           
  8767                           
  8768                           ;incstack = 0
  8769                           ; Regs used in i1_eeprom_read: [wreg+status,2+status,0+btemp+1]
  8770                           ;i1eeprom_read@addr stored from wreg
  8771     132C  00F0               	movwf	i1eeprom_read@addr
  8772     132D                     i1l641:	
  8773                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eeread.c: 6: eeprom_read(uns
      +                          igned char addr);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eeread.c: 7:
      +                           {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eeread.c: 8:  do
  8774                           
  8775     132D  0064               	clrwdt	;# 
  8776     132E  1683               	bsf	3,5	;RP0=1, select bank3
  8777     132F  1703               	bsf	3,6	;RP1=1, select bank3
  8778     1330  188C               	btfsc	12,1	;volsfr
  8779     1331  2B33               	goto	u766_21
  8780     1332  2B34               	goto	u766_20
  8781     1333                     u766_21:
  8782     1333  2B2D               	goto	i1l641
  8783     1334                     u766_20:
  8784     1334                     i1l7703:
  8785                           
  8786                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eeread.c: 18:  return ( EEAD
      +                          R = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  8787     1334  0870               	movf	i1eeprom_read@addr,w
  8788     1335  1283               	bcf	3,5	;RP0=0, select bank2
  8789     1336  1703               	bsf	3,6	;RP1=1, select bank2
  8790     1337  008D               	movwf	13	;volatile
  8791     1338  303F               	movlw	63
  8792     1339  00FF               	movwf	btemp+1
  8793     133A  087F               	movf	btemp+1,w
  8794     133B  1683               	bsf	3,5	;RP0=1, select bank3
  8795     133C  1703               	bsf	3,6	;RP1=1, select bank3
  8796     133D  058C               	andwf	12,f	;volsfr
  8797     133E  140C               	bsf	12,0	;volsfr
  8798     133F  1283               	bcf	3,5	;RP0=0, select bank2
  8799     1340  1703               	bsf	3,6	;RP1=1, select bank2
  8800     1341  080C               	movf	12,w	;volatile
  8801     1342                     i1l643:
  8802     1342  0008               	return
  8803     1343                     __end_ofi1_eeprom_read:
  8804                           
  8805                           	psect	text37
  8806     0B83                     __ptext37:	
  8807 ;; *************** function _adcon_mostra *****************
  8808 ;; Defined at:
  8809 ;;		line 110 in file "adcon.c"
  8810 ;; Parameters:    Size  Location     Type
  8811 ;;  t_int           2   28[BANK0 ] unsigned int 
  8812 ;;  i               1   30[BANK0 ] unsigned char 
  8813 ;; Auto vars:     Size  Location     Type
  8814 ;;  temp_str        9   35[BANK0 ] unsigned char [9]
  8815 ;;  temp_div        4   44[BANK0 ] struct .
  8816 ;; Return value:  Size  Location     Type
  8817 ;;                  1    wreg      void 
  8818 ;; Registers used:
  8819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8820 ;; Tracked objects:
  8821 ;;		On entry : 0/0
  8822 ;;		On exit  : 0/0
  8823 ;;		Unchanged: 0/0
  8824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8825 ;;      Params:         0       3       0       0       0
  8826 ;;      Locals:         0      13       0       0       0
  8827 ;;      Temps:          0       4       0       0       0
  8828 ;;      Totals:         0      20       0       0       0
  8829 ;;Total ram usage:       20 bytes
  8830 ;; Hardware stack levels used: 1
  8831 ;; Hardware stack levels required when called: 3
  8832 ;; This function calls:
  8833 ;;		___bmul
  8834 ;;		_div
  8835 ;;		_sprintf
  8836 ;;		i1_lcd_goto
  8837 ;;		i1_lcd_puts
  8838 ;; This function is called by:
  8839 ;;		_adcon_captura_grava
  8840 ;;		_estado_menu_principal
  8841 ;; This function uses a non-reentrant model
  8842 ;;
  8843                           
  8844     0B83                     _adcon_mostra:	
  8845                           ;psect for function _adcon_mostra
  8846                           
  8847     0B83                     i1l7897:	
  8848                           ;incstack = 0
  8849 ;; hardware stack exceeded
  8850                           ; Regs used in _adcon_mostra: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8851                           
  8852                           
  8853                           ;adcon.c: 114:     char temp_str[9] = {0};
  8854     0B83  3043               	movlw	adcon_mostra@temp_str& (0+255)
  8855     0B84  0084               	movwf	4
  8856     0B85  30C0               	movlw	low adcon_mostra@F1474
  8857     0B86  1283               	bcf	3,5	;RP0=0, select bank0
  8858     0B87  1303               	bcf	3,6	;RP1=0, select bank0
  8859     0B88  00BF               	movwf	??_adcon_mostra
  8860     0B89  0804               	movf	4,w
  8861     0B8A  00C0               	movwf	??_adcon_mostra+1
  8862     0B8B  3009               	movlw	9
  8863     0B8C  00C1               	movwf	??_adcon_mostra+2
  8864     0B8D                     u790_20:
  8865     0B8D  083F               	movf	??_adcon_mostra,w
  8866     0B8E  0084               	movwf	4
  8867     0B8F  1383               	bcf	3,7	;select IRP bank1
  8868     0B90  0800               	movf	0,w
  8869     0B91  00C2               	movwf	??_adcon_mostra+3
  8870     0B92  0ABF               	incf	??_adcon_mostra,f
  8871     0B93  0840               	movf	??_adcon_mostra+1,w
  8872     0B94  0084               	movwf	4
  8873     0B95  0842               	movf	??_adcon_mostra+3,w
  8874     0B96  0080               	movwf	0
  8875     0B97  0AC0               	incf	??_adcon_mostra+1,f
  8876     0B98  0BC1               	decfsz	??_adcon_mostra+2,f
  8877     0B99  2B8D               	goto	u790_20
  8878     0B9A                     i1l7899:
  8879                           
  8880                           ;adcon.c: 116:     div_t temp_div;;adcon.c: 118:     temp_div = div(t_int, 10);
  8881     0B9A  083D               	movf	adcon_mostra@t_int+1,w
  8882     0B9B  00F9               	movwf	div@number+1
  8883     0B9C  083C               	movf	adcon_mostra@t_int,w
  8884     0B9D  00F8               	movwf	div@number
  8885     0B9E  300A               	movlw	10
  8886     0B9F  00FA               	movwf	div@denom
  8887     0BA0  3000               	movlw	0
  8888     0BA1  00FB               	movwf	div@denom+1
  8889     0BA2  160A  118A  251C  120A  158A  	fcall	_div
  8890     0BA7  087B               	movf	?_div+3,w
  8891     0BA8  1283               	bcf	3,5	;RP0=0, select bank0
  8892     0BA9  1303               	bcf	3,6	;RP1=0, select bank0
  8893     0BAA  00CF               	movwf	adcon_mostra@temp_div+3
  8894     0BAB  087A               	movf	?_div+2,w
  8895     0BAC  00CE               	movwf	adcon_mostra@temp_div+2
  8896     0BAD  0879               	movf	?_div+1,w
  8897     0BAE  00CD               	movwf	adcon_mostra@temp_div+1
  8898     0BAF  0878               	movf	?_div,w
  8899     0BB0  00CC               	movwf	adcon_mostra@temp_div
  8900     0BB1                     i1l7901:
  8901                           
  8902                           ;adcon.c: 122:     sprintf(temp_str, "%d=%d.%d", menu_quant_sensores[i].i_quant_sensores
      +                          , temp_div.quot, temp_div.rem);
  8903     0BB1  3050               	movlw	low (STR_17| (0+32768))
  8904     0BB2  00AF               	movwf	sprintf@f
  8905     0BB3  3088               	movlw	high (STR_17| (0+32768))
  8906     0BB4  00B0               	movwf	sprintf@f+1
  8907     0BB5  3003               	movlw	3
  8908     0BB6  00F0               	movwf	___bmul@multiplicand
  8909     0BB7  083E               	movf	adcon_mostra@i,w
  8910     0BB8  160A  118A  2317  120A  158A  	fcall	___bmul
  8911     0BBD  3E02               	addlw	2
  8912     0BBE  3E2E               	addlw	low (_menu_quant_sensores| (0+32768))
  8913     0BBF  0084               	movwf	4
  8914     0BC0  3087               	movlw	high (_menu_quant_sensores| (0+32768))
  8915     0BC1  1803               	skipnc
  8916     0BC2  3E01               	addlw	1
  8917     0BC3  1283               	bcf	3,5	;RP0=0, select bank0
  8918     0BC4  1303               	bcf	3,6	;RP1=0, select bank0
  8919     0BC5  00FF               	movwf	btemp+1
  8920     0BC6  120A  118A  2700  120A  158A  	fcall	stringtab
  8921     0BCB  00B1               	movwf	?_sprintf+2
  8922     0BCC  01B2               	clrf	?_sprintf+3
  8923     0BCD  1BB1               	btfsc	?_sprintf+2,7
  8924     0BCE  03B2               	decf	?_sprintf+3,f
  8925     0BCF  084F               	movf	adcon_mostra@temp_div+3,w
  8926     0BD0  00B4               	movwf	?_sprintf+5
  8927     0BD1  084E               	movf	adcon_mostra@temp_div+2,w
  8928     0BD2  00B3               	movwf	?_sprintf+4
  8929     0BD3  084D               	movf	adcon_mostra@temp_div+1,w
  8930     0BD4  00B6               	movwf	?_sprintf+7
  8931     0BD5  084C               	movf	adcon_mostra@temp_div,w
  8932     0BD6  00B5               	movwf	?_sprintf+6
  8933     0BD7  3043               	movlw	(low (adcon_mostra@temp_str| 0))& (0+255)
  8934     0BD8  160A  118A  23AB  120A  158A  	fcall	_sprintf
  8935     0BDD                     i1l7903:
  8936                           
  8937                           ;adcon.c: 135:     lcd_goto(LCD_POSICAO[i].y, LCD_POSICAO[i].x);
  8938     0BDD  1403               	setc
  8939     0BDE  1283               	bcf	3,5	;RP0=0, select bank0
  8940     0BDF  1303               	bcf	3,6	;RP1=0, select bank0
  8941     0BE0  0D3E               	rlf	adcon_mostra@i,w
  8942     0BE1  3E44               	addlw	low (_LCD_POSICAO| (0+32768))
  8943     0BE2  0084               	movwf	4
  8944     0BE3  3087               	movlw	high (_LCD_POSICAO| (0+32768))
  8945     0BE4  1803               	skipnc
  8946     0BE5  3E01               	addlw	1
  8947     0BE6  00FF               	movwf	btemp+1
  8948     0BE7  120A  118A  2700  120A  158A  	fcall	stringtab
  8949     0BEC  00F2               	movwf	i1lcd_goto@x
  8950     0BED  083E               	movf	adcon_mostra@i,w
  8951     0BEE  00BF               	movwf	??_adcon_mostra
  8952     0BEF  073F               	addwf	??_adcon_mostra,w
  8953     0BF0  3E44               	addlw	low (_LCD_POSICAO| (0+32768))
  8954     0BF1  0084               	movwf	4
  8955     0BF2  3087               	movlw	high (_LCD_POSICAO| (0+32768))
  8956     0BF3  1803               	skipnc
  8957     0BF4  3E01               	addlw	1
  8958     0BF5  00FF               	movwf	btemp+1
  8959     0BF6  120A  118A  2700  120A  158A  	fcall	stringtab
  8960     0BFB  160A  118A  24EE  120A  158A  	fcall	i1_lcd_goto
  8961     0C00                     i1l7905:
  8962                           
  8963                           ;adcon.c: 136:     lcd_puts(temp_str);
  8964     0C00  3043               	movlw	(low (adcon_mostra@temp_str| 0))& (0+255)
  8965     0C01  00F3               	movwf	i1lcd_puts@str
  8966     0C02  3000               	movlw	0
  8967     0C03  00F4               	movwf	i1lcd_puts@str+1
  8968     0C04  160A  118A  2494  120A  158A  	fcall	i1_lcd_puts
  8969     0C09                     i1l281:
  8970     0C09  0008               	return
  8971     0C0A                     __end_of_adcon_mostra:
  8972                           
  8973                           	psect	text38
  8974     1494                     __ptext38:	
  8975 ;; *************** function i1_lcd_puts *****************
  8976 ;; Defined at:
  8977 ;;		line 65 in file "lcd.c"
  8978 ;; Parameters:    Size  Location     Type
  8979 ;;  str             2    3[COMMON] PTR const unsigned char 
  8980 ;;		 -> STR_47(11), STR_44(12), STR_42(12), estado_executa_muda@tmp(17), 
  8981 ;;		 -> STR_41(14), STR_40(7), STR_39(7), STR_38(7), 
  8982 ;;		 -> STR_37(6), STR_36(7), STR_35(7), STR_34(6), 
  8983 ;;		 -> STR_33(11), STR_32(11), STR_31(11), STR_30(9), 
  8984 ;;		 -> STR_29(15), STR_28(14), STR_27(7), STR_26(8), 
  8985 ;;		 -> STR_25(10), STR_24(15), STR_23(9), mq_mostra@temp_str(16), 
  8986 ;;		 -> STR_21(11), STR_20(11), STR_19(11), STR_18(9), 
  8987 ;;		 -> adcon_mostra@temp_str(9), STR_16(14), STR_15(11), STR_14(11), 
  8988 ;;		 -> STR_13(11), STR_12(9), STR_11(7), STR_10(7), 
  8989 ;;		 -> STR_9(7), STR_8(6), STR_7(7), STR_6(7), 
  8990 ;;		 -> STR_5(6), STR_4(11), STR_3(2), STR_2(14), 
  8991 ;; Auto vars:     Size  Location     Type
  8992 ;;  cmd             1    5[COMMON] unsigned char 
  8993 ;; Return value:  Size  Location     Type
  8994 ;;                  1    wreg      void 
  8995 ;; Registers used:
  8996 ;;		wreg, fsr0l, fsr0h, btemp+1, pclath
  8997 ;; Tracked objects:
  8998 ;;		On entry : 0/0
  8999 ;;		On exit  : 0/0
  9000 ;;		Unchanged: 0/0
  9001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9002 ;;      Params:         2       0       0       0       0
  9003 ;;      Locals:         1       0       0       0       0
  9004 ;;      Temps:          0       0       0       0       0
  9005 ;;      Totals:         3       0       0       0       0
  9006 ;;Total ram usage:        3 bytes
  9007 ;; Hardware stack levels used: 2
  9008 ;; This function calls:
  9009 ;;		Nothing
  9010 ;; This function is called by:
  9011 ;;		_adcon_captura_grava
  9012 ;;		_adcon_mostra
  9013 ;;		_estado_menu_principal
  9014 ;;		_estado_executa_muda
  9015 ;; This function uses a non-reentrant model
  9016 ;;
  9017                           
  9018     1494                     i1_lcd_puts:	
  9019                           ;psect for function i1_lcd_puts
  9020                           
  9021     1494                     i1l7867:	
  9022                           ;incstack = 0
  9023 ;; hardware stack exceeded
  9024                           ; Regs used in i1_lcd_puts: [wreg-fsr0h+btemp+1+pclath]
  9025                           
  9026                           
  9027                           ;lcd.c: 66:   uint8_t cmd;;lcd.c: 67:   RC0 = 1;
  9028     1494  1283               	bcf	3,5	;RP0=0, select bank0
  9029     1495  1303               	bcf	3,6	;RP1=0, select bank0
  9030     1496  1407               	bsf	7,0	;volatile
  9031                           
  9032                           ;lcd.c: 69:   while (*str) {
  9033     1497  2CB2               	goto	i1l7875
  9034     1498                     i1l7869:
  9035                           
  9036                           ;lcd.c: 92:         cmd = *str;
  9037     1498  0874               	movf	i1lcd_puts@str+1,w
  9038     1499  00FF               	movwf	btemp+1
  9039     149A  0873               	movf	i1lcd_puts@str,w
  9040     149B  0084               	movwf	4
  9041     149C  120A  118A  2700  160A  118A  	fcall	stringtab
  9042     14A1  00F5               	movwf	i1lcd_puts@cmd
  9043     14A2                     i1l102:	
  9044                           ;lcd.c: 95:         }
  9045                           
  9046                           
  9047                           ;lcd.c: 93:         while (!TXIF) {
  9048     14A2  1E0C               	btfss	12,4	;volatile
  9049     14A3  2CA5               	goto	u783_21
  9050     14A4  2CA6               	goto	u783_20
  9051     14A5                     u783_21:
  9052     14A5  2CA2               	goto	i1l102
  9053     14A6                     u783_20:
  9054     14A6                     i1l7871:
  9055                           
  9056                           ;lcd.c: 96:         TXREG = cmd;
  9057     14A6  0875               	movf	i1lcd_puts@cmd,w
  9058     14A7  0099               	movwf	25	;volatile
  9059     14A8                     i1l105:	
  9060                           ;lcd.c: 100:         }
  9061                           
  9062                           
  9063                           ;lcd.c: 98:         while (!TXIF) {
  9064     14A8  1E0C               	btfss	12,4	;volatile
  9065     14A9  2CAB               	goto	u784_21
  9066     14AA  2CAC               	goto	u784_20
  9067     14AB                     u784_21:
  9068     14AB  2CA8               	goto	i1l105
  9069     14AC                     u784_20:
  9070     14AC                     i1l7873:
  9071                           
  9072                           ;lcd.c: 115:     str++;
  9073     14AC  3001               	movlw	1
  9074     14AD  07F3               	addwf	i1lcd_puts@str,f
  9075     14AE  1803               	skipnc
  9076     14AF  0AF4               	incf	i1lcd_puts@str+1,f
  9077     14B0  3000               	movlw	0
  9078     14B1  07F4               	addwf	i1lcd_puts@str+1,f
  9079     14B2                     i1l7875:
  9080                           
  9081                           ;lcd.c: 69:   while (*str) {
  9082     14B2  0874               	movf	i1lcd_puts@str+1,w
  9083     14B3  00FF               	movwf	btemp+1
  9084     14B4  0873               	movf	i1lcd_puts@str,w
  9085     14B5  0084               	movwf	4
  9086     14B6  120A  118A  2700  160A  118A  	fcall	stringtab
  9087     14BB  3A00               	xorlw	0
  9088     14BC  1D03               	skipz
  9089     14BD  2CBF               	goto	u785_21
  9090     14BE  2CC0               	goto	u785_20
  9091     14BF                     u785_21:
  9092     14BF  2C98               	goto	i1l7869
  9093     14C0                     u785_20:
  9094     14C0                     i1l109:
  9095     14C0  0008               	return
  9096     14C1                     __end_ofi1_lcd_puts:
  9097                           
  9098                           	psect	text39
  9099     14EE                     __ptext39:	
  9100 ;; *************** function i1_lcd_goto *****************
  9101 ;; Defined at:
  9102 ;;		line 47 in file "lcd.c"
  9103 ;; Parameters:    Size  Location     Type
  9104 ;;  y               1    wreg     unsigned char 
  9105 ;;  x               1    2[COMMON] unsigned char 
  9106 ;; Auto vars:     Size  Location     Type
  9107 ;;  y               1    5[COMMON] unsigned char 
  9108 ;; Return value:  Size  Location     Type
  9109 ;;                  1    wreg      void 
  9110 ;; Registers used:
  9111 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9112 ;; Tracked objects:
  9113 ;;		On entry : 0/0
  9114 ;;		On exit  : 0/0
  9115 ;;		Unchanged: 0/0
  9116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9117 ;;      Params:         1       0       0       0       0
  9118 ;;      Locals:         1       0       0       0       0
  9119 ;;      Temps:          2       0       0       0       0
  9120 ;;      Totals:         4       0       0       0       0
  9121 ;;Total ram usage:        4 bytes
  9122 ;; Hardware stack levels used: 1
  9123 ;; Hardware stack levels required when called: 1
  9124 ;; This function calls:
  9125 ;;		i1_lcd_write
  9126 ;; This function is called by:
  9127 ;;		_adcon_mostra
  9128 ;;		_estado_executa_muda
  9129 ;; This function uses a non-reentrant model
  9130 ;;
  9131                           
  9132     14EE                     i1_lcd_goto:	
  9133                           ;psect for function i1_lcd_goto
  9134                           
  9135                           
  9136                           ;incstack = 0
  9137 ;; hardware stack exceeded
  9138                           ; Regs used in i1_lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9139                           ;i1lcd_goto@y stored from wreg
  9140     14EE  00F5               	movwf	i1lcd_goto@y
  9141     14EF                     i1l7849:
  9142                           
  9143                           ;lcd.c: 48:     RC0 = 0;
  9144     14EF  1283               	bcf	3,5	;RP0=0, select bank0
  9145     14F0  1303               	bcf	3,6	;RP1=0, select bank0
  9146     14F1  1007               	bcf	7,0	;volatile
  9147                           
  9148                           ;lcd.c: 49:     switch (y) {
  9149     14F2  2D01               	goto	i1l7857
  9150     14F3                     i1l7851:
  9151                           
  9152                           ;lcd.c: 51:             lcd_write(8);
  9153     14F3  3008               	movlw	8
  9154     14F4  160A  118A  246A  160A  118A  	fcall	i1_lcd_write
  9155                           
  9156                           ;lcd.c: 52:             break;
  9157     14F9  2D11               	goto	i1l7859
  9158     14FA                     i1l7853:
  9159                           
  9160                           ;lcd.c: 54:             lcd_write(0xc);
  9161     14FA  300C               	movlw	12
  9162     14FB  160A  118A  246A  160A  118A  	fcall	i1_lcd_write
  9163                           
  9164                           ;lcd.c: 55:             break;
  9165     1500  2D11               	goto	i1l7859
  9166     1501                     i1l7857:
  9167     1501  0875               	movf	i1lcd_goto@y,w
  9168     1502  00F3               	movwf	??i1_lcd_goto
  9169     1503  01F4               	clrf	??i1_lcd_goto+1
  9170                           
  9171                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9172                           ; Switch size 1, requested type "simple"
  9173                           ; Number of cases is 1, Range of values is 0 to 0
  9174                           ; switch strategies available:
  9175                           ; Name         Instructions Cycles
  9176                           ; simple_byte            4     3 (average)
  9177                           ; direct_byte           11     8 (fixed)
  9178                           ; jumptable            260     6 (fixed)
  9179                           ;	Chosen strategy is simple_byte
  9180     1504  0874               	movf	??i1_lcd_goto+1,w
  9181     1505  3A00               	xorlw	0	; case 0
  9182     1506  1903               	skipnz
  9183     1507  2D09               	goto	i1l8865
  9184     1508  2D11               	goto	i1l7859
  9185     1509                     i1l8865:
  9186                           
  9187                           ; Switch size 1, requested type "simple"
  9188                           ; Number of cases is 2, Range of values is 1 to 2
  9189                           ; switch strategies available:
  9190                           ; Name         Instructions Cycles
  9191                           ; simple_byte            7     4 (average)
  9192                           ; direct_byte           17    11 (fixed)
  9193                           ; jumptable            263     9 (fixed)
  9194                           ;	Chosen strategy is simple_byte
  9195     1509  0873               	movf	??i1_lcd_goto,w
  9196     150A  3A01               	xorlw	1	; case 1
  9197     150B  1903               	skipnz
  9198     150C  2CF3               	goto	i1l7851
  9199     150D  3A03               	xorlw	3	; case 2
  9200     150E  1903               	skipnz
  9201     150F  2CFA               	goto	i1l7853
  9202     1510  2D11               	goto	i1l7859
  9203     1511                     i1l7859:
  9204                           
  9205                           ;lcd.c: 57:     lcd_write(x);
  9206     1511  0872               	movf	i1lcd_goto@x,w
  9207     1512  160A  118A  246A  160A  118A  	fcall	i1_lcd_write
  9208     1517                     i1l7861:
  9209                           
  9210                           ;lcd.c: 58:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  9211     1517  300D               	movlw	13
  9212     1518  00F3               	movwf	??i1_lcd_goto
  9213     1519                     u861_27:
  9214     1519  0BF3               	decfsz	??i1_lcd_goto,f
  9215     151A  2D19               	goto	u861_27
  9216     151B                     i1l97:
  9217     151B  0008               	return
  9218     151C                     __end_ofi1_lcd_goto:
  9219                           
  9220                           	psect	text40
  9221     146A                     __ptext40:	
  9222 ;; *************** function i1_lcd_write *****************
  9223 ;; Defined at:
  9224 ;;		line 14 in file "lcd.c"
  9225 ;; Parameters:    Size  Location     Type
  9226 ;;  c               1    wreg     unsigned char 
  9227 ;; Auto vars:     Size  Location     Type
  9228 ;;  c               1    1[COMMON] unsigned char 
  9229 ;; Return value:  Size  Location     Type
  9230 ;;                  1    wreg      void 
  9231 ;; Registers used:
  9232 ;;		wreg
  9233 ;; Tracked objects:
  9234 ;;		On entry : 0/0
  9235 ;;		On exit  : 0/0
  9236 ;;		Unchanged: 0/0
  9237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9238 ;;      Params:         0       0       0       0       0
  9239 ;;      Locals:         1       0       0       0       0
  9240 ;;      Temps:          1       0       0       0       0
  9241 ;;      Totals:         2       0       0       0       0
  9242 ;;Total ram usage:        2 bytes
  9243 ;; Hardware stack levels used: 1
  9244 ;; This function calls:
  9245 ;;		Nothing
  9246 ;; This function is called by:
  9247 ;;		_lcd_clear
  9248 ;;		i1_lcd_goto
  9249 ;; This function uses a non-reentrant model
  9250 ;;
  9251                           
  9252     146A                     i1_lcd_write:	
  9253                           ;psect for function i1_lcd_write
  9254                           
  9255                           
  9256                           ;incstack = 0
  9257 ;; hardware stack exceeded
  9258                           ; Regs used in i1_lcd_write: [wreg]
  9259                           ;i1lcd_write@c stored from wreg
  9260     146A  00F1               	movwf	i1lcd_write@c
  9261     146B                     i1l7687:
  9262                           
  9263                           ;lcd.c: 15:     if (c & 0b00000001) {
  9264     146B  1C71               	btfss	i1lcd_write@c,0
  9265     146C  2C6E               	goto	u762_21
  9266     146D  2C6F               	goto	u762_20
  9267     146E                     u762_21:
  9268     146E  2C73               	goto	i1l79
  9269     146F                     u762_20:
  9270     146F                     i1l7689:
  9271                           
  9272                           ;lcd.c: 16:         RC2 = 1;
  9273     146F  1283               	bcf	3,5	;RP0=0, select bank0
  9274     1470  1303               	bcf	3,6	;RP1=0, select bank0
  9275     1471  1507               	bsf	7,2	;volatile
  9276                           
  9277                           ;lcd.c: 17:     } else {
  9278     1472  2C76               	goto	i1l80
  9279     1473                     i1l79:
  9280                           
  9281                           ;lcd.c: 18:         RC2 = 0;
  9282     1473  1283               	bcf	3,5	;RP0=0, select bank0
  9283     1474  1303               	bcf	3,6	;RP1=0, select bank0
  9284     1475  1107               	bcf	7,2	;volatile
  9285     1476                     i1l80:	
  9286                           ;lcd.c: 19:     }
  9287                           
  9288                           
  9289                           ;lcd.c: 20:     if (c & 0b00000010) {
  9290     1476  1CF1               	btfss	i1lcd_write@c,1
  9291     1477  2C79               	goto	u763_21
  9292     1478  2C7A               	goto	u763_20
  9293     1479                     u763_21:
  9294     1479  2C7C               	goto	i1l81
  9295     147A                     u763_20:
  9296     147A                     i1l7691:
  9297                           
  9298                           ;lcd.c: 21:         RB2 = 1;
  9299     147A  1506               	bsf	6,2	;volatile
  9300                           
  9301                           ;lcd.c: 22:     } else {
  9302     147B  2C7D               	goto	i1l82
  9303     147C                     i1l81:
  9304                           
  9305                           ;lcd.c: 23:         RB2 = 0;
  9306     147C  1106               	bcf	6,2	;volatile
  9307     147D                     i1l82:	
  9308                           ;lcd.c: 24:     }
  9309                           
  9310                           
  9311                           ;lcd.c: 25:     if (c & 0b00000100) {
  9312     147D  1D71               	btfss	i1lcd_write@c,2
  9313     147E  2C80               	goto	u764_21
  9314     147F  2C81               	goto	u764_20
  9315     1480                     u764_21:
  9316     1480  2C83               	goto	i1l83
  9317     1481                     u764_20:
  9318     1481                     i1l7693:
  9319                           
  9320                           ;lcd.c: 26:         RB1 = 1;
  9321     1481  1486               	bsf	6,1	;volatile
  9322                           
  9323                           ;lcd.c: 27:     } else {
  9324     1482  2C84               	goto	i1l84
  9325     1483                     i1l83:
  9326                           
  9327                           ;lcd.c: 28:         RB1 = 0;
  9328     1483  1086               	bcf	6,1	;volatile
  9329     1484                     i1l84:	
  9330                           ;lcd.c: 29:     }
  9331                           
  9332                           
  9333                           ;lcd.c: 30:     if (c & 0b00001000) {
  9334     1484  1DF1               	btfss	i1lcd_write@c,3
  9335     1485  2C87               	goto	u765_21
  9336     1486  2C88               	goto	u765_20
  9337     1487                     u765_21:
  9338     1487  2C8A               	goto	i1l85
  9339     1488                     u765_20:
  9340     1488                     i1l7695:
  9341                           
  9342                           ;lcd.c: 31:         RB0 = 1;
  9343     1488  1406               	bsf	6,0	;volatile
  9344                           
  9345                           ;lcd.c: 32:     } else {
  9346     1489  2C8B               	goto	i1l7697
  9347     148A                     i1l85:
  9348                           
  9349                           ;lcd.c: 33:         RB0 = 0;
  9350     148A  1006               	bcf	6,0	;volatile
  9351     148B                     i1l7697:
  9352                           
  9353                           ;lcd.c: 35:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  9354     148B  300D               	movlw	13
  9355     148C  00F0               	movwf	??i1_lcd_write
  9356     148D                     u862_27:
  9357     148D  0BF0               	decfsz	??i1_lcd_write,f
  9358     148E  2C8D               	goto	u862_27
  9359     148F                     i1l7699:
  9360                           
  9361                           ;lcd.c: 36:     RC1 = 1;
  9362     148F  1283               	bcf	3,5	;RP0=0, select bank0
  9363     1490  1303               	bcf	3,6	;RP1=0, select bank0
  9364     1491  1487               	bsf	7,1	;volatile
  9365     1492                     i1l7701:
  9366                           
  9367                           ;lcd.c: 37:     RC1 = 0;
  9368     1492  1087               	bcf	7,1	;volatile
  9369     1493                     i1l87:
  9370     1493  0008               	return
  9371     1494                     __end_ofi1_lcd_write:
  9372                           
  9373                           	psect	text41
  9374     13AB                     __ptext41:	
  9375 ;; *************** function _sprintf *****************
  9376 ;; Defined at:
  9377 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprintf.c"
  9378 ;; Parameters:    Size  Location     Type
  9379 ;;  wh              1    wreg     PTR unsigned char 
  9380 ;;		 -> estado_executa_muda@tmp(17), mq_mostra@temp_str(16), adcon_mostra@temp_str(9), 
  9381 ;;  f               2   15[BANK0 ] PTR const unsigned char 
  9382 ;;		 -> STR_46(10), STR_45(10), STR_43(9), STR_22(7), 
  9383 ;;		 -> STR_17(9), 
  9384 ;; Auto vars:     Size  Location     Type
  9385 ;;  wh              1   23[BANK0 ] PTR unsigned char 
  9386 ;;		 -> estado_executa_muda@tmp(17), mq_mostra@temp_str(16), adcon_mostra@temp_str(9), 
  9387 ;;  pb              2   26[BANK0 ] struct __prbuf
  9388 ;;  ap              2   24[BANK0 ] PTR void [1]
  9389 ;;		 -> ?_sprintf(2), ?_printf(2), 
  9390 ;; Return value:  Size  Location     Type
  9391 ;;                  2   15[BANK0 ] int 
  9392 ;; Registers used:
  9393 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9394 ;; Tracked objects:
  9395 ;;		On entry : 0/0
  9396 ;;		On exit  : 0/0
  9397 ;;		Unchanged: 0/0
  9398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9399 ;;      Params:         0       8       0       0       0
  9400 ;;      Locals:         0       5       0       0       0
  9401 ;;      Temps:          0       0       0       0       0
  9402 ;;      Totals:         0      13       0       0       0
  9403 ;;Total ram usage:       13 bytes
  9404 ;; Hardware stack levels used: 1
  9405 ;; Hardware stack levels required when called: 2
  9406 ;; This function calls:
  9407 ;;		i1__doprnt
  9408 ;; This function is called by:
  9409 ;;		_adcon_mostra
  9410 ;;		_estado_executa_muda
  9411 ;;		_mq_mostra
  9412 ;; This function uses a non-reentrant model
  9413 ;;
  9414                           
  9415     13AB                     _sprintf:	
  9416                           ;psect for function _sprintf
  9417                           
  9418                           
  9419                           ;incstack = 0
  9420 ;; hardware stack exceeded
  9421                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9422                           ;sprintf@wh stored from wreg
  9423     13AB  1283               	bcf	3,5	;RP0=0, select bank0
  9424     13AC  1303               	bcf	3,6	;RP1=0, select bank0
  9425     13AD  00B7               	movwf	sprintf@wh
  9426     13AE                     i1l7821:
  9427     13AE  0837               	movf	sprintf@wh,w
  9428     13AF  00BA               	movwf	sprintf@pb
  9429     13B0                     i1l7823:
  9430     13B0  01BB               	clrf	low ((sprintf@pb| 0+1))
  9431     13B1                     i1l7825:
  9432     13B1  3031               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  9433     13B2  00B8               	movwf	sprintf@ap
  9434     13B3  3000               	movlw	0
  9435     13B4  00B9               	movwf	sprintf@ap+1
  9436     13B5                     i1l7827:
  9437     13B5  303A               	movlw	(low (sprintf@pb| 0))& (0+255)
  9438     13B6  00A0               	movwf	i1__doprnt@pb
  9439     13B7  3000               	movlw	0
  9440     13B8  00A1               	movwf	i1__doprnt@pb+1
  9441     13B9  082F               	movf	sprintf@f,w
  9442     13BA  00A2               	movwf	i1__doprnt@f
  9443     13BB  0830               	movf	sprintf@f+1,w
  9444     13BC  00A3               	movwf	i1__doprnt@f+1
  9445     13BD  3038               	movlw	(low (sprintf@ap| 0))& (0+255)
  9446     13BE  00A4               	movwf	i1__doprnt@ap
  9447     13BF  3000               	movlw	0
  9448     13C0  00A5               	movwf	i1__doprnt@ap+1
  9449     13C1  120A  118A  2534  160A  118A  	fcall	i1__doprnt
  9450     13C6                     i1l7829:
  9451     13C6  1283               	bcf	3,5	;RP0=0, select bank0
  9452     13C7  1303               	bcf	3,6	;RP1=0, select bank0
  9453     13C8  083A               	movf	sprintf@pb,w
  9454     13C9  0084               	movwf	4
  9455     13CA  1383               	bcf	3,7	;select IRP bank0
  9456     13CB  0180               	clrf	0
  9457     13CC                     i1l1265:
  9458     13CC  0008               	return
  9459     13CD                     __end_of_sprintf:
  9460                           
  9461                           	psect	text42
  9462     0534                     __ptext42:	
  9463 ;; *************** function i1__doprnt *****************
  9464 ;; Defined at:
  9465 ;;		line 471 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  9466 ;; Parameters:    Size  Location     Type
  9467 ;;  pb              2    0[BANK0 ] PTR struct __prbuf
  9468 ;;		 -> sprintf@pb(2), printf@pb(2), 
  9469 ;;  f               2    2[BANK0 ] PTR const unsigned char 
  9470 ;;		 -> STR_46(10), STR_45(10), STR_43(9), STR_22(7), 
  9471 ;;		 -> STR_17(9), STR_1(6), 
  9472 ;;  ap              2    4[BANK0 ] PTR PTR void 
  9473 ;;		 -> sprintf@ap(2), printf@ap(2), 
  9474 ;; Auto vars:     Size  Location     Type
  9475 ;;  tmpval          4    0        struct .
  9476 ;;  val             2   12[BANK0 ] unsigned int 
  9477 ;;  cp              2    0        PTR const unsigned char 
  9478 ;;  len             2    0        unsigned int 
  9479 ;;  c               1   14[BANK0 ] unsigned char 
  9480 ;;  flag            1   11[BANK0 ] unsigned char 
  9481 ;;  prec            1   10[BANK0 ] char 
  9482 ;; Return value:  Size  Location     Type
  9483 ;;                  2    0[BANK0 ] int 
  9484 ;; Registers used:
  9485 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9486 ;; Tracked objects:
  9487 ;;		On entry : 0/0
  9488 ;;		On exit  : 0/0
  9489 ;;		Unchanged: 0/0
  9490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9491 ;;      Params:         0       6       0       0       0
  9492 ;;      Locals:         0       5       0       0       0
  9493 ;;      Temps:          0       4       0       0       0
  9494 ;;      Totals:         0      15       0       0       0
  9495 ;;Total ram usage:       15 bytes
  9496 ;; Hardware stack levels used: 1
  9497 ;; Hardware stack levels required when called: 1
  9498 ;; This function calls:
  9499 ;;		NULL
  9500 ;;		i1___lwdiv
  9501 ;;		i1___lwmod
  9502 ;;		i1_putch
  9503 ;; This function is called by:
  9504 ;;		_sprintf
  9505 ;; This function uses a non-reentrant model
  9506 ;;
  9507                           
  9508     0534                     i1__doprnt:	
  9509                           ;psect for function i1__doprnt
  9510                           
  9511     0534                     i1l7727:	
  9512                           ;incstack = 0
  9513 ;; hardware stack exceeded
  9514                           ; Regs used in i1__doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9515                           
  9516                           
  9517                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 471: _doprnt(stru
      +                          ct __prbuf * pb, register const char * f, register va_list ap);C:\Program Files\Microchi
      +                          p\xc8\v2.41\pic\sources\c90\common\doprnt.c: 472: {;C:\Program Files\Microchip\xc8\v2.41
      +                          \pic\sources\c90\common\doprnt.c: 512:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files\Microchip\xc8\v2.
      +                          41\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;;C:\Program Files\Microchip
      +                          \xc8\v2.41\pic\sources\c90\common\doprnt.c: 543:  } tmpval;
  9518     0534  2ECF               	goto	i1l7793
  9519     0535                     i1l7729:
  9520                           
  9521                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  9522     0535  3025               	movlw	37
  9523     0536  062E               	xorwf	i1__doprnt@c,w
  9524     0537  1903               	btfsc	3,2
  9525     0538  2D3A               	goto	u770_21
  9526     0539  2D3B               	goto	u770_20
  9527     053A                     u770_21:
  9528     053A  2D77               	goto	i1l7739
  9529     053B                     u770_20:
  9530     053B                     i1l7731:
  9531     053B  0820               	movf	i1__doprnt@pb,w
  9532     053C  3E01               	addlw	1
  9533     053D  00A6               	movwf	??i1__doprnt
  9534     053E  0821               	movf	i1__doprnt@pb+1,w
  9535     053F  1803               	skipnc
  9536     0540  3E01               	addlw	1
  9537     0541  3E00               	addlw	0
  9538     0542  00A7               	movwf	??i1__doprnt+1
  9539     0543  0826               	movf	??i1__doprnt,w
  9540     0544  0084               	movwf	4
  9541     0545  1783               	bsf	3,7
  9542     0546  1C27               	btfss	??i1__doprnt+1,0
  9543     0547  1383               	bcf	3,7
  9544     0548  0800               	movf	0,w
  9545     0549  1903               	btfsc	3,2
  9546     054A  2D4C               	goto	u771_21
  9547     054B  2D4D               	goto	u771_20
  9548     054C                     u771_21:
  9549     054C  2D63               	goto	i1l7735
  9550     054D                     u771_20:
  9551     054D                     i1l7733:
  9552     054D  082E               	movf	i1__doprnt@c,w
  9553     054E  00F0               	movwf	i1putch@c
  9554     054F  0820               	movf	i1__doprnt@pb,w
  9555     0550  3E01               	addlw	1
  9556     0551  00A6               	movwf	??i1__doprnt
  9557     0552  0821               	movf	i1__doprnt@pb+1,w
  9558     0553  1803               	skipnc
  9559     0554  3E01               	addlw	1
  9560     0555  3E00               	addlw	0
  9561     0556  00A7               	movwf	??i1__doprnt+1
  9562     0557  0826               	movf	??i1__doprnt,w
  9563     0558  0084               	movwf	4
  9564     0559  1783               	bsf	3,7
  9565     055A  1C27               	btfss	??i1__doprnt+1,0
  9566     055B  1383               	bcf	3,7
  9567     055C  0800               	movf	0,w
  9568     055D  120A  118A  2042  120A  118A  	fcall	i1fptable
  9569     0562  2D34               	goto	i1l7727
  9570     0563                     i1l7735:
  9571     0563  0820               	movf	i1__doprnt@pb,w
  9572     0564  0084               	movwf	4
  9573     0565  1783               	bsf	3,7
  9574     0566  1C21               	btfss	i1__doprnt@pb+1,0
  9575     0567  1383               	bcf	3,7
  9576     0568  0800               	movf	0,w
  9577     0569  0084               	movwf	4
  9578     056A  082E               	movf	i1__doprnt@c,w
  9579     056B  1383               	bcf	3,7	;select IRP bank0
  9580     056C  0080               	movwf	0
  9581     056D                     i1l7737:
  9582     056D  3001               	movlw	1
  9583     056E  00FF               	movwf	btemp+1
  9584     056F  0820               	movf	i1__doprnt@pb,w
  9585     0570  0084               	movwf	4
  9586     0571  1783               	bsf	3,7
  9587     0572  1C21               	btfss	i1__doprnt@pb+1,0
  9588     0573  1383               	bcf	3,7
  9589     0574  087F               	movf	btemp+1,w
  9590     0575  0780               	addwf	0,f
  9591     0576  2D34               	goto	i1l7727
  9592     0577                     i1l7739:
  9593                           
  9594                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  9595     0577  01AB               	clrf	i1__doprnt@flag
  9596                           
  9597                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  9598     0578  2D7B               	goto	i1l7743
  9599     0579                     i1l1235:	
  9600                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 843:   case 'u':
  9601                           
  9602                           
  9603                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          x40;
  9604     0579  172B               	bsf	i1__doprnt@flag,6
  9605                           
  9606                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 845:    break;
  9607     057A  2DA1               	goto	i1l1233
  9608     057B                     i1l7743:
  9609     057B  0823               	movf	i1__doprnt@f+1,w
  9610     057C  00A7               	movwf	??i1__doprnt+1
  9611     057D  0822               	movf	i1__doprnt@f,w
  9612     057E  00A6               	movwf	??i1__doprnt
  9613     057F  0AA2               	incf	i1__doprnt@f,f
  9614     0580  1903               	skipnz
  9615     0581  0AA3               	incf	i1__doprnt@f+1,f
  9616     0582  0827               	movf	??i1__doprnt+1,w
  9617     0583  00FF               	movwf	btemp+1
  9618     0584  0826               	movf	??i1__doprnt,w
  9619     0585  0084               	movwf	4
  9620     0586  120A  118A  2700  120A  118A  	fcall	stringtab
  9621     058B  00AE               	movwf	i1__doprnt@c
  9622     058C  00A8               	movwf	??i1__doprnt+2
  9623     058D  01A9               	clrf	??i1__doprnt+3
  9624                           
  9625                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9626                           ; Switch size 1, requested type "simple"
  9627                           ; Number of cases is 1, Range of values is 0 to 0
  9628                           ; switch strategies available:
  9629                           ; Name         Instructions Cycles
  9630                           ; simple_byte            4     3 (average)
  9631                           ; direct_byte           11     8 (fixed)
  9632                           ; jumptable            260     6 (fixed)
  9633                           ;	Chosen strategy is simple_byte
  9634     058E  0829               	movf	??i1__doprnt+3,w
  9635     058F  3A00               	xorlw	0	; case 0
  9636     0590  1903               	skipnz
  9637     0591  2D93               	goto	i1l8867
  9638     0592  2ECF               	goto	i1l7793
  9639     0593                     i1l8867:
  9640                           
  9641                           ; Switch size 1, requested type "simple"
  9642                           ; Number of cases is 4, Range of values is 0 to 117
  9643                           ; switch strategies available:
  9644                           ; Name         Instructions Cycles
  9645                           ; simple_byte           13     7 (average)
  9646                           ; jumptable            260     6 (fixed)
  9647                           ;	Chosen strategy is simple_byte
  9648     0593  0828               	movf	??i1__doprnt+2,w
  9649     0594  3A00               	xorlw	0	; case 0
  9650     0595  1903               	skipnz
  9651     0596  2EE7               	goto	i1l1255
  9652     0597  3A64               	xorlw	100	; case 100
  9653     0598  1903               	skipnz
  9654     0599  2DA1               	goto	i1l1233
  9655     059A  3A0D               	xorlw	13	; case 105
  9656     059B  1903               	skipnz
  9657     059C  2DA1               	goto	i1l1233
  9658     059D  3A1C               	xorlw	28	; case 117
  9659     059E  1903               	skipnz
  9660     059F  2D79               	goto	i1l1235
  9661     05A0  2ECF               	goto	i1l7793
  9662     05A1                     i1l1233:
  9663                           
  9664                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x40) == 0x00)
  9665     05A1  1B2B               	btfsc	i1__doprnt@flag,6
  9666     05A2  2DA4               	goto	u772_21
  9667     05A3  2DA5               	goto	u772_20
  9668     05A4                     u772_21:
  9669     05A4  2DCD               	goto	i1l7753
  9670     05A5                     u772_20:
  9671     05A5                     i1l7745:
  9672                           
  9673                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  9674     05A5  0824               	movf	i1__doprnt@ap,w
  9675     05A6  0084               	movwf	4
  9676     05A7  1783               	bsf	3,7
  9677     05A8  1C25               	btfss	i1__doprnt@ap+1,0
  9678     05A9  1383               	bcf	3,7
  9679     05AA  0800               	movf	0,w
  9680     05AB  00A6               	movwf	??i1__doprnt
  9681     05AC  3002               	movlw	2
  9682     05AD  0780               	addwf	0,f
  9683     05AE  0A84               	incf	4,f
  9684     05AF  0800               	movf	0,w
  9685     05B0  00A7               	movwf	??i1__doprnt+1
  9686     05B1  3000               	movlw	0
  9687     05B2  1803               	skipnc
  9688     05B3  0A80               	incf	0,f
  9689     05B4  0780               	addwf	0,f
  9690     05B5  0826               	movf	??i1__doprnt,w
  9691     05B6  0084               	movwf	4
  9692     05B7  1783               	bsf	3,7
  9693     05B8  1C27               	btfss	??i1__doprnt+1,0
  9694     05B9  1383               	bcf	3,7
  9695     05BA  0800               	movf	0,w
  9696     05BB  00AC               	movwf	i1__doprnt@val
  9697     05BC  0A84               	incf	4,f
  9698     05BD  0800               	movf	0,w
  9699     05BE  00AD               	movwf	i1__doprnt@val+1
  9700     05BF                     i1l7747:
  9701                           
  9702                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  9703     05BF  1FAD               	btfss	i1__doprnt@val+1,7
  9704     05C0  2DC2               	goto	u773_21
  9705     05C1  2DC3               	goto	u773_20
  9706     05C2                     u773_21:
  9707     05C2  2DE7               	goto	i1l7755
  9708     05C3                     u773_20:
  9709     05C3                     i1l7749:
  9710                           
  9711                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  9712     05C3  3003               	movlw	3
  9713     05C4  00FF               	movwf	btemp+1
  9714     05C5  087F               	movf	btemp+1,w
  9715     05C6  04AB               	iorwf	i1__doprnt@flag,f
  9716     05C7                     i1l7751:
  9717                           
  9718                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  9719     05C7  09AC               	comf	i1__doprnt@val,f
  9720     05C8  09AD               	comf	i1__doprnt@val+1,f
  9721     05C9  0AAC               	incf	i1__doprnt@val,f
  9722     05CA  1903               	skipnz
  9723     05CB  0AAD               	incf	i1__doprnt@val+1,f
  9724     05CC  2DE7               	goto	i1l7755
  9725     05CD                     i1l7753:
  9726                           
  9727                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  9728     05CD  0824               	movf	i1__doprnt@ap,w
  9729     05CE  0084               	movwf	4
  9730     05CF  1783               	bsf	3,7
  9731     05D0  1C25               	btfss	i1__doprnt@ap+1,0
  9732     05D1  1383               	bcf	3,7
  9733     05D2  0800               	movf	0,w
  9734     05D3  00A6               	movwf	??i1__doprnt
  9735     05D4  3002               	movlw	2
  9736     05D5  0780               	addwf	0,f
  9737     05D6  0A84               	incf	4,f
  9738     05D7  0800               	movf	0,w
  9739     05D8  00A7               	movwf	??i1__doprnt+1
  9740     05D9  3000               	movlw	0
  9741     05DA  1803               	skipnc
  9742     05DB  0A80               	incf	0,f
  9743     05DC  0780               	addwf	0,f
  9744     05DD  0826               	movf	??i1__doprnt,w
  9745     05DE  0084               	movwf	4
  9746     05DF  1783               	bsf	3,7
  9747     05E0  1C27               	btfss	??i1__doprnt+1,0
  9748     05E1  1383               	bcf	3,7
  9749     05E2  0800               	movf	0,w
  9750     05E3  00AC               	movwf	i1__doprnt@val
  9751     05E4  0A84               	incf	4,f
  9752     05E5  0800               	movf	0,w
  9753     05E6  00AD               	movwf	i1__doprnt@val+1
  9754     05E7                     i1l7755:
  9755                           
  9756                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  9757     05E7  01AE               	clrf	i1__doprnt@c
  9758     05E8  0AAE               	incf	i1__doprnt@c,f
  9759     05E9                     i1l7761:
  9760                           
  9761                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  9762     05E9  082E               	movf	i1__doprnt@c,w
  9763     05EA  00A6               	movwf	??i1__doprnt
  9764     05EB  0726               	addwf	??i1__doprnt,w
  9765     05EC  3E3A               	addlw	low (_dpowers| (0+32768))
  9766     05ED  0084               	movwf	4
  9767     05EE  3087               	movlw	high (_dpowers| (0+32768))
  9768     05EF  1803               	skipnc
  9769     05F0  3E01               	addlw	1
  9770     05F1  00FF               	movwf	btemp+1
  9771     05F2  120A  118A  2700  120A  118A  	fcall	stringtab
  9772     05F7  00A7               	movwf	??i1__doprnt+1
  9773     05F8  120A  118A  2700  120A  118A  	fcall	stringtab
  9774     05FD  00A8               	movwf	??i1__doprnt+2
  9775     05FE  0828               	movf	??i1__doprnt+2,w
  9776     05FF  022D               	subwf	i1__doprnt@val+1,w
  9777     0600  1D03               	skipz
  9778     0601  2E04               	goto	u774_25
  9779     0602  0827               	movf	??i1__doprnt+1,w
  9780     0603  022C               	subwf	i1__doprnt@val,w
  9781     0604                     u774_25:
  9782     0604  1803               	skipnc
  9783     0605  2E07               	goto	u774_21
  9784     0606  2E08               	goto	u774_20
  9785     0607                     u774_21:
  9786     0607  2E09               	goto	i1l7765
  9787     0608                     u774_20:
  9788     0608  2E13               	goto	i1l7769
  9789     0609                     i1l7765:
  9790     0609  3001               	movlw	1
  9791     060A  00FF               	movwf	btemp+1
  9792     060B  087F               	movf	btemp+1,w
  9793     060C  07AE               	addwf	i1__doprnt@c,f
  9794     060D                     i1l7767:
  9795     060D  3005               	movlw	5
  9796     060E  062E               	xorwf	i1__doprnt@c,w
  9797     060F  1D03               	btfss	3,2
  9798     0610  2E12               	goto	u775_21
  9799     0611  2E13               	goto	u775_20
  9800     0612                     u775_21:
  9801     0612  2DE9               	goto	i1l7761
  9802     0613                     u775_20:
  9803     0613                     i1l7769:
  9804                           
  9805                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  9806     0613  082B               	movf	i1__doprnt@flag,w
  9807     0614  3903               	andlw	3
  9808     0615  1903               	btfsc	3,2
  9809     0616  2E18               	goto	u776_21
  9810     0617  2E19               	goto	u776_20
  9811     0618                     u776_21:
  9812     0618  2E54               	goto	i1l7779
  9813     0619                     u776_20:
  9814     0619                     i1l7771:
  9815     0619  0820               	movf	i1__doprnt@pb,w
  9816     061A  3E01               	addlw	1
  9817     061B  00A6               	movwf	??i1__doprnt
  9818     061C  0821               	movf	i1__doprnt@pb+1,w
  9819     061D  1803               	skipnc
  9820     061E  3E01               	addlw	1
  9821     061F  3E00               	addlw	0
  9822     0620  00A7               	movwf	??i1__doprnt+1
  9823     0621  0826               	movf	??i1__doprnt,w
  9824     0622  0084               	movwf	4
  9825     0623  1783               	bsf	3,7
  9826     0624  1C27               	btfss	??i1__doprnt+1,0
  9827     0625  1383               	bcf	3,7
  9828     0626  0800               	movf	0,w
  9829     0627  1903               	btfsc	3,2
  9830     0628  2E2A               	goto	u777_21
  9831     0629  2E2B               	goto	u777_20
  9832     062A                     u777_21:
  9833     062A  2E41               	goto	i1l7775
  9834     062B                     u777_20:
  9835     062B                     i1l7773:
  9836     062B  302D               	movlw	45
  9837     062C  00F0               	movwf	i1putch@c
  9838     062D  0820               	movf	i1__doprnt@pb,w
  9839     062E  3E01               	addlw	1
  9840     062F  00A6               	movwf	??i1__doprnt
  9841     0630  0821               	movf	i1__doprnt@pb+1,w
  9842     0631  1803               	skipnc
  9843     0632  3E01               	addlw	1
  9844     0633  3E00               	addlw	0
  9845     0634  00A7               	movwf	??i1__doprnt+1
  9846     0635  0826               	movf	??i1__doprnt,w
  9847     0636  0084               	movwf	4
  9848     0637  1783               	bsf	3,7
  9849     0638  1C27               	btfss	??i1__doprnt+1,0
  9850     0639  1383               	bcf	3,7
  9851     063A  0800               	movf	0,w
  9852     063B  120A  118A  2042  120A  118A  	fcall	i1fptable
  9853     0640  2E54               	goto	i1l7779
  9854     0641                     i1l7775:
  9855     0641  0820               	movf	i1__doprnt@pb,w
  9856     0642  0084               	movwf	4
  9857     0643  1783               	bsf	3,7
  9858     0644  1C21               	btfss	i1__doprnt@pb+1,0
  9859     0645  1383               	bcf	3,7
  9860     0646  0800               	movf	0,w
  9861     0647  0084               	movwf	4
  9862     0648  302D               	movlw	45
  9863     0649  1383               	bcf	3,7	;select IRP bank0
  9864     064A  0080               	movwf	0
  9865     064B                     i1l7777:
  9866     064B  3001               	movlw	1
  9867     064C  00FF               	movwf	btemp+1
  9868     064D  0820               	movf	i1__doprnt@pb,w
  9869     064E  0084               	movwf	4
  9870     064F  1783               	bsf	3,7
  9871     0650  1C21               	btfss	i1__doprnt@pb+1,0
  9872     0651  1383               	bcf	3,7
  9873     0652  087F               	movf	btemp+1,w
  9874     0653  0780               	addwf	0,f
  9875     0654                     i1l7779:
  9876                           
  9877                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  9878     0654  1283               	bcf	3,5	;RP0=0, select bank0
  9879     0655  1303               	bcf	3,6	;RP1=0, select bank0
  9880     0656  082E               	movf	i1__doprnt@c,w
  9881     0657  00AA               	movwf	i1__doprnt@prec
  9882                           
  9883                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  9884     0658  2EC4               	goto	i1l7791
  9885     0659                     i1l7781:
  9886                           
  9887                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  9888     0659  300A               	movlw	10
  9889     065A  00F7               	movwf	i1___lwmod@divisor
  9890     065B  3000               	movlw	0
  9891     065C  00F8               	movwf	i1___lwmod@divisor+1
  9892     065D  082A               	movf	i1__doprnt@prec,w
  9893     065E  00A6               	movwf	??i1__doprnt
  9894     065F  0726               	addwf	??i1__doprnt,w
  9895     0660  3E3A               	addlw	low (_dpowers| (0+32768))
  9896     0661  0084               	movwf	4
  9897     0662  3087               	movlw	high (_dpowers| (0+32768))
  9898     0663  1803               	skipnc
  9899     0664  3E01               	addlw	1
  9900     0665  00FF               	movwf	btemp+1
  9901     0666  120A  118A  2700  120A  118A  	fcall	stringtab
  9902     066B  00F0               	movwf	i1___lwdiv@divisor
  9903     066C  120A  118A  2700  120A  118A  	fcall	stringtab
  9904     0671  00F1               	movwf	i1___lwdiv@divisor+1
  9905     0672  082D               	movf	i1__doprnt@val+1,w
  9906     0673  00F3               	movwf	i1___lwdiv@dividend+1
  9907     0674  082C               	movf	i1__doprnt@val,w
  9908     0675  00F2               	movwf	i1___lwdiv@dividend
  9909     0676  160A  118A  26DD  120A  118A  	fcall	i1___lwdiv
  9910     067B  0871               	movf	?i1___lwdiv+1,w
  9911     067C  00FA               	movwf	i1___lwmod@dividend+1
  9912     067D  0870               	movf	?i1___lwdiv,w
  9913     067E  00F9               	movwf	i1___lwmod@dividend
  9914     067F  160A  118A  25EB  120A  118A  	fcall	i1___lwmod
  9915     0684  0877               	movf	?i1___lwmod,w
  9916     0685  3E30               	addlw	48
  9917     0686  1283               	bcf	3,5	;RP0=0, select bank0
  9918     0687  1303               	bcf	3,6	;RP1=0, select bank0
  9919     0688  00AE               	movwf	i1__doprnt@c
  9920     0689                     i1l7783:
  9921     0689  0820               	movf	i1__doprnt@pb,w
  9922     068A  3E01               	addlw	1
  9923     068B  00A6               	movwf	??i1__doprnt
  9924     068C  0821               	movf	i1__doprnt@pb+1,w
  9925     068D  1803               	skipnc
  9926     068E  3E01               	addlw	1
  9927     068F  3E00               	addlw	0
  9928     0690  00A7               	movwf	??i1__doprnt+1
  9929     0691  0826               	movf	??i1__doprnt,w
  9930     0692  0084               	movwf	4
  9931     0693  1783               	bsf	3,7
  9932     0694  1C27               	btfss	??i1__doprnt+1,0
  9933     0695  1383               	bcf	3,7
  9934     0696  0800               	movf	0,w
  9935     0697  1903               	btfsc	3,2
  9936     0698  2E9A               	goto	u778_21
  9937     0699  2E9B               	goto	u778_20
  9938     069A                     u778_21:
  9939     069A  2EB1               	goto	i1l7787
  9940     069B                     u778_20:
  9941     069B                     i1l7785:
  9942     069B  082E               	movf	i1__doprnt@c,w
  9943     069C  00F0               	movwf	i1putch@c
  9944     069D  0820               	movf	i1__doprnt@pb,w
  9945     069E  3E01               	addlw	1
  9946     069F  00A6               	movwf	??i1__doprnt
  9947     06A0  0821               	movf	i1__doprnt@pb+1,w
  9948     06A1  1803               	skipnc
  9949     06A2  3E01               	addlw	1
  9950     06A3  3E00               	addlw	0
  9951     06A4  00A7               	movwf	??i1__doprnt+1
  9952     06A5  0826               	movf	??i1__doprnt,w
  9953     06A6  0084               	movwf	4
  9954     06A7  1783               	bsf	3,7
  9955     06A8  1C27               	btfss	??i1__doprnt+1,0
  9956     06A9  1383               	bcf	3,7
  9957     06AA  0800               	movf	0,w
  9958     06AB  120A  118A  2042  120A  118A  	fcall	i1fptable
  9959     06B0  2EC4               	goto	i1l7791
  9960     06B1                     i1l7787:
  9961     06B1  0820               	movf	i1__doprnt@pb,w
  9962     06B2  0084               	movwf	4
  9963     06B3  1783               	bsf	3,7
  9964     06B4  1C21               	btfss	i1__doprnt@pb+1,0
  9965     06B5  1383               	bcf	3,7
  9966     06B6  0800               	movf	0,w
  9967     06B7  0084               	movwf	4
  9968     06B8  082E               	movf	i1__doprnt@c,w
  9969     06B9  1383               	bcf	3,7	;select IRP bank0
  9970     06BA  0080               	movwf	0
  9971     06BB                     i1l7789:
  9972     06BB  3001               	movlw	1
  9973     06BC  00FF               	movwf	btemp+1
  9974     06BD  0820               	movf	i1__doprnt@pb,w
  9975     06BE  0084               	movwf	4
  9976     06BF  1783               	bsf	3,7
  9977     06C0  1C21               	btfss	i1__doprnt@pb+1,0
  9978     06C1  1383               	bcf	3,7
  9979     06C2  087F               	movf	btemp+1,w
  9980     06C3  0780               	addwf	0,f
  9981     06C4                     i1l7791:
  9982                           
  9983                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  9984     06C4  30FF               	movlw	255
  9985     06C5  00FF               	movwf	btemp+1
  9986     06C6  087F               	movf	btemp+1,w
  9987     06C7  1283               	bcf	3,5	;RP0=0, select bank0
  9988     06C8  1303               	bcf	3,6	;RP1=0, select bank0
  9989     06C9  07AA               	addwf	i1__doprnt@prec,f
  9990     06CA  0A2A               	incf	i1__doprnt@prec,w
  9991     06CB  1D03               	btfss	3,2
  9992     06CC  2ECE               	goto	u779_21
  9993     06CD  2ECF               	goto	u779_20
  9994     06CE                     u779_21:
  9995     06CE  2E59               	goto	i1l7781
  9996     06CF                     u779_20:
  9997     06CF                     i1l7793:
  9998                           
  9999                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 10000     06CF  1283               	bcf	3,5	;RP0=0, select bank0
 10001     06D0  1303               	bcf	3,6	;RP1=0, select bank0
 10002     06D1  0823               	movf	i1__doprnt@f+1,w
 10003     06D2  00A7               	movwf	??i1__doprnt+1
 10004     06D3  0822               	movf	i1__doprnt@f,w
 10005     06D4  00A6               	movwf	??i1__doprnt
 10006     06D5  0AA2               	incf	i1__doprnt@f,f
 10007     06D6  1903               	skipnz
 10008     06D7  0AA3               	incf	i1__doprnt@f+1,f
 10009     06D8  0827               	movf	??i1__doprnt+1,w
 10010     06D9  00FF               	movwf	btemp+1
 10011     06DA  0826               	movf	??i1__doprnt,w
 10012     06DB  0084               	movwf	4
 10013     06DC  120A  118A  2700  120A  118A  	fcall	stringtab
 10014     06E1  00AE               	movwf	i1__doprnt@c
 10015     06E2  082E               	movf	i1__doprnt@c,w
 10016     06E3  1D03               	btfss	3,2
 10017     06E4  2EE6               	goto	u780_21
 10018     06E5  2EE7               	goto	u780_20
 10019     06E6                     u780_21:
 10020     06E6  2D35               	goto	i1l7729
 10021     06E7                     u780_20:
 10022     06E7                     i1l1255:
 10023     06E7  0008               	return
 10024     06E8                     __end_ofi1__doprnt:
 10025                           
 10026                           	psect	text43
 10027     0003                     __ptext43:	
 10028 ;; *************** function i1_putch *****************
 10029 ;; Defined at:
 10030 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\putch.c"
 10031 ;; Parameters:    Size  Location     Type
 10032 ;;  c               1    0[COMMON] unsigned char 
 10033 ;; Auto vars:     Size  Location     Type
 10034 ;;		None
 10035 ;; Return value:  Size  Location     Type
 10036 ;;                  1    wreg      void 
 10037 ;; Registers used:
 10038 ;;		None
 10039 ;; Tracked objects:
 10040 ;;		On entry : 0/0
 10041 ;;		On exit  : 0/0
 10042 ;;		Unchanged: 0/0
 10043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10044 ;;      Params:         1       0       0       0       0
 10045 ;;      Locals:         0       0       0       0       0
 10046 ;;      Temps:          0       0       0       0       0
 10047 ;;      Totals:         1       0       0       0       0
 10048 ;;Total ram usage:        1 bytes
 10049 ;; Hardware stack levels used: 1
 10050 ;; This function calls:
 10051 ;;		Nothing
 10052 ;; This function is called by:
 10053 ;;		i1__doprnt
 10054 ;;		__doprnt
 10055 ;; This function uses a non-reentrant model
 10056 ;;
 10057                           
 10058     0003                     i1_putch:	
 10059                           ;psect for function i1_putch
 10060                           
 10061     0003                     i1l1258:	
 10062                           ;incstack = 0
 10063 ;; hardware stack exceeded
 10064                           ; Regs used in i1_putch: []
 10065                           
 10066     0003  0008               	return
 10067     0004                     __end_ofi1_putch:
 10068                           
 10069                           	psect	text44
 10070     15EB                     __ptext44:	
 10071 ;; *************** function i1___lwmod *****************
 10072 ;; Defined at:
 10073 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
 10074 ;; Parameters:    Size  Location     Type
 10075 ;;  divisor         2    7[COMMON] unsigned int 
 10076 ;;  dividend        2    9[COMMON] unsigned int 
 10077 ;; Auto vars:     Size  Location     Type
 10078 ;;  counter         1   11[COMMON] unsigned char 
 10079 ;; Return value:  Size  Location     Type
 10080 ;;                  2    7[COMMON] unsigned int 
 10081 ;; Registers used:
 10082 ;;		wreg, status,2, status,0, btemp+1
 10083 ;; Tracked objects:
 10084 ;;		On entry : 0/0
 10085 ;;		On exit  : 0/0
 10086 ;;		Unchanged: 0/0
 10087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10088 ;;      Params:         4       0       0       0       0
 10089 ;;      Locals:         1       0       0       0       0
 10090 ;;      Temps:          0       0       0       0       0
 10091 ;;      Totals:         5       0       0       0       0
 10092 ;;Total ram usage:        5 bytes
 10093 ;; Hardware stack levels used: 1
 10094 ;; This function calls:
 10095 ;;		Nothing
 10096 ;; This function is called by:
 10097 ;;		_estado_executa_muda
 10098 ;;		i1__doprnt
 10099 ;; This function uses a non-reentrant model
 10100 ;;
 10101                           
 10102     15EB                     i1___lwmod:	
 10103                           ;psect for function i1___lwmod
 10104                           
 10105     15EB                     i1l7583:	
 10106                           ;incstack = 0
 10107                           ; Regs used in i1___lwmod: [wreg+status,2+status,0+btemp+1]
 10108                           
 10109     15EB  0877               	movf	i1___lwmod@divisor,w
 10110     15EC  0478               	iorwf	i1___lwmod@divisor+1,w
 10111     15ED  1903               	btfsc	3,2
 10112     15EE  2DF0               	goto	u737_21
 10113     15EF  2DF1               	goto	u737_20
 10114     15F0                     u737_21:
 10115     15F0  2E20               	goto	i1l7601
 10116     15F1                     u737_20:
 10117     15F1                     i1l7585:
 10118     15F1  01FB               	clrf	i1___lwmod@counter
 10119     15F2  0AFB               	incf	i1___lwmod@counter,f
 10120     15F3  2DFF               	goto	i1l7591
 10121     15F4                     i1l7587:
 10122     15F4  3001               	movlw	1
 10123     15F5                     u738_25:
 10124     15F5  1003               	clrc
 10125     15F6  0DF7               	rlf	i1___lwmod@divisor,f
 10126     15F7  0DF8               	rlf	i1___lwmod@divisor+1,f
 10127     15F8  3EFF               	addlw	-1
 10128     15F9  1D03               	skipz
 10129     15FA  2DF5               	goto	u738_25
 10130     15FB                     i1l7589:
 10131     15FB  3001               	movlw	1
 10132     15FC  00FF               	movwf	btemp+1
 10133     15FD  087F               	movf	btemp+1,w
 10134     15FE  07FB               	addwf	i1___lwmod@counter,f
 10135     15FF                     i1l7591:
 10136     15FF  1FF8               	btfss	i1___lwmod@divisor+1,7
 10137     1600  2E02               	goto	u739_21
 10138     1601  2E03               	goto	u739_20
 10139     1602                     u739_21:
 10140     1602  2DF4               	goto	i1l7587
 10141     1603                     u739_20:
 10142     1603                     i1l7593:
 10143     1603  0878               	movf	i1___lwmod@divisor+1,w
 10144     1604  027A               	subwf	i1___lwmod@dividend+1,w
 10145     1605  1D03               	skipz
 10146     1606  2E09               	goto	u740_25
 10147     1607  0877               	movf	i1___lwmod@divisor,w
 10148     1608  0279               	subwf	i1___lwmod@dividend,w
 10149     1609                     u740_25:
 10150     1609  1C03               	skipc
 10151     160A  2E0C               	goto	u740_21
 10152     160B  2E0D               	goto	u740_20
 10153     160C                     u740_21:
 10154     160C  2E13               	goto	i1l7597
 10155     160D                     u740_20:
 10156     160D                     i1l7595:
 10157     160D  0877               	movf	i1___lwmod@divisor,w
 10158     160E  02F9               	subwf	i1___lwmod@dividend,f
 10159     160F  0878               	movf	i1___lwmod@divisor+1,w
 10160     1610  1C03               	skipc
 10161     1611  03FA               	decf	i1___lwmod@dividend+1,f
 10162     1612  02FA               	subwf	i1___lwmod@dividend+1,f
 10163     1613                     i1l7597:
 10164     1613  3001               	movlw	1
 10165     1614                     u741_25:
 10166     1614  1003               	clrc
 10167     1615  0CF8               	rrf	i1___lwmod@divisor+1,f
 10168     1616  0CF7               	rrf	i1___lwmod@divisor,f
 10169     1617  3EFF               	addlw	-1
 10170     1618  1D03               	skipz
 10171     1619  2E14               	goto	u741_25
 10172     161A                     i1l7599:
 10173     161A  3001               	movlw	1
 10174     161B  02FB               	subwf	i1___lwmod@counter,f
 10175     161C  1D03               	btfss	3,2
 10176     161D  2E1F               	goto	u742_21
 10177     161E  2E20               	goto	u742_20
 10178     161F                     u742_21:
 10179     161F  2E03               	goto	i1l7593
 10180     1620                     u742_20:
 10181     1620                     i1l7601:
 10182     1620  087A               	movf	i1___lwmod@dividend+1,w
 10183     1621  00F8               	movwf	?i1___lwmod+1
 10184     1622  0879               	movf	i1___lwmod@dividend,w
 10185     1623  00F7               	movwf	?i1___lwmod
 10186     1624                     i1l953:
 10187     1624  0008               	return
 10188     1625                     __end_ofi1___lwmod:
 10189                           
 10190                           	psect	text45
 10191     16DD                     __ptext45:	
 10192 ;; *************** function i1___lwdiv *****************
 10193 ;; Defined at:
 10194 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
 10195 ;; Parameters:    Size  Location     Type
 10196 ;;  divisor         2    0[COMMON] unsigned int 
 10197 ;;  dividend        2    2[COMMON] unsigned int 
 10198 ;; Auto vars:     Size  Location     Type
 10199 ;;  quotient        2    5[COMMON] unsigned int 
 10200 ;;  counter         1    4[COMMON] unsigned char 
 10201 ;; Return value:  Size  Location     Type
 10202 ;;                  2    0[COMMON] unsigned int 
 10203 ;; Registers used:
 10204 ;;		wreg, status,2, status,0, btemp+1
 10205 ;; Tracked objects:
 10206 ;;		On entry : 0/0
 10207 ;;		On exit  : 0/0
 10208 ;;		Unchanged: 0/0
 10209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10210 ;;      Params:         4       0       0       0       0
 10211 ;;      Locals:         3       0       0       0       0
 10212 ;;      Temps:          0       0       0       0       0
 10213 ;;      Totals:         7       0       0       0       0
 10214 ;;Total ram usage:        7 bytes
 10215 ;; Hardware stack levels used: 1
 10216 ;; This function calls:
 10217 ;;		Nothing
 10218 ;; This function is called by:
 10219 ;;		_estado_executa_muda
 10220 ;;		i1__doprnt
 10221 ;; This function uses a non-reentrant model
 10222 ;;
 10223                           
 10224     16DD                     i1___lwdiv:	
 10225                           ;psect for function i1___lwdiv
 10226                           
 10227     16DD                     i1l7557:	
 10228                           ;incstack = 0
 10229                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0+btemp+1]
 10230                           
 10231     16DD  01F5               	clrf	i1___lwdiv@quotient
 10232     16DE  01F6               	clrf	i1___lwdiv@quotient+1
 10233     16DF                     i1l7559:
 10234     16DF  0870               	movf	i1___lwdiv@divisor,w
 10235     16E0  0471               	iorwf	i1___lwdiv@divisor+1,w
 10236     16E1  1903               	btfsc	3,2
 10237     16E2  2EE4               	goto	u730_21
 10238     16E3  2EE5               	goto	u730_20
 10239     16E4                     u730_21:
 10240     16E4  2F1C               	goto	i1l7579
 10241     16E5                     u730_20:
 10242     16E5                     i1l7561:
 10243     16E5  01F4               	clrf	i1___lwdiv@counter
 10244     16E6  0AF4               	incf	i1___lwdiv@counter,f
 10245     16E7  2EF3               	goto	i1l7567
 10246     16E8                     i1l7563:
 10247     16E8  3001               	movlw	1
 10248     16E9                     u731_25:
 10249     16E9  1003               	clrc
 10250     16EA  0DF0               	rlf	i1___lwdiv@divisor,f
 10251     16EB  0DF1               	rlf	i1___lwdiv@divisor+1,f
 10252     16EC  3EFF               	addlw	-1
 10253     16ED  1D03               	skipz
 10254     16EE  2EE9               	goto	u731_25
 10255     16EF                     i1l7565:
 10256     16EF  3001               	movlw	1
 10257     16F0  00FF               	movwf	btemp+1
 10258     16F1  087F               	movf	btemp+1,w
 10259     16F2  07F4               	addwf	i1___lwdiv@counter,f
 10260     16F3                     i1l7567:
 10261     16F3  1FF1               	btfss	i1___lwdiv@divisor+1,7
 10262     16F4  2EF6               	goto	u732_21
 10263     16F5  2EF7               	goto	u732_20
 10264     16F6                     u732_21:
 10265     16F6  2EE8               	goto	i1l7563
 10266     16F7                     u732_20:
 10267     16F7                     i1l7569:
 10268     16F7  3001               	movlw	1
 10269     16F8                     u733_25:
 10270     16F8  1003               	clrc
 10271     16F9  0DF5               	rlf	i1___lwdiv@quotient,f
 10272     16FA  0DF6               	rlf	i1___lwdiv@quotient+1,f
 10273     16FB  3EFF               	addlw	-1
 10274     16FC  1D03               	skipz
 10275     16FD  2EF8               	goto	u733_25
 10276     16FE  0871               	movf	i1___lwdiv@divisor+1,w
 10277     16FF  0273               	subwf	i1___lwdiv@dividend+1,w
 10278     1700  1D03               	skipz
 10279     1701  2F04               	goto	u734_25
 10280     1702  0870               	movf	i1___lwdiv@divisor,w
 10281     1703  0272               	subwf	i1___lwdiv@dividend,w
 10282     1704                     u734_25:
 10283     1704  1C03               	skipc
 10284     1705  2F07               	goto	u734_21
 10285     1706  2F08               	goto	u734_20
 10286     1707                     u734_21:
 10287     1707  2F0F               	goto	i1l7575
 10288     1708                     u734_20:
 10289     1708                     i1l7571:
 10290     1708  0870               	movf	i1___lwdiv@divisor,w
 10291     1709  02F2               	subwf	i1___lwdiv@dividend,f
 10292     170A  0871               	movf	i1___lwdiv@divisor+1,w
 10293     170B  1C03               	skipc
 10294     170C  03F3               	decf	i1___lwdiv@dividend+1,f
 10295     170D  02F3               	subwf	i1___lwdiv@dividend+1,f
 10296     170E                     i1l7573:
 10297     170E  1475               	bsf	i1___lwdiv@quotient,0
 10298     170F                     i1l7575:
 10299     170F  3001               	movlw	1
 10300     1710                     u735_25:
 10301     1710  1003               	clrc
 10302     1711  0CF1               	rrf	i1___lwdiv@divisor+1,f
 10303     1712  0CF0               	rrf	i1___lwdiv@divisor,f
 10304     1713  3EFF               	addlw	-1
 10305     1714  1D03               	skipz
 10306     1715  2F10               	goto	u735_25
 10307     1716                     i1l7577:
 10308     1716  3001               	movlw	1
 10309     1717  02F4               	subwf	i1___lwdiv@counter,f
 10310     1718  1D03               	btfss	3,2
 10311     1719  2F1B               	goto	u736_21
 10312     171A  2F1C               	goto	u736_20
 10313     171B                     u736_21:
 10314     171B  2EF7               	goto	i1l7569
 10315     171C                     u736_20:
 10316     171C                     i1l7579:
 10317     171C  0876               	movf	i1___lwdiv@quotient+1,w
 10318     171D  00F1               	movwf	?i1___lwdiv+1
 10319     171E  0875               	movf	i1___lwdiv@quotient,w
 10320     171F  00F0               	movwf	?i1___lwdiv
 10321     1720                     i1l943:
 10322     1720  0008               	return
 10323     1721                     __end_ofi1___lwdiv:
 10324                           
 10325                           	psect	text46
 10326     151C                     __ptext46:	
 10327 ;; *************** function _div *****************
 10328 ;; Defined at:
 10329 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\cdiv.c"
 10330 ;; Parameters:    Size  Location     Type
 10331 ;;  number          2    8[COMMON] int 
 10332 ;;  denom           2   10[COMMON] int 
 10333 ;; Auto vars:     Size  Location     Type
 10334 ;;  rv              4    0[BANK0 ] struct .
 10335 ;; Return value:  Size  Location     Type
 10336 ;;                  4    8[COMMON] struct .
 10337 ;; Registers used:
 10338 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10339 ;; Tracked objects:
 10340 ;;		On entry : 0/0
 10341 ;;		On exit  : 0/0
 10342 ;;		Unchanged: 0/0
 10343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10344 ;;      Params:         4       0       0       0       0
 10345 ;;      Locals:         0       4       0       0       0
 10346 ;;      Temps:          0       0       0       0       0
 10347 ;;      Totals:         4       4       0       0       0
 10348 ;;Total ram usage:        8 bytes
 10349 ;; Hardware stack levels used: 1
 10350 ;; Hardware stack levels required when called: 1
 10351 ;; This function calls:
 10352 ;;		___awdiv
 10353 ;;		___awmod
 10354 ;; This function is called by:
 10355 ;;		_adcon_mostra
 10356 ;; This function uses a non-reentrant model
 10357 ;;
 10358                           
 10359     151C                     _div:	
 10360                           ;psect for function _div
 10361                           
 10362     151C                     i1l7815:	
 10363                           ;incstack = 0
 10364 ;; hardware stack exceeded
 10365                           ; Regs used in _div: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10366                           
 10367     151C  087B               	movf	div@denom+1,w
 10368     151D  00F1               	movwf	___awdiv@divisor+1
 10369     151E  087A               	movf	div@denom,w
 10370     151F  00F0               	movwf	___awdiv@divisor
 10371     1520  0879               	movf	div@number+1,w
 10372     1521  00F3               	movwf	___awdiv@dividend+1
 10373     1522  0878               	movf	div@number,w
 10374     1523  00F2               	movwf	___awdiv@dividend
 10375     1524  120A  158A  21CD  160A  118A  	fcall	___awdiv
 10376     1529  0871               	movf	?___awdiv+1,w
 10377     152A  1283               	bcf	3,5	;RP0=0, select bank0
 10378     152B  1303               	bcf	3,6	;RP1=0, select bank0
 10379     152C  00A3               	movwf	div@rv+3
 10380     152D  0870               	movf	?___awdiv,w
 10381     152E  00A2               	movwf	div@rv+2
 10382     152F  087B               	movf	div@denom+1,w
 10383     1530  00F1               	movwf	___awmod@divisor+1
 10384     1531  087A               	movf	div@denom,w
 10385     1532  00F0               	movwf	___awmod@divisor
 10386     1533  0879               	movf	div@number+1,w
 10387     1534  00F3               	movwf	___awmod@dividend+1
 10388     1535  0878               	movf	div@number,w
 10389     1536  00F2               	movwf	___awmod@dividend
 10390     1537  120A  158A  2112  160A  118A  	fcall	___awmod
 10391     153C  0871               	movf	?___awmod+1,w
 10392     153D  1283               	bcf	3,5	;RP0=0, select bank0
 10393     153E  1303               	bcf	3,6	;RP1=0, select bank0
 10394     153F  00A1               	movwf	div@rv+1
 10395     1540  0870               	movf	?___awmod,w
 10396     1541  00A0               	movwf	div@rv
 10397     1542                     i1l7817:
 10398     1542  0823               	movf	div@rv+3,w
 10399     1543  00FB               	movwf	?_div+3
 10400     1544  0822               	movf	div@rv+2,w
 10401     1545  00FA               	movwf	?_div+2
 10402     1546  0821               	movf	div@rv+1,w
 10403     1547  00F9               	movwf	?_div+1
 10404     1548  0820               	movf	div@rv,w
 10405     1549  00F8               	movwf	?_div
 10406     154A                     i1l1122:
 10407     154A  0008               	return
 10408     154B                     __end_of_div:
 10409                           
 10410                           	psect	text47
 10411     0912                     __ptext47:	
 10412 ;; *************** function ___awmod *****************
 10413 ;; Defined at:
 10414 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
 10415 ;; Parameters:    Size  Location     Type
 10416 ;;  divisor         2    0[COMMON] int 
 10417 ;;  dividend        2    2[COMMON] int 
 10418 ;; Auto vars:     Size  Location     Type
 10419 ;;  sign            1    5[COMMON] unsigned char 
 10420 ;;  counter         1    4[COMMON] unsigned char 
 10421 ;; Return value:  Size  Location     Type
 10422 ;;                  2    0[COMMON] int 
 10423 ;; Registers used:
 10424 ;;		wreg, status,2, status,0, btemp+1
 10425 ;; Tracked objects:
 10426 ;;		On entry : 0/0
 10427 ;;		On exit  : 0/0
 10428 ;;		Unchanged: 0/0
 10429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10430 ;;      Params:         4       0       0       0       0
 10431 ;;      Locals:         2       0       0       0       0
 10432 ;;      Temps:          0       0       0       0       0
 10433 ;;      Totals:         6       0       0       0       0
 10434 ;;Total ram usage:        6 bytes
 10435 ;; Hardware stack levels used: 1
 10436 ;; This function calls:
 10437 ;;		Nothing
 10438 ;; This function is called by:
 10439 ;;		_div
 10440 ;; This function uses a non-reentrant model
 10441 ;;
 10442                           
 10443     0912                     ___awmod:	
 10444                           ;psect for function ___awmod
 10445                           
 10446     0912                     i1l7649:	
 10447                           ;incstack = 0
 10448 ;; hardware stack exceeded
 10449                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
 10450                           
 10451     0912  01F5               	clrf	___awmod@sign
 10452     0913                     i1l7651:
 10453     0913  1FF3               	btfss	___awmod@dividend+1,7
 10454     0914  2916               	goto	u753_21
 10455     0915  2917               	goto	u753_20
 10456     0916                     u753_21:
 10457     0916  291E               	goto	i1l7657
 10458     0917                     u753_20:
 10459     0917                     i1l7653:
 10460     0917  09F2               	comf	___awmod@dividend,f
 10461     0918  09F3               	comf	___awmod@dividend+1,f
 10462     0919  0AF2               	incf	___awmod@dividend,f
 10463     091A  1903               	skipnz
 10464     091B  0AF3               	incf	___awmod@dividend+1,f
 10465     091C                     i1l7655:
 10466     091C  01F5               	clrf	___awmod@sign
 10467     091D  0AF5               	incf	___awmod@sign,f
 10468     091E                     i1l7657:
 10469     091E  1FF1               	btfss	___awmod@divisor+1,7
 10470     091F  2921               	goto	u754_21
 10471     0920  2922               	goto	u754_20
 10472     0921                     u754_21:
 10473     0921  2927               	goto	i1l7661
 10474     0922                     u754_20:
 10475     0922                     i1l7659:
 10476     0922  09F0               	comf	___awmod@divisor,f
 10477     0923  09F1               	comf	___awmod@divisor+1,f
 10478     0924  0AF0               	incf	___awmod@divisor,f
 10479     0925  1903               	skipnz
 10480     0926  0AF1               	incf	___awmod@divisor+1,f
 10481     0927                     i1l7661:
 10482     0927  0870               	movf	___awmod@divisor,w
 10483     0928  0471               	iorwf	___awmod@divisor+1,w
 10484     0929  1903               	btfsc	3,2
 10485     092A  292C               	goto	u755_21
 10486     092B  292D               	goto	u755_20
 10487     092C                     u755_21:
 10488     092C  295C               	goto	i1l7679
 10489     092D                     u755_20:
 10490     092D                     i1l7663:
 10491     092D  01F4               	clrf	___awmod@counter
 10492     092E  0AF4               	incf	___awmod@counter,f
 10493     092F  293B               	goto	i1l7669
 10494     0930                     i1l7665:
 10495     0930  3001               	movlw	1
 10496     0931                     u756_25:
 10497     0931  1003               	clrc
 10498     0932  0DF0               	rlf	___awmod@divisor,f
 10499     0933  0DF1               	rlf	___awmod@divisor+1,f
 10500     0934  3EFF               	addlw	-1
 10501     0935  1D03               	skipz
 10502     0936  2931               	goto	u756_25
 10503     0937                     i1l7667:
 10504     0937  3001               	movlw	1
 10505     0938  00FF               	movwf	btemp+1
 10506     0939  087F               	movf	btemp+1,w
 10507     093A  07F4               	addwf	___awmod@counter,f
 10508     093B                     i1l7669:
 10509     093B  1FF1               	btfss	___awmod@divisor+1,7
 10510     093C  293E               	goto	u757_21
 10511     093D  293F               	goto	u757_20
 10512     093E                     u757_21:
 10513     093E  2930               	goto	i1l7665
 10514     093F                     u757_20:
 10515     093F                     i1l7671:
 10516     093F  0871               	movf	___awmod@divisor+1,w
 10517     0940  0273               	subwf	___awmod@dividend+1,w
 10518     0941  1D03               	skipz
 10519     0942  2945               	goto	u758_25
 10520     0943  0870               	movf	___awmod@divisor,w
 10521     0944  0272               	subwf	___awmod@dividend,w
 10522     0945                     u758_25:
 10523     0945  1C03               	skipc
 10524     0946  2948               	goto	u758_21
 10525     0947  2949               	goto	u758_20
 10526     0948                     u758_21:
 10527     0948  294F               	goto	i1l7675
 10528     0949                     u758_20:
 10529     0949                     i1l7673:
 10530     0949  0870               	movf	___awmod@divisor,w
 10531     094A  02F2               	subwf	___awmod@dividend,f
 10532     094B  0871               	movf	___awmod@divisor+1,w
 10533     094C  1C03               	skipc
 10534     094D  03F3               	decf	___awmod@dividend+1,f
 10535     094E  02F3               	subwf	___awmod@dividend+1,f
 10536     094F                     i1l7675:
 10537     094F  3001               	movlw	1
 10538     0950                     u759_25:
 10539     0950  1003               	clrc
 10540     0951  0CF1               	rrf	___awmod@divisor+1,f
 10541     0952  0CF0               	rrf	___awmod@divisor,f
 10542     0953  3EFF               	addlw	-1
 10543     0954  1D03               	skipz
 10544     0955  2950               	goto	u759_25
 10545     0956                     i1l7677:
 10546     0956  3001               	movlw	1
 10547     0957  02F4               	subwf	___awmod@counter,f
 10548     0958  1D03               	btfss	3,2
 10549     0959  295B               	goto	u760_21
 10550     095A  295C               	goto	u760_20
 10551     095B                     u760_21:
 10552     095B  293F               	goto	i1l7671
 10553     095C                     u760_20:
 10554     095C                     i1l7679:
 10555     095C  0875               	movf	___awmod@sign,w
 10556     095D  1903               	btfsc	3,2
 10557     095E  2960               	goto	u761_21
 10558     095F  2961               	goto	u761_20
 10559     0960                     u761_21:
 10560     0960  2966               	goto	i1l7683
 10561     0961                     u761_20:
 10562     0961                     i1l7681:
 10563     0961  09F2               	comf	___awmod@dividend,f
 10564     0962  09F3               	comf	___awmod@dividend+1,f
 10565     0963  0AF2               	incf	___awmod@dividend,f
 10566     0964  1903               	skipnz
 10567     0965  0AF3               	incf	___awmod@dividend+1,f
 10568     0966                     i1l7683:
 10569     0966  0873               	movf	___awmod@dividend+1,w
 10570     0967  00F1               	movwf	?___awmod+1
 10571     0968  0872               	movf	___awmod@dividend,w
 10572     0969  00F0               	movwf	?___awmod
 10573     096A                     i1l837:
 10574     096A  0008               	return
 10575     096B                     __end_of___awmod:
 10576                           
 10577                           	psect	text48
 10578     09CD                     __ptext48:	
 10579 ;; *************** function ___awdiv *****************
 10580 ;; Defined at:
 10581 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
 10582 ;; Parameters:    Size  Location     Type
 10583 ;;  divisor         2    0[COMMON] int 
 10584 ;;  dividend        2    2[COMMON] int 
 10585 ;; Auto vars:     Size  Location     Type
 10586 ;;  quotient        2    6[COMMON] int 
 10587 ;;  sign            1    5[COMMON] unsigned char 
 10588 ;;  counter         1    4[COMMON] unsigned char 
 10589 ;; Return value:  Size  Location     Type
 10590 ;;                  2    0[COMMON] int 
 10591 ;; Registers used:
 10592 ;;		wreg, status,2, status,0, btemp+1
 10593 ;; Tracked objects:
 10594 ;;		On entry : 0/0
 10595 ;;		On exit  : 0/0
 10596 ;;		Unchanged: 0/0
 10597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10598 ;;      Params:         4       0       0       0       0
 10599 ;;      Locals:         4       0       0       0       0
 10600 ;;      Temps:          0       0       0       0       0
 10601 ;;      Totals:         8       0       0       0       0
 10602 ;;Total ram usage:        8 bytes
 10603 ;; Hardware stack levels used: 1
 10604 ;; This function calls:
 10605 ;;		Nothing
 10606 ;; This function is called by:
 10607 ;;		_div
 10608 ;; This function uses a non-reentrant model
 10609 ;;
 10610                           
 10611     09CD                     ___awdiv:	
 10612                           ;psect for function ___awdiv
 10613                           
 10614     09CD                     i1l7605:	
 10615                           ;incstack = 0
 10616 ;; hardware stack exceeded
 10617                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
 10618                           
 10619     09CD  01F5               	clrf	___awdiv@sign
 10620     09CE                     i1l7607:
 10621     09CE  1FF1               	btfss	___awdiv@divisor+1,7
 10622     09CF  29D1               	goto	u743_21
 10623     09D0  29D2               	goto	u743_20
 10624     09D1                     u743_21:
 10625     09D1  29D9               	goto	i1l7613
 10626     09D2                     u743_20:
 10627     09D2                     i1l7609:
 10628     09D2  09F0               	comf	___awdiv@divisor,f
 10629     09D3  09F1               	comf	___awdiv@divisor+1,f
 10630     09D4  0AF0               	incf	___awdiv@divisor,f
 10631     09D5  1903               	skipnz
 10632     09D6  0AF1               	incf	___awdiv@divisor+1,f
 10633     09D7                     i1l7611:
 10634     09D7  01F5               	clrf	___awdiv@sign
 10635     09D8  0AF5               	incf	___awdiv@sign,f
 10636     09D9                     i1l7613:
 10637     09D9  1FF3               	btfss	___awdiv@dividend+1,7
 10638     09DA  29DC               	goto	u744_21
 10639     09DB  29DD               	goto	u744_20
 10640     09DC                     u744_21:
 10641     09DC  29E6               	goto	i1l7619
 10642     09DD                     u744_20:
 10643     09DD                     i1l7615:
 10644     09DD  09F2               	comf	___awdiv@dividend,f
 10645     09DE  09F3               	comf	___awdiv@dividend+1,f
 10646     09DF  0AF2               	incf	___awdiv@dividend,f
 10647     09E0  1903               	skipnz
 10648     09E1  0AF3               	incf	___awdiv@dividend+1,f
 10649     09E2                     i1l7617:
 10650     09E2  3001               	movlw	1
 10651     09E3  00FF               	movwf	btemp+1
 10652     09E4  087F               	movf	btemp+1,w
 10653     09E5  06F5               	xorwf	___awdiv@sign,f
 10654     09E6                     i1l7619:
 10655     09E6  01F6               	clrf	___awdiv@quotient
 10656     09E7  01F7               	clrf	___awdiv@quotient+1
 10657     09E8                     i1l7621:
 10658     09E8  0870               	movf	___awdiv@divisor,w
 10659     09E9  0471               	iorwf	___awdiv@divisor+1,w
 10660     09EA  1903               	btfsc	3,2
 10661     09EB  29ED               	goto	u745_21
 10662     09EC  29EE               	goto	u745_20
 10663     09ED                     u745_21:
 10664     09ED  2A25               	goto	i1l7641
 10665     09EE                     u745_20:
 10666     09EE                     i1l7623:
 10667     09EE  01F4               	clrf	___awdiv@counter
 10668     09EF  0AF4               	incf	___awdiv@counter,f
 10669     09F0  29FC               	goto	i1l7629
 10670     09F1                     i1l7625:
 10671     09F1  3001               	movlw	1
 10672     09F2                     u746_25:
 10673     09F2  1003               	clrc
 10674     09F3  0DF0               	rlf	___awdiv@divisor,f
 10675     09F4  0DF1               	rlf	___awdiv@divisor+1,f
 10676     09F5  3EFF               	addlw	-1
 10677     09F6  1D03               	skipz
 10678     09F7  29F2               	goto	u746_25
 10679     09F8                     i1l7627:
 10680     09F8  3001               	movlw	1
 10681     09F9  00FF               	movwf	btemp+1
 10682     09FA  087F               	movf	btemp+1,w
 10683     09FB  07F4               	addwf	___awdiv@counter,f
 10684     09FC                     i1l7629:
 10685     09FC  1FF1               	btfss	___awdiv@divisor+1,7
 10686     09FD  29FF               	goto	u747_21
 10687     09FE  2A00               	goto	u747_20
 10688     09FF                     u747_21:
 10689     09FF  29F1               	goto	i1l7625
 10690     0A00                     u747_20:
 10691     0A00                     i1l7631:
 10692     0A00  3001               	movlw	1
 10693     0A01                     u748_25:
 10694     0A01  1003               	clrc
 10695     0A02  0DF6               	rlf	___awdiv@quotient,f
 10696     0A03  0DF7               	rlf	___awdiv@quotient+1,f
 10697     0A04  3EFF               	addlw	-1
 10698     0A05  1D03               	skipz
 10699     0A06  2A01               	goto	u748_25
 10700     0A07  0871               	movf	___awdiv@divisor+1,w
 10701     0A08  0273               	subwf	___awdiv@dividend+1,w
 10702     0A09  1D03               	skipz
 10703     0A0A  2A0D               	goto	u749_25
 10704     0A0B  0870               	movf	___awdiv@divisor,w
 10705     0A0C  0272               	subwf	___awdiv@dividend,w
 10706     0A0D                     u749_25:
 10707     0A0D  1C03               	skipc
 10708     0A0E  2A10               	goto	u749_21
 10709     0A0F  2A11               	goto	u749_20
 10710     0A10                     u749_21:
 10711     0A10  2A18               	goto	i1l7637
 10712     0A11                     u749_20:
 10713     0A11                     i1l7633:
 10714     0A11  0870               	movf	___awdiv@divisor,w
 10715     0A12  02F2               	subwf	___awdiv@dividend,f
 10716     0A13  0871               	movf	___awdiv@divisor+1,w
 10717     0A14  1C03               	skipc
 10718     0A15  03F3               	decf	___awdiv@dividend+1,f
 10719     0A16  02F3               	subwf	___awdiv@dividend+1,f
 10720     0A17                     i1l7635:
 10721     0A17  1476               	bsf	___awdiv@quotient,0
 10722     0A18                     i1l7637:
 10723     0A18  3001               	movlw	1
 10724     0A19                     u750_25:
 10725     0A19  1003               	clrc
 10726     0A1A  0CF1               	rrf	___awdiv@divisor+1,f
 10727     0A1B  0CF0               	rrf	___awdiv@divisor,f
 10728     0A1C  3EFF               	addlw	-1
 10729     0A1D  1D03               	skipz
 10730     0A1E  2A19               	goto	u750_25
 10731     0A1F                     i1l7639:
 10732     0A1F  3001               	movlw	1
 10733     0A20  02F4               	subwf	___awdiv@counter,f
 10734     0A21  1D03               	btfss	3,2
 10735     0A22  2A24               	goto	u751_21
 10736     0A23  2A25               	goto	u751_20
 10737     0A24                     u751_21:
 10738     0A24  2A00               	goto	i1l7631
 10739     0A25                     u751_20:
 10740     0A25                     i1l7641:
 10741     0A25  0875               	movf	___awdiv@sign,w
 10742     0A26  1903               	btfsc	3,2
 10743     0A27  2A29               	goto	u752_21
 10744     0A28  2A2A               	goto	u752_20
 10745     0A29                     u752_21:
 10746     0A29  2A2F               	goto	i1l7645
 10747     0A2A                     u752_20:
 10748     0A2A                     i1l7643:
 10749     0A2A  09F6               	comf	___awdiv@quotient,f
 10750     0A2B  09F7               	comf	___awdiv@quotient+1,f
 10751     0A2C  0AF6               	incf	___awdiv@quotient,f
 10752     0A2D  1903               	skipnz
 10753     0A2E  0AF7               	incf	___awdiv@quotient+1,f
 10754     0A2F                     i1l7645:
 10755     0A2F  0877               	movf	___awdiv@quotient+1,w
 10756     0A30  00F1               	movwf	?___awdiv+1
 10757     0A31  0876               	movf	___awdiv@quotient,w
 10758     0A32  00F0               	movwf	?___awdiv
 10759     0A33                     i1l824:
 10760     0A33  0008               	return
 10761     0A34                     __end_of___awdiv:
 10762                           
 10763                           	psect	text49
 10764     1317                     __ptext49:	
 10765 ;; *************** function ___bmul *****************
 10766 ;; Defined at:
 10767 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8.c"
 10768 ;; Parameters:    Size  Location     Type
 10769 ;;  multiplier      1    wreg     unsigned char 
 10770 ;;  multiplicand    1    0[COMMON] unsigned char 
 10771 ;; Auto vars:     Size  Location     Type
 10772 ;;  multiplier      1    2[COMMON] unsigned char 
 10773 ;;  product         1    1[COMMON] unsigned char 
 10774 ;; Return value:  Size  Location     Type
 10775 ;;                  1    wreg      unsigned char 
 10776 ;; Registers used:
 10777 ;;		wreg, status,2, status,0, btemp+1
 10778 ;; Tracked objects:
 10779 ;;		On entry : 0/0
 10780 ;;		On exit  : 0/0
 10781 ;;		Unchanged: 0/0
 10782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10783 ;;      Params:         1       0       0       0       0
 10784 ;;      Locals:         2       0       0       0       0
 10785 ;;      Temps:          0       0       0       0       0
 10786 ;;      Totals:         3       0       0       0       0
 10787 ;;Total ram usage:        3 bytes
 10788 ;; Hardware stack levels used: 1
 10789 ;; This function calls:
 10790 ;;		Nothing
 10791 ;; This function is called by:
 10792 ;;		_adcon_captura_grava
 10793 ;;		_adcon_mostra
 10794 ;;		_rs232_transmite
 10795 ;;		_estado_menu_principal
 10796 ;;		_estado_executa_muda
 10797 ;; This function uses a non-reentrant model
 10798 ;;
 10799                           
 10800     1317                     ___bmul:	
 10801                           ;psect for function ___bmul
 10802                           
 10803                           
 10804                           ;incstack = 0
 10805                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
 10806                           ;___bmul@multiplier stored from wreg
 10807     1317  00F2               	movwf	___bmul@multiplier
 10808     1318                     i1l7833:
 10809     1318  01F1               	clrf	___bmul@product
 10810     1319                     i1l7835:
 10811     1319  1C72               	btfss	___bmul@multiplier,0
 10812     131A  2B1C               	goto	u781_21
 10813     131B  2B1D               	goto	u781_20
 10814     131C                     u781_21:
 10815     131C  2B21               	goto	i1l7839
 10816     131D                     u781_20:
 10817     131D                     i1l7837:
 10818     131D  0870               	movf	___bmul@multiplicand,w
 10819     131E  00FF               	movwf	btemp+1
 10820     131F  087F               	movf	btemp+1,w
 10821     1320  07F1               	addwf	___bmul@product,f
 10822     1321                     i1l7839:
 10823     1321  1003               	clrc
 10824     1322  0DF0               	rlf	___bmul@multiplicand,f
 10825     1323                     i1l7841:
 10826     1323  1003               	clrc
 10827     1324  0CF2               	rrf	___bmul@multiplier,f
 10828     1325                     i1l7843:
 10829     1325  0872               	movf	___bmul@multiplier,w
 10830     1326  1D03               	btfss	3,2
 10831     1327  2B29               	goto	u782_21
 10832     1328  2B2A               	goto	u782_20
 10833     1329                     u782_21:
 10834     1329  2B19               	goto	i1l7835
 10835     132A                     u782_20:
 10836     132A                     i1l7845:
 10837     132A  0871               	movf	___bmul@product,w
 10838     132B                     i1l697:
 10839     132B  0008               	return
 10840     132C                     __end_of___bmul:
 10841                           
 10842                           	psect	text50
 10843     0B0D                     __ptext50:	
 10844 ;; *************** function _adcon_ler_canal *****************
 10845 ;; Defined at:
 10846 ;;		line 81 in file "adcon.c"
 10847 ;; Parameters:    Size  Location     Type
 10848 ;;  cnl             1    wreg     unsigned char 
 10849 ;; Auto vars:     Size  Location     Type
 10850 ;;  cnl             1    6[COMMON] unsigned char 
 10851 ;;  i               2   11[COMMON] unsigned int 
 10852 ;;  acc             4    7[COMMON] unsigned long 
 10853 ;; Return value:  Size  Location     Type
 10854 ;;                  2    0[COMMON] unsigned int 
 10855 ;; Registers used:
 10856 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
 10857 ;; Tracked objects:
 10858 ;;		On entry : 0/0
 10859 ;;		On exit  : 0/0
 10860 ;;		Unchanged: 0/0
 10861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10862 ;;      Params:         2       0       0       0       0
 10863 ;;      Locals:         7       0       0       0       0
 10864 ;;      Temps:          4       0       0       0       0
 10865 ;;      Totals:        13       0       0       0       0
 10866 ;;Total ram usage:       13 bytes
 10867 ;; Hardware stack levels used: 2
 10868 ;; This function calls:
 10869 ;;		Nothing
 10870 ;; This function is called by:
 10871 ;;		_adcon_captura_grava
 10872 ;;		_estado_menu_principal
 10873 ;;		_mq6_calibrar
 10874 ;; This function uses a non-reentrant model
 10875 ;;
 10876                           
 10877     0B0D                     _adcon_ler_canal:	
 10878                           ;psect for function _adcon_ler_canal
 10879                           
 10880                           
 10881                           ;incstack = 0
 10882 ;; using string table level
 10883                           ; Regs used in _adcon_ler_canal: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
 10884                           ;adcon_ler_canal@cnl stored from wreg
 10885     0B0D  00F6               	movwf	adcon_ler_canal@cnl
 10886     0B0E                     i1l7879:
 10887                           
 10888                           ;adcon.c: 94:     uint32_t acc = 0;
 10889     0B0E  3000               	movlw	0
 10890     0B0F  00FA               	movwf	adcon_ler_canal@acc+3
 10891     0B10  3000               	movlw	0
 10892     0B11  00F9               	movwf	adcon_ler_canal@acc+2
 10893     0B12  3000               	movlw	0
 10894     0B13  00F8               	movwf	adcon_ler_canal@acc+1
 10895     0B14  3000               	movlw	0
 10896     0B15  00F7               	movwf	adcon_ler_canal@acc
 10897     0B16                     i1l7881:
 10898                           
 10899                           ;adcon.c: 95:     ADCON0bits.CHS = canais[cnl];
 10900     0B16  0876               	movf	adcon_ler_canal@cnl,w
 10901     0B17  3E4C               	addlw	low (_canais| (0+32768))
 10902     0B18  0084               	movwf	4
 10903     0B19  3087               	movlw	high (_canais| (0+32768))
 10904     0B1A  1803               	skipnc
 10905     0B1B  3E01               	addlw	1
 10906     0B1C  1283               	bcf	3,5	;RP0=0, select bank0
 10907     0B1D  1303               	bcf	3,6	;RP1=0, select bank0
 10908     0B1E  00FF               	movwf	btemp+1
 10909     0B1F  120A  118A  2700  120A  158A  	fcall	stringtab
 10910     0B24  00F2               	movwf	??_adcon_ler_canal
 10911     0B25  0DF2               	rlf	??_adcon_ler_canal,f
 10912     0B26  0DF2               	rlf	??_adcon_ler_canal,f
 10913     0B27  081F               	movf	31,w	;volatile
 10914     0B28  0672               	xorwf	??_adcon_ler_canal,w
 10915     0B29  39C3               	andlw	-61
 10916     0B2A  0672               	xorwf	??_adcon_ler_canal,w
 10917     0B2B  009F               	movwf	31	;volatile
 10918     0B2C                     i1l7883:
 10919                           
 10920                           ;adcon.c: 96:     _delay((unsigned long)((20)*(4000000/4000000.0)));
 10921     0B2C  3006               	movlw	6
 10922     0B2D  00F2               	movwf	??_adcon_ler_canal
 10923     0B2E                     u863_27:
 10924     0B2E  0BF2               	decfsz	??_adcon_ler_canal,f
 10925     0B2F  2B2E               	goto	u863_27
 10926     0B30  0000               	nop
 10927     0B31                     i1l7885:
 10928                           
 10929                           ;adcon.c: 98:     for (uint16_t i = 0; i < 32; i++) {
 10930     0B31  01FB               	clrf	adcon_ler_canal@i
 10931     0B32  01FC               	clrf	adcon_ler_canal@i+1
 10932     0B33                     i1l271:
 10933                           
 10934                           ;adcon.c: 100:         ADCON0bits.GO_nDONE = 1;
 10935     0B33  1283               	bcf	3,5	;RP0=0, select bank0
 10936     0B34  1303               	bcf	3,6	;RP1=0, select bank0
 10937     0B35  149F               	bsf	31,1	;volatile
 10938     0B36                     i1l273:	
 10939                           ;adcon.c: 101:         while (ADCON0bits.GO_nDONE);
 10940                           
 10941     0B36  189F               	btfsc	31,1	;volatile
 10942     0B37  2B39               	goto	u786_21
 10943     0B38  2B3A               	goto	u786_20
 10944     0B39                     u786_21:
 10945     0B39  2B36               	goto	i1l273
 10946     0B3A                     u786_20:
 10947     0B3A                     i1l7891:
 10948                           
 10949                           ;adcon.c: 102:         acc += ((ADRESH << 8) + ADRESL);
 10950     0B3A  1683               	bsf	3,5	;RP0=1, select bank1
 10951     0B3B  1303               	bcf	3,6	;RP1=0, select bank1
 10952     0B3C  081E               	movf	30,w	;volatile
 10953     0B3D  00F2               	movwf	??_adcon_ler_canal
 10954     0B3E  1283               	bcf	3,5	;RP0=0, select bank0
 10955     0B3F  1303               	bcf	3,6	;RP1=0, select bank0
 10956     0B40  081E               	movf	30,w	;volatile
 10957     0B41  00F3               	movwf	??_adcon_ler_canal+1
 10958     0B42  3000               	movlw	0
 10959     0B43  1BF3               	btfsc	??_adcon_ler_canal+1,7
 10960     0B44  30FF               	movlw	255
 10961     0B45  00F4               	movwf	??_adcon_ler_canal+2
 10962     0B46  00F5               	movwf	??_adcon_ler_canal+3
 10963     0B47  0872               	movf	??_adcon_ler_canal,w
 10964     0B48  07F7               	addwf	adcon_ler_canal@acc,f
 10965     0B49  0873               	movf	??_adcon_ler_canal+1,w
 10966     0B4A  1103               	clrz
 10967     0B4B  1803               	skipnc
 10968     0B4C  3E01               	addlw	1
 10969     0B4D  1903               	skipnz
 10970     0B4E  2B50               	goto	u787_21
 10971     0B4F  07F8               	addwf	adcon_ler_canal@acc+1,f
 10972     0B50                     u787_21:
 10973     0B50  0874               	movf	??_adcon_ler_canal+2,w
 10974     0B51  1103               	clrz
 10975     0B52  1803               	skipnc
 10976     0B53  3E01               	addlw	1
 10977     0B54  1903               	skipnz
 10978     0B55  2B57               	goto	u787_22
 10979     0B56  07F9               	addwf	adcon_ler_canal@acc+2,f
 10980     0B57                     u787_22:
 10981     0B57  0875               	movf	??_adcon_ler_canal+3,w
 10982     0B58  1103               	clrz
 10983     0B59  1803               	skipnc
 10984     0B5A  3E01               	addlw	1
 10985     0B5B  1903               	skipnz
 10986     0B5C  2B5E               	goto	u787_23
 10987     0B5D  07FA               	addwf	adcon_ler_canal@acc+3,f
 10988     0B5E                     u787_23:
 10989                           
 10990                           ;adcon.c: 103:     }
 10991     0B5E  3001               	movlw	1
 10992     0B5F  07FB               	addwf	adcon_ler_canal@i,f
 10993     0B60  1803               	skipnc
 10994     0B61  0AFC               	incf	adcon_ler_canal@i+1,f
 10995     0B62  3000               	movlw	0
 10996     0B63  07FC               	addwf	adcon_ler_canal@i+1,f
 10997     0B64  3000               	movlw	0
 10998     0B65  027C               	subwf	adcon_ler_canal@i+1,w
 10999     0B66  3020               	movlw	32
 11000     0B67  1903               	skipnz
 11001     0B68  027B               	subwf	adcon_ler_canal@i,w
 11002     0B69  1C03               	skipc
 11003     0B6A  2B6C               	goto	u788_21
 11004     0B6B  2B6D               	goto	u788_20
 11005     0B6C                     u788_21:
 11006     0B6C  2B33               	goto	i1l271
 11007     0B6D                     u788_20:
 11008     0B6D                     i1l7893:
 11009                           
 11010                           ;adcon.c: 106:     return acc / 32;
 11011     0B6D  0877               	movf	adcon_ler_canal@acc,w
 11012     0B6E  00F2               	movwf	??_adcon_ler_canal
 11013     0B6F  0878               	movf	adcon_ler_canal@acc+1,w
 11014     0B70  00F3               	movwf	??_adcon_ler_canal+1
 11015     0B71  0879               	movf	adcon_ler_canal@acc+2,w
 11016     0B72  00F4               	movwf	??_adcon_ler_canal+2
 11017     0B73  087A               	movf	adcon_ler_canal@acc+3,w
 11018     0B74  00F5               	movwf	??_adcon_ler_canal+3
 11019     0B75  3005               	movlw	5
 11020     0B76                     u789_25:
 11021     0B76  1003               	clrc
 11022     0B77  0CF5               	rrf	??_adcon_ler_canal+3,f
 11023     0B78  0CF4               	rrf	??_adcon_ler_canal+2,f
 11024     0B79  0CF3               	rrf	??_adcon_ler_canal+1,f
 11025     0B7A  0CF2               	rrf	??_adcon_ler_canal,f
 11026     0B7B                     u789_20:
 11027     0B7B  3EFF               	addlw	-1
 11028     0B7C  1D03               	skipz
 11029     0B7D  2B76               	goto	u789_25
 11030     0B7E  0873               	movf	??_adcon_ler_canal+1,w
 11031     0B7F  00F1               	movwf	?_adcon_ler_canal+1
 11032     0B80  0872               	movf	??_adcon_ler_canal,w
 11033     0B81  00F0               	movwf	?_adcon_ler_canal
 11034     0B82                     i1l276:
 11035     0B82  0008               	return
 11036     0B83                     __end_of_adcon_ler_canal:
 11037     0002                     
 11038                           	psect	functab
 11039     0039                     __pfunctab:
 11040     0039                     __fptable:
 11041     0039                     fptable:
 11042     0039  00FF               	movwf	(btemp+1)& (0+127)
 11043     003A  3000               	movlw	high fptable
 11044     003B  008A               	movwf	10
 11045     003C  087F               	movf	(btemp+1)& (0+127),w
 11046     003D  0782               	addwf	2,f
 11047     003E                     fpbase:
 11048     003E  283E               	goto	fpbase	; Call via a null pointer and you will get stuck here.
 11049     003F                     fp__putch:
 11050     003F  120A  118A  2EFF   	ljmp	_putch
 11051     0042                     __end_of__fptable:
 11052     0042                     __i1fptable:
 11053     0042                     i1fptable:
 11054     0042  00FF               	movwf	(btemp+1)& (0+127)
 11055     0043  3000               	movlw	high i1fptable
 11056     0044  008A               	movwf	10
 11057     0045  087F               	movf	(btemp+1)& (0+127),w
 11058     0046  0782               	addwf	2,f
 11059     0047                     i1fpbase:
 11060     0047  2847               	goto	i1fpbase	; Call via a null pointer and you will get stuck here.
 11061     0048                     fp_i1_putch:
 11062     0048  120A  118A  2803   	ljmp	i1_putch
 11063     004B                     __end_of__i1fptable:
 11064     007E                     btemp	set	126	;btemp
 11065     007E                     wtemp0	set	126
 11066                           
 11067                           	psect	idloc
 11068                           
 11069                           ;Config register IDLOC0 @ 0x2000
 11070                           ;	unspecified, using default values
 11071     2000                     	org	8192
 11072     2000  3FFF               	dw	16383
 11073                           
 11074                           ;Config register IDLOC1 @ 0x2001
 11075                           ;	unspecified, using default values
 11076     2001                     	org	8193
 11077     2001  3FFF               	dw	16383
 11078                           
 11079                           ;Config register IDLOC2 @ 0x2002
 11080                           ;	unspecified, using default values
 11081     2002                     	org	8194
 11082     2002  3FFF               	dw	16383
 11083                           
 11084                           ;Config register IDLOC3 @ 0x2003
 11085                           ;	unspecified, using default values
 11086     2003                     	org	8195
 11087     2003  3FFF               	dw	16383
 11088                           
 11089                           	psect	config
 11090                           
 11091                           ;Config register CONFIG1 @ 0x2007
 11092                           ;	Oscillator Selection bits
 11093                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
 11094                           ;	Watchdog Timer Enable bit
 11095                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11096                           ;	Power-up Timer Enable bit
 11097                           ;	PWRTE = ON, PWRT enabled
 11098                           ;	RE3/MCLR pin function select bit
 11099                           ;	MCLRE = 0x1, unprogrammed default
 11100                           ;	Code Protection bit
 11101                           ;	CP = OFF, Program memory code protection is disabled
 11102                           ;	Data Code Protection bit
 11103                           ;	CPD = 0x1, unprogrammed default
 11104                           ;	Brown Out Reset Selection bits
 11105                           ;	BOREN = OFF, BOR disabled
 11106                           ;	Internal External Switchover bit
 11107                           ;	IESO = 0x1, unprogrammed default
 11108                           ;	Fail-Safe Clock Monitor Enabled bit
 11109                           ;	FCMEN = 0x1, unprogrammed default
 11110                           ;	Low Voltage Programming Enable bit
 11111                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11112                           ;	In-Circuit Debugger Mode bit
 11113                           ;	DEBUG = 0x1, unprogrammed default
 11114     2007                     	org	8199
 11115     2007  2CE1               	dw	11489
 11116                           
 11117                           ;Config register CONFIG2 @ 0x2008
 11118                           ;	unspecified, using default values
 11119                           ;	Brown-out Reset Selection bit
 11120                           ;	BOR4V = 0x1, unprogrammed default
 11121                           ;	Flash Program Memory Self Write Enable bits
 11122                           ;	WRT = 0x3, unprogrammed default
 11123     2008                     	org	8200
 11124     2008  3FFF               	dw	16383

Data Sizes:
    Strings     273
    Constant    140
    Data        14
    BSS         68
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     32      65
    BANK3            96     15      64
    BANK2            96      0       0

Pointer List with Targets:

    i1__doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
		 -> NULL(), putch(), 

    i1__doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 17
		 -> NULL(NULL[0]), estado_executa_muda@tmp(BANK0[17]), mq_mostra@temp_str(BANK0[16]), adcon_mostra@temp_str(BANK0[9]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_46(CODE[10]), STR_45(CODE[10]), STR_43(CODE[9]), STR_22(CODE[7]), 
		 -> STR_17(CODE[9]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK3[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 17
		 -> estado_executa_muda@tmp(BANK0[17]), mq_mostra@temp_str(BANK0[16]), adcon_mostra@temp_str(BANK0[9]), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> NULL(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 17
		 -> NULL(NULL[0]), estado_executa_muda@tmp(BANK0[17]), mq_mostra@temp_str(BANK0[16]), adcon_mostra@temp_str(BANK0[9]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), printf@ap(BANK3[2]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_46(CODE[10]), STR_45(CODE[10]), STR_43(CODE[9]), STR_22(CODE[7]), 
		 -> STR_17(CODE[9]), STR_1(CODE[6]), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> NULL(), putch(), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 17
		 -> NULL(NULL[0]), estado_executa_muda@tmp(BANK0[17]), mq_mostra@temp_str(BANK0[16]), adcon_mostra@temp_str(BANK0[9]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 3
		 -> sprintf@pb(BANK0[2]), printf@pb(BANK3[2]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK3[2]), 

    S1540__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> NULL(), putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> i1_putch(), NULL(), putch(), 

    S1540__prbuf$ptr	PTR unsigned char  size(1) Largest target is 17
		 -> NULL(NULL[0]), estado_executa_muda@tmp(BANK0[17]), mq_mostra@temp_str(BANK0[16]), adcon_mostra@temp_str(BANK0[9]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 17
		 -> NULL(NULL[0]), estado_executa_muda@tmp(BANK0[17]), mq_mostra@temp_str(BANK0[16]), adcon_mostra@temp_str(BANK0[9]), 

    menu_inicial	PTR const unsigned char [7] size(2) Largest target is 15
		 -> STR_29(CODE[15]), STR_28(CODE[14]), STR_27(CODE[7]), STR_26(CODE[8]), 
		 -> STR_25(CODE[10]), STR_24(CODE[15]), STR_23(CODE[9]), 

    S505$str_quant_sensores	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_33(CODE[11]), STR_32(CODE[11]), STR_31(CODE[11]), STR_30(CODE[9]), 
		 -> STR_21(CODE[11]), STR_20(CODE[11]), STR_19(CODE[11]), STR_18(CODE[9]), 
		 -> STR_15(CODE[11]), STR_14(CODE[11]), STR_13(CODE[11]), STR_12(CODE[9]), 

    menu_quant_sensores.str_quant_sensores	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_33(CODE[11]), STR_32(CODE[11]), STR_31(CODE[11]), STR_30(CODE[9]), 
		 -> STR_21(CODE[11]), STR_20(CODE[11]), STR_19(CODE[11]), STR_18(CODE[9]), 
		 -> STR_15(CODE[11]), STR_14(CODE[11]), STR_13(CODE[11]), STR_12(CODE[9]), 

    S329$str_tempo_amostra	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_40(CODE[7]), STR_39(CODE[7]), STR_38(CODE[7]), STR_37(CODE[6]), 
		 -> STR_36(CODE[7]), STR_35(CODE[7]), STR_34(CODE[6]), STR_11(CODE[7]), 
		 -> STR_10(CODE[7]), STR_9(CODE[7]), STR_8(CODE[6]), STR_7(CODE[7]), 
		 -> STR_6(CODE[7]), STR_5(CODE[6]), 

    menu_tempo_amostra.str_tempo_amostra	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_40(CODE[7]), STR_39(CODE[7]), STR_38(CODE[7]), STR_37(CODE[6]), 
		 -> STR_36(CODE[7]), STR_35(CODE[7]), STR_34(CODE[6]), STR_11(CODE[7]), 
		 -> STR_10(CODE[7]), STR_9(CODE[7]), STR_8(CODE[6]), STR_7(CODE[7]), 
		 -> STR_6(CODE[7]), STR_5(CODE[6]), 

    lcd_puts@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_47(CODE[11]), STR_44(CODE[12]), STR_42(CODE[12]), estado_executa_muda@tmp(BANK0[17]), 
		 -> STR_41(CODE[14]), STR_40(CODE[7]), STR_39(CODE[7]), STR_38(CODE[7]), 
		 -> STR_37(CODE[6]), STR_36(CODE[7]), STR_35(CODE[7]), STR_34(CODE[6]), 
		 -> STR_33(CODE[11]), STR_32(CODE[11]), STR_31(CODE[11]), STR_30(CODE[9]), 
		 -> STR_29(CODE[15]), STR_28(CODE[14]), STR_27(CODE[7]), STR_26(CODE[8]), 
		 -> STR_25(CODE[10]), STR_24(CODE[15]), STR_23(CODE[9]), mq_mostra@temp_str(BANK0[16]), 
		 -> STR_21(CODE[11]), STR_20(CODE[11]), STR_19(CODE[11]), STR_18(CODE[9]), 
		 -> adcon_mostra@temp_str(BANK0[9]), STR_16(CODE[14]), STR_15(CODE[11]), STR_14(CODE[11]), 
		 -> STR_13(CODE[11]), STR_12(CODE[9]), STR_11(CODE[7]), STR_10(CODE[7]), 
		 -> STR_9(CODE[7]), STR_8(CODE[6]), STR_7(CODE[7]), STR_6(CODE[7]), 
		 -> STR_5(CODE[6]), STR_4(CODE[11]), STR_3(CODE[2]), STR_2(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _handler in COMMON

    _handler->_adcon_captura_grava
    _rs232_transmite->___bmul
    _estado_maquina->_estado_menu_conf_quant_sensores
    _estado_maquina->_estado_menu_conf_tempo_amostra
    _estado_maquina->_estado_ver_todos
    ___lbdiv->i1_eeprom_read
    _estado_menu_principal->_adcon_ler_canal
    _estado_executa_muda->i1___lwmod
    _adcon_captura_grava->_adcon_ler_canal
    i1_eeprom_gravar_word->i1_eeprom_write
    _lcd_clear->i1_lcd_write
    _eeprom_ler_word->i1_eeprom_read
    _adcon_mostra->_div
    i1_lcd_puts->___bmul
    i1_lcd_goto->i1_lcd_write
    i1__doprnt->i1___lwmod
    i1___lwmod->i1___lwdiv
    _div->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _handler in BANK0

    _estado_maquina->_estado_menu_principal
    _estado_ver_todos->_estado_executa_muda
    _estado_menu_principal->_estado_executa_muda
    _estado_menu_limpar->_estado_executa_muda
    _estado_menu_conf_tempo_amostra->_estado_executa_muda
    _estado_menu_conf_quant_sensores->_estado_executa_muda
    _estado_max_min->_estado_executa_muda
    _estado_inicial->_estado_executa_muda
    _estado_captura_mostra->_estado_executa_muda
    _estado_executa_muda->_sprintf
    _adcon_captura_grava->_adcon_mostra
    _adcon_mostra->_sprintf
    _sprintf->i1__doprnt

Critical Paths under _main in BANK1

    _printf->__doprnt
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _lcd_init->_lcd_write
    _lcd_goto->_lcd_write
    _eeprom_gravar_word->_eeprom_write

Critical Paths under _handler in BANK1

    _handler->_estado_maquina

Critical Paths under _main in BANK3

    _main->_printf
    _printf->__doprnt

Critical Paths under _handler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _handler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   10784
                                             31 BANK1      1     1      0
                         _adcon_init
                          _btns_init
                 _eeprom_gravar_word
                        _eeprom_read
                       _eeprom_write
                           _lcd_goto
                           _lcd_init
                           _lcd_puts
                             _printf
                         _rs232_init
                        _timer0_init
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rs232_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     4      2    5217
                                              9 BANK3      6     4      2
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             23    17      6    4453
                                             25 BANK1      6     0      6
                                              0 BANK3      9     9      0
                                NULL *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     0      1     237
                                             13 BANK1      1     0      1
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     896
                                             20 BANK1      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     914
                                             13 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (10) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             3     1      2    1282
                                             13 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     168
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             4     3      1     644
                                             15 BANK1      4     3      1
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            2     2      0     168
                                             13 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _eeprom_read                                          1     1      0      42
                                             13 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _eeprom_gravar_word                                   3     1      2    2166
                                             15 BANK1      3     1      2
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (1) _eeprom_write                                         2     1      1    1080
                                             13 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (1) _btns_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcon_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _handler                                             10    10      0  133973
                                              3 BANK1     10    10      0
                _adcon_captura_grava
                         _btns_testa
                    _eeprom_ler_word
                     _estado_maquina
                    _rs232_transmite
 ---------------------------------------------------------------------------------
 (5) _rs232_transmite                                      7     7      0     798
                                              3 COMMON     7     7      0
                             ___bmul
                      i1_eeprom_read
 ---------------------------------------------------------------------------------
 (5) _estado_maquina                                       3     3      0  118490
                                              0 BANK1      3     3      0
              _estado_captura_mostra
                     _estado_inicial
                     _estado_max_min
    _estado_menu_conf_quant_sensores
     _estado_menu_conf_tempo_amostra
                 _estado_menu_limpar
              _estado_menu_principal
                   _estado_ver_todos
 ---------------------------------------------------------------------------------
 (6) _estado_ver_todos                                     3     3      0   13130
                                             12 COMMON     2     2      0
                                             66 BANK0      1     1      0
                            ___lbdiv
                _estado_executa_muda
                      i1_eeprom_read
 ---------------------------------------------------------------------------------
 (7) ___lbdiv                                              4     3      1     335
                                              1 COMMON     4     3      1
                      i1_eeprom_read (ARG)
 ---------------------------------------------------------------------------------
 (6) _estado_menu_principal                               14    14      0   27090
                                             66 BANK0     14    14      0
                             ___bmul
                    _adcon_ler_canal
                       _adcon_mostra
                    _eeprom_ler_word
                _estado_executa_muda
                          _lcd_clear
               i1_eeprom_gravar_word
                      i1_eeprom_read
                     i1_eeprom_write
                         i1_lcd_puts
 ---------------------------------------------------------------------------------
 (6) _estado_menu_limpar                                   1     1      0   12764
                                             12 COMMON     1     1      0
                _estado_executa_muda
 ---------------------------------------------------------------------------------
 (6) _estado_menu_conf_tempo_amostra                       3     3      0   13644
                                             12 COMMON     2     2      0
                                             66 BANK0      1     1      0
                _estado_executa_muda
               i1_eeprom_gravar_word
 ---------------------------------------------------------------------------------
 (6) _estado_menu_conf_quant_sensores                      3     3      0   13130
                                             12 COMMON     2     2      0
                                             66 BANK0      1     1      0
                _estado_executa_muda
                     i1_eeprom_write
 ---------------------------------------------------------------------------------
 (6) _estado_max_min                                       1     1      0   12764
                                             12 COMMON     1     1      0
                _estado_executa_muda
 ---------------------------------------------------------------------------------
 (6) _estado_inicial                                       1     1      0   12709
                _estado_executa_muda
 ---------------------------------------------------------------------------------
 (6) _estado_captura_mostra                                1     1      0   12764
                                             12 COMMON     1     1      0
                _estado_executa_muda
 ---------------------------------------------------------------------------------
 (7) _estado_executa_muda                                 38    38      0   12709
                                             28 BANK0     38    38      0
                             ___bmul
                    _eeprom_ler_word
                          _lcd_clear
                            _sprintf
                          i1___lwdiv
                          i1___lwmod
               i1_eeprom_gravar_word
                      i1_eeprom_read
                     i1_eeprom_write
                         i1_lcd_goto
                         i1_lcd_puts
 ---------------------------------------------------------------------------------
 (5) _btns_testa                                           3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) _adcon_captura_grava                                 14    14      0   14271
                                             13 COMMON     1     1      0
                                             48 BANK0     13    13      0
                             ___bmul
                    _adcon_ler_canal
                       _adcon_mostra
                    _eeprom_ler_word
                          _lcd_clear
               i1_eeprom_gravar_word
                      i1_eeprom_read
                     i1_eeprom_write
                         i1_lcd_puts
 ---------------------------------------------------------------------------------
 (8) i1_eeprom_gravar_word                                 3     1      2     880
                                              2 COMMON     3     1      2
                     i1_eeprom_write
 ---------------------------------------------------------------------------------
 (8) i1_eeprom_write                                       2     1      1     366
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (8) _lcd_clear                                            2     2      0     124
                                              2 COMMON     2     2      0
                        i1_lcd_write
 ---------------------------------------------------------------------------------
 (8) _eeprom_ler_word                                      7     5      2     164
                                              1 COMMON     7     5      2
                      i1_eeprom_read
 ---------------------------------------------------------------------------------
 (6) i1_eeprom_read                                        1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _adcon_mostra                                        20    17      3   10268
                                             28 BANK0     20    17      3
                             ___bmul
                                _div
                            _sprintf
                         i1_lcd_goto
                         i1_lcd_puts
 ---------------------------------------------------------------------------------
 (9) i1_lcd_puts                                           3     1      2     567
                                              3 COMMON     3     1      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (8) i1_lcd_goto                                           4     3      1     303
                                              2 COMMON     4     3      1
                        i1_lcd_write
 ---------------------------------------------------------------------------------
 (9) i1_lcd_write                                          2     2      0     124
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _sprintf                                             13     5      8    5681
                                             15 BANK0     13     5      8
                             ___bmul (ARG)
                          i1__doprnt
 ---------------------------------------------------------------------------------
 (9) i1__doprnt                                           23    17      6    4083
                                              0 BANK0     15     9      6
                                NULL *
                          i1___lwdiv
                          i1___lwmod
                            i1_putch *
 ---------------------------------------------------------------------------------
 (10) i1_putch                                             1     0      1     177
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) i1___lwmod                                            5     1      4     907
                                              7 COMMON     5     1      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) i1___lwdiv                                            7     3      4     937
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (10) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 (8) _div                                                  8     4      4    1621
                                              8 COMMON     4     0      4
                                              0 BANK0      4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     613
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              8     4      4     625
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (6) ___bmul                                               3     2      1     460
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (8) _adcon_ler_canal                                     13    11      2     136
                                              0 COMMON    13    11      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcon_init
   _btns_init
   _eeprom_gravar_word
     _eeprom_write
   _eeprom_read
   _eeprom_write
   _lcd_goto
     _lcd_write
   _lcd_init
     _lcd_write
   _lcd_puts
   _printf
     __doprnt
       NULL(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       _putch *
   _rs232_init
   _timer0_init

 _handler (ROOT)
   _adcon_captura_grava
     ___bmul
     _adcon_ler_canal
     _adcon_mostra
       ___bmul
       _div
         ___awdiv
         ___awmod
       _sprintf
         ___bmul (ARG)
         i1__doprnt (ARG)
           NULL(Fake) *
           i1___lwdiv *
           i1___lwmod *
             i1___lwdiv (ARG)
           i1_putch *
       i1_lcd_goto
         i1_lcd_write
       i1_lcd_puts
         ___bmul (ARG)
     _eeprom_ler_word
       i1_eeprom_read
     _lcd_clear
       i1_lcd_write
     i1_eeprom_gravar_word
       i1_eeprom_write
     i1_eeprom_read
     i1_eeprom_write
     i1_lcd_puts
   _btns_testa
   _eeprom_ler_word
   _estado_maquina
     _estado_captura_mostra
       _estado_executa_muda
         ___bmul
         _eeprom_ler_word
         _lcd_clear
         _sprintf
         i1___lwdiv
         i1___lwmod
         i1_eeprom_gravar_word
         i1_eeprom_read
         i1_eeprom_write
         i1_lcd_goto
         i1_lcd_puts
     _estado_inicial
       _estado_executa_muda
     _estado_max_min
       _estado_executa_muda
     _estado_menu_conf_quant_sensores
       _estado_executa_muda
       i1_eeprom_write
     _estado_menu_conf_tempo_amostra
       _estado_executa_muda
       i1_eeprom_gravar_word
     _estado_menu_limpar
       _estado_executa_muda
     _estado_menu_principal
       ___bmul
       _adcon_ler_canal
       _adcon_mostra
       _eeprom_ler_word
       _estado_executa_muda
       _lcd_clear
       i1_eeprom_gravar_word
       i1_eeprom_read
       i1_eeprom_write
       i1_lcd_puts
     _estado_ver_todos
       ___lbdiv
         i1_eeprom_read (ARG)
       _estado_executa_muda
       i1_eeprom_read
   _rs232_transmite
     ___bmul
     i1_eeprom_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      F      40       9       66.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     20      41       7       81.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      DF      12        0.0%
ABS                  0      0      DF       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Aug 30 18:50:21 2023

                                      pc 0002                           ___bmul@product 0071  
                                     l41 0D53                                       l42 0D53  
                                     l80 16AA                                       l81 16B4  
                                     l82 16B7                                       l83 16C1  
                                     l84 16C4                                       l85 16CE  
                                     l87 16DC                                       l79 16A7  
                                     l97 15EA                             ___awdiv@sign 0075  
                                     fsr 0004             _gl_item_menu_config_sensores 00CF  
                                    l102 1739                                      l112 165F  
                                    l105 1744                                      l109 1766  
                                    l150 157E                                      l206 08BB  
                                    l331 138D                                      l284 1374  
                                    l294 06FE                                      l641 1391  
                                    l643 13AA                                      l660 1582  
                                    l661 1582                                      l664 15A2  
                                    l667 15B3                                      l943 17AC  
                                    l953 169B                                      _RB0 0030  
                                    _RB1 0031                                      _RB2 0032  
                                    _RC0 0038                                      _RC1 0039  
                                    _RC2 003A                                      _RB4 0034  
                                    _RB5 0035                                      _RB6 0036  
                                    _RB7 0037                                      _TX9 04C6  
                                    _div 151C                                      fsr0 0004  
                                    indf 0000                             ___awmod@sign 0075  
                 estado_menu_principal@i 006C                               i1_lcd_goto 14EE  
                             i1_lcd_puts 1494                              i1__doprnt@c 002E  
                            i1__doprnt@f 0022                   estado_executa_muda@tmp 0040  
                                   l1214 13F1                                     l1233 0387  
                                   l1235 034B                                     l1255 0533  
                                   l1258 06FF                                     ?_div 0078  
                                   l7001 1573                                     l7003 157D  
                                   l7011 138A                                     l7013 1625  
                                   l7005 1375                                     l7015 1635  
                                   l7031 173E                                     l7007 1387  
                                   l7041 15C2                                     l7033 1748  
                                   l7009 1389                                     l7035 1750  
                                   l7027 1721                                     l7061 135C  
                                   l7045 15C9                                     l7037 15B7  
                                   l7029 1725                                     l7071 1371  
                                   l7063 1364                                     l7055 139A  
                                   l7047 15DB                                     l7039 15BB  
                                   l7065 1367                                     l7049 15E3  
                                   l7081 08B9                                     l7073 08AF  
                                   l7067 1368                                     l7059 06EB  
                                   l7083 08BA                                     l7075 08B3  
                                   l7069 136E                                     l6701 16A3  
                                   l8301 04C3                                     l7077 08B6  
                                   l6711 16D8                                     l6703 16B0  
                                   l6631 1767                                     l8303 04E1  
                                   l8311 052F                                     l7079 08B7  
                                   l6713 16DB                                     l6705 16BD  
                                   l6641 177F                                     l6633 176B  
                                   l8305 04EF                                     l8321 13D0  
                                   l6707 16CA                                     l6651 17A2  
                                   l6643 1783                                     l6635 1771  
                                   l8307 04FA                                     l8251 032F  
                                   l8243 02F0                                     l8323 13D2  
                                   l6709 16D1                                     l6645 1794  
                                   l6637 1774                                     l6653 17A8  
                                   l6661 166B                                     l8261 038B  
                                   l8253 033D                                     l8245 02F1  
                                   l8309 0505                                     l8325 13D6  
                                   l6647 179A                                     l6639 177B  
                                   l6671 168A                                     l6663 1672  
                                   l8271 03D5                                     l8263 03A9  
                                   l8247 02F7                                     l8255 0349  
                                   l8319 13CD                      _menu_quant_sensores 072E  
                                   l6681 1594                                     l6649 179B  
                                   l6673 1691                                     l6665 1676  
                                   l6657 1660                                     l8281 03FF  
                                   l8265 03AD                                     l8249 0311  
                                   l6691 15AA                                     l6683 159A  
                                   l6667 167A                                     l6659 1668  
                                   l6675 1697                                     l8291 0447  
                                   l8283 0403                                     l8267 03B1  
                                   l8259 034D                                     l8451 0CC0  
                                   l6693 15AB                                     l6685 159D  
                                   l6669 1684                                     l8293 0453  
                                   l8285 0409                                     l8277 03D7  
                                   l8269 03B7                                     l8461 0CF5  
                                   l8453 0CCB                                     l8445 0CA0  
                                   l6695 15AC                                     l6687 15A1  
                                   l6679 1588                                     l8287 040F  
                                   l8295 045C                                     l8471 0D34  
                                   l8463 0D29                                     l8455 0CD6  
                                   l8447 0CA6                                     l6697 15B2  
                                   l6689 15A6                                     l8297 0461  
                                   l8289 0429                                     l8473 0D3A  
                                   l8457 0CDF                                     l8449 0CB5  
                                   l6699 169F                                     l8299 04A9  
                                   l8475 0D40                                     l8459 0CEA  
                                   l8469 0D2C                                     l8477 0D48  
                                   l8479 0D52                                     l6999 154B  
                                   l8847 0379                                     l8849 15D3  
                                   STR_1 08A7                                     STR_2 07D8  
                                   STR_3 08AD                                     STR_4 081E  
                                   STR_5 089B                                     STR_6 087F  
                                   STR_7 0886                                     STR_8 08A1  
                                   STR_9 088D                                     _BRGH 04C2  
                                   _CREN 00C4                                     _IOCB 0096  
                                   u7000 155B                                     u7001 1557  
                                   u7010 1565                                     u7011 1561  
                                   u7020 156F                                     u7021 156B  
                                   u7014 155E                                     _RBIE 005B  
                                   u7024 1568                                     u7040 173E  
                                   _RBIF 0058                                     u7041 173D  
                                   u7034 1572                                     u7050 1748  
                                   u7051 1747                                     u7060 1766  
                                   u7061 1765                                     u7070 139A  
                                   u7071 1397                                     i1l80 1476  
                                   u6600 1668                                     u8200 038B  
                                   i1l81 147C                                     u6601 1667  
                                   u8201 038A                                     i1l82 147D  
                                   i1l90 135B                                     u6530 1771  
                                   u8210 03AD                                     i1l83 1483  
                                   u6531 1770                                     u8211 03AC  
                                   i1l84 1484                                     u6700 16B0  
                                   u6620 167A                                     u8220 03FE  
                                   i1l85 148A                                     u6701 16AF  
                                   u6621 1679                                     u8221 03FD  
                                   u6710 16BD                                     u6550 1783  
                                   u6630 1684                                     u8230 0409  
                                   i1l87 1493                                     i1l79 1473  
                                   u6711 16BC                                     u6551 1782  
                                   u6631 1683                                     u6615 166C  
                                   u8231 0408                                     u6720 16CA  
                                   u8240 040F                                     i1l97 151B  
                                   u6721 16C9                                     u6545 1775  
                                   u8241 040E                                     u8225 03FA  
                                   u6570 1794                                     u6650 1697  
                                   u8250 0429                                     u6571 1793  
                                   u6651 1696                                     u6635 1680  
                                   u8251 0428                                     u6660 1588  
                                   u8260 04C3                                     u8180 02F7  
                                   u6661 1587                                     u6565 1784  
                                   u6645 168B                                     u8261 04C2  
                                   u8181 02F6                                     u6670 15A1  
                                   u6590 17A8                                     u8270 0505  
                                   u8190 0311                                     u6671 15A0  
                                   u6591 17A7                                     u6575 1790  
                                   u8271 0504                                     u8191 0310  
                                   u6680 15B2                                     u8280 052F  
                                   u6681 15B1                                     u6585 179C  
                                   u8281 052E                                     u6690 16A3  
                                   u8370 0CF5                                     u6691 16A2  
                                   u8371 0CF4                                     u8380 0D40  
                                   u8381 0D3F                                     u8537 15E7  
                                   u8547 16D5                                     _TMR0 0001  
                                   _SPEN 00C7                                     _TXEN 04C5  
                                   _TXIF 0064                                     _SYNC 04C4  
                                   _WPUB 0095                           ??_eeprom_write 00AE  
                      ??_adcon_ler_canal 0072                                     _main 0CA0  
                                   btemp 007E                              lcd_puts@cmd 00AF  
                            lcd_puts@str 00AD                                     start 0012  
                        __end_ofi1_putch 0004                         _estado_ver_todos 17AD  
                 ?_estado_menu_principal 0070                        ___bmul@multiplier 0072  
                            i1_lcd_write 146A                             i1__doprnt@ap 0024  
                           i1__doprnt@pb 0020               __end_of_menu_tempo_amostra 072E  
                     eeprom_ler_word@end 0075                                    ??_div 007C  
                                  ?_main 0070                          __end_of___awdiv 0A34  
                        __end_of___lbdiv 146A                                    _EEADR 010D  
                                  STR_10 0894                                    STR_11 0878  
                                  STR_12 0859                                    STR_13 07FD  
                                  STR_22 0871                                    STR_14 0808  
                                  STR_30 0859                                    STR_15 0813  
                                  STR_31 07FD                                    STR_23 0847  
                                  STR_16 07CA                                    _BRG16 0C3B  
                                  STR_32 0808                                    STR_40 0878  
                                  STR_24 079E                                    STR_41 07CA  
                                  STR_17 0850                                    STR_33 0813  
                                  STR_25 083D                                    STR_42 07E6  
                                  STR_34 089B                                    STR_26 0862  
                                  STR_43 0850                                    STR_35 087F  
                                  STR_27 086A                                    STR_44 07E6  
                                  STR_36 0886                                    STR_28 07BC  
                        __end_of___awmod 096B                                    STR_45 0833  
                                  STR_37 08A1                                    STR_29 07AD  
                                  STR_46 0829                                    STR_38 088D  
                                  STR_47 07F2                                    STR_39 0894  
                                  _ANSEL 0188                          ___awdiv@divisor 0070  
                        __end_of___lwdiv 17AD                                    i1l102 14A2  
                                  i1l105 14A8                                    i1l109 14C0  
                                  i1l143 142D                                    i1l144 1440  
                                  i1l145 1433                                    i1l146 1439  
                                  i1l271 0B33                                    i1l273 0B36  
                                  i1l281 0C09                                    i1l337 0B0C  
                        __end_of___lwmod 169C                                    i1l450 12D3  
                                  i1l291 1417                                    i1l267 0E23  
                                  i1l531 0080                                    i1l523 0911  
                                  i1l443 0A9C                                    i1l276 0B82  
                                  i1l268 0E59                                    i1l532 0082  
                                  i1l508 09CC                                    i1l197 0C93  
                                  i1l294 1303                                    i1l454 12F0  
                                  i1l446 12AF                                    i1l641 132D  
                                  i1l643 1342                                    i1l483 0FFF  
                                  i1l660 14C2                                    i1l548 02EF  
                                  i1l661 14C2                                    i1l477 0F54  
                                  i1l493 17FF                                    i1l824 0A33  
                                  i1l664 14DC                                    i1l497 12C5  
                                  i1l667 14ED                                    i1l837 096A  
                                  i1l943 1720                                    i1l697 132B  
                                  i1l953 1624                                    i1l877 1469  
                        ___awdiv@counter 0074                                    _RCREG 001A  
                                  _SPBRG 0099                          __end_of__doprnt 0534  
                                  _TRISA 0085                                    _TXREG 0019  
                        __end_of_handler 0CA0                       i1___lwmod@dividend 0079  
                        __end_of_dpowers 0744                                    _errno 00C9  
                                  div@rv 0020                                    _putch 06FF  
                                  main@i 00BF                                    fpbase 003E  
                     _estado_menu_limpar 12C6                                    pclath 000A  
                                  status 0003                                    wtemp0 007E  
                        __end_of_sprintf 13CD                 estado_menu_principal@opt 0064  
                        ___lbdiv@divisor 0071                          ___lbdiv@counter 0073  
                    ?_estado_menu_limpar 0070                 estado_executa_muda@F1404 0190  
                        __initialization 0015                             __end_of_main 0D57  
      estado_menu_conf_tempo_amostra@opt 0062                              i1lcd_goto@x 0072  
                            i1lcd_goto@y 0075                            i1__doprnt@val 002C  
               estado_executa_muda@i_947 005C                                   ??_main 00BF  
               estado_executa_muda@maior 0058                 estado_executa_muda@menor 005A  
                i1eeprom_gravar_word@end 0074                     ??_estado_menu_limpar 007C  
                            ?i1_lcd_goto 0072                             _adcon_mostra 0B83  
                            ?i1_lcd_puts 0073                      _estado_executa_muda 004B  
          __end_of_estado_captura_mostra 12F1                                   _ADRESH 001E  
                                 _ADRESL 009E                                   _EEDATA 010C  
                                 _EECON1 018C                                   _EECON2 018D  
                       ___awdiv@dividend 0072                                   ?_putch 00AD  
                                 _ANSELH 0189                                   i1l1122 154A  
                                 i1l1233 05A1                                   i1l1235 0579  
                                 i1l1255 06E7                                   i1l1265 13CC  
                                 i1l1258 0003                                   i1l4181 1431  
                                 i1l4173 1418                                   i1l4175 1425  
                                 i1l4193 143F                                   i1l4185 1437  
                                 i1l4177 142B                                   i1l4189 143D  
                                 i1l8001 02E9                                   i1l8011 1443  
                                 i1l8101 0F71                                   i1l8021 1455  
                                 i1l8013 1448                                   i1l8111 0F98  
                                 i1l8103 0F7E                                   i1l8023 145D  
                                 i1l8015 144B                                   i1l8031 1468  
                                 i1l8201 09AF                                   i1l8121 0FC2  
                                 i1l8113 0F9F                                   i1l8105 0F84  
                                 i1l8041 0E65                                   i1l8025 145F  
                                 i1l8017 144D                                   i1l8009 1442  
                                 i1l8035 12A9                                   i1l8115 0FA6  
                                 i1l8107 0F8A                                   i1l8051 0E81  
                                 i1l8043 0E67                                   i1l8027 1460  
                                 i1l8019 1451                                   i1l8221 08D0  
                                 i1l8213 08BF                                   i1l8205 09B6  
                                 i1l8125 0FC9                                   i1l8117 0FB2  
                                 i1l8109 0F91                                   i1l8061 0EBF  
                                 i1l8053 0E86                                   i1l8045 0E6E  
                                 i1l8037 0E5D                                   i1l8029 1462  
                                 i1l8143 12E3                                   i1l8231 08F4  
                                 i1l8223 08D8                                   i1l8215 08C0  
                                 i1l8119 0FB9                                   i1l8071 0EE0  
                                 i1l8063 0EC5                                   i1l8055 0E8F  
                                 i1l8047 0E76                                   i1l8039 0E5E  
                                 i1l8151 17B1                                   i1l7601 1620  
                                 i1l8401 0E0D                                   i1l8145 12E9  
                                 i1l8225 08DC                                   i1l8217 08C7  
                                 i1l8081 0F0D                                   i1l8073 0EEC  
                                 i1l8065 0ECB                                   i1l8057 0EA6  
                                 i1l8049 0E7A                                   i1l8129 0FEC  
                                 i1l8161 17DE                                   i1l8153 17B8  
                                 i1l7611 09D7                                   i1l8411 0E4D  
                                 i1l8403 0E19                                   i1l8147 12EA  
                                 i1l8227 08E3                                   i1l8219 08C9  
                                 i1l8235 08FB                                   i1l8091 0F34  
                                 i1l8083 0F12                                   i1l8075 0EF8  
                                 i1l8067 0ED2                                   i1l8059 0EA8  
                                 i1l8163 17E5                                   i1l8155 17BA  
                                 i1l8331 0A9E                                   i1l7621 09E8  
                                 i1l7613 09D9                                   i1l7605 09CD  
                                 i1l7701 1492                                   i1l8405 0E32  
                                 i1l8413 0E53                                   i1l8229 08EA  
                                 i1l8181 12CD                                   i1l8093 0F3E  
                                 i1l8077 0EFA                                   i1l8069 0ED7  
                                 i1l8157 17C1                                   i1l8149 17B0  
                                 i1l8421 0A46                                   i1l8341 0ACF  
                                 i1l8333 0AA5                                   i1l8501 0C69  
                                 i1l7631 0A00                                   i1l7623 09EE  
                                 i1l7615 09DD                                   i1l7607 09CE  
                                 i1l7703 1334                                   i1l7711 14D4  
                                 i1l8407 0E38                                   i1l8175 12B9  
                                 i1l8191 0984                                   i1l8183 096E  
                                 i1l8095 0F4A                                   i1l8079 0F0C  
                                 i1l8087 0F1C                                   i1l8159 17DA  
                                 i1l8167 17EC                                   i1l8431 0A69  
                                 i1l8423 0A4D                                   i1l8415 0A37  
                                 i1l8351 0AF7                                   i1l8343 0AD2  
                                 i1l8335 0AA9                                   i1l8511 0C7B  
                                 i1l8503 0C6E                                   i1l7633 0A11  
                                 i1l7625 09F1                                   i1l7641 0A25  
                                 i1l7617 09E2                                   i1l7609 09D2  
                                 i1l7561 16E5                                   i1l7801 1346  
                                 i1l7721 14E5                                   i1l7713 14D7  
                                 i1l8409 0E40                                   i1l8361 0D60  
                                 i1l8177 12BF                                   i1l8193 098F  
                                 i1l8185 096F                                   i1l8097 0F63  
                                 i1l8089 0F2A                                   i1l8433 0A70  
                                 i1l8425 0A54                                   i1l8417 0A38  
                                 i1l8353 0AFB                                   i1l8345 0ADB  
                                 i1l8337 0AB0                                   i1l8329 0A9D  
                                 i1l8513 0C7F                                   i1l8505 0C72  
                                 i1l7643 0A2A                                   i1l7635 0A17  
                                 i1l7627 09F8                                   i1l7619 09E6  
                                 i1l7651 0913                                   i1l7571 1708  
                                 i1l7563 16E8                                   i1l7731 053B  
                                 i1l7811 1413                                   i1l7803 1352  
                                 i1l7723 14E6                                   i1l7715 14DB  
                                 i1l7707 14C8                                   i1l8371 0D9D  
                                 i1l8363 0D77                                   i1l8195 0995  
                                 i1l8187 0977                                   i1l8179 12C7  
                                 i1l8099 0F69                                   i1l8427 0A5B  
                                 i1l8419 0A3F                                   i1l8355 0B03  
                                 i1l8347 0AE3                                   i1l8339 0AC7  
                                 i1l8515 0C87                                   i1l8507 0C76  
                                 i1l7645 0A2F                                   i1l7637 0A18  
                                 i1l7629 09FC                                   i1l7661 0927  
                                 i1l7653 0917                                   i1l7573 170E  
                                 i1l7565 16EF                                   i1l7557 16DD  
                                 i1l7733 054D                                   i1l7821 13AE  
                                 i1l7901 0BB1                                   i1l7805 13F3  
                                 i1l7725 14EC                                   i1l7717 14E0  
                                 i1l7709 14CE                                   i1l8373 0DA5  
                                 i1l8381 0DCD                                   i1l8365 0D80  
                                 i1l8197 099C                                   i1l8189 097D  
                                 i1l8429 0A62                                   i1l8437 0A77  
                                 i1l8349 0AE7                                   i1l8357 0B06  
                                 i1l8517 0C8C                                   i1l8509 0C77  
                                 i1l7639 0A1F                                   i1l7671 093F  
                                 i1l7663 092D                                   i1l7655 091C  
                                 i1l7815 151C                                   i1l7575 170F  
                                 i1l7567 16F3                                   i1l7559 16DF  
                                 i1l7591 15FF                                   i1l7583 15EB  
                                 i1l7751 05C7                                   i1l7743 057B  
                                 i1l7735 0563                                   i1l7727 0534  
                                 i1l7823 13B0                                   i1l7903 0BDD  
                                 i1l7807 13F3                                   i1l7719 14E4  
                                 i1l8391 0DE3                                   i1l8383 0DD3  
                                 i1l8375 0DA9                                   i1l8367 0D8C  
                                 i1l8359 0D57                                   i1l7911 006A  
                                 i1l8199 09A3                                   i1l8519 0C92  
                                 u400_20 1431                                   i1l7841 1323  
                                 i1l7833 1318                                   i1l7681 0961  
                                 i1l7673 0949                                   i1l7665 0930  
                                 i1l7657 091E                                   i1l7649 0912  
                                 i1l7817 1542                                   i1l7577 1716  
                                 i1l7569 16F7                                   i1l7593 1603  
                                 i1l7585 15F1                                   i1l7761 05E9  
                                 i1l7745 05A5                                   i1l7753 05CD  
                                 i1l7737 056D                                   i1l7729 0535  
                                 i1l7825 13B1                                   i1l7905 0C00  
                                 i1l7809 1400                                   i1l8385 0DD7  
                                 i1l8377 0DC0                                   i1l8369 0D98  
                                 u400_21 1430                                   i1l7921 00A1  
                                 i1l7913 0084                                   i1l8481 0C0A  
                                 i1l7843 1325                                   i1l7835 1319  
                                 i1l7683 0966                                   i1l7675 094F  
                                 i1l7667 0937                                   i1l7659 0922  
                                 i1l7579 171C                                   i1l7595 160D  
                                 i1l7587 15F4                                   i1l7771 0619  
                                 i1l7755 05E7                                   i1l7747 05BF  
                                 i1l7739 0577                                   i1l7827 13B5  
                                 i1l7691 147A                                   i1l7851 14F3  
                                 i1l8387 0DDD                                   i1l8395 0DED  
                                 i1l8379 0DC6                                   i1l7931 0105  
                                 i1l7923 00AA                                   i1l7915 0089  
                                 i1l7907 004E                                   i1l8491 0C23  
                                 i1l8483 0C0E                                   i1l7845 132A  
                                 i1l7837 131D                                   i1l7677 0956  
                                 i1l7669 093B                                   i1l7597 1613  
                                 i1l7589 15FB                                   i1l7781 0659  
                                 i1l7773 062B                                   i1l7765 0609  
                                 i1l7749 05C3                                   i1l7829 13C6  
                                 i1l7693 1481                                   i1l7861 1517  
                                 i1l7853 14FA                                   i1l8397 0DF9  
                                 i1l8389 0DDE                                   i1l7933 011E  
                                 i1l7941 0153                                   i1l7925 00C1  
                                 i1l7917 0092                                   i1l7909 0065  
                                 i1l8493 0C27                                   i1l8485 0C14  
                                 i1l7839 1321                                   i1l7679 095C  
                                 i1l7599 161A                                   i1l7783 0689  
                                 i1l7791 06C4                                   i1l7775 0641  
                                 i1l7767 060D                                   i1l7695 1488  
                                 i1l7687 146B                                   i1l7871 14A6  
                                 i1l8399 0E03                                   i1l7951 017D  
                                 i1l7943 015A                                   i1l7935 0141  
                                 i1l7927 00D1                                   i1l7919 0097  
                                 i1l8495 0C33                                   i1l8487 0C1A  
                                 u401_20 1437                                   i1l7881 0B16  
                                 i1l7785 069B                                   i1l7777 064B  
                                 i1l7769 0613                                   i1l7793 06CF  
                                 i1l7697 148B                                   i1l7689 146F  
                                 i1l7857 1501                                   i1l7849 14EF  
                                 i1l7873 14AC                                   u401_21 1436  
                                 i1l7961 01D0                                   i1l7953 0185  
                                 i1l7945 015F                                   i1l7937 014A  
                                 i1l7929 00D3                                   i1l8497 0C58  
                                 i1l8489 0C1F                                   i1l7891 0B3A  
                                 i1l7883 0B2C                                   i1l7787 06B1  
                                 i1l7779 0654                                   i1l7699 148F  
                                 i1l7859 1511                                   i1l7875 14B2  
                                 i1l7867 1494                                   i1l7971 021B  
                                 i1l7963 01D7                                   i1l7955 018F  
                                 i1l7947 016B                                   i1l7939 014F  
                                 i1l8851 0A7F                                   i1l8499 0C62  
                                 i1l7893 0B6D                                   i1l7885 0B31  
                                 i1l7789 06BB                                   i1l7869 1498  
                                 i1l7877 12F2                                   i1l7981 0250  
                                 i1l7973 0245                                   i1l7965 01EC  
                                 i1l7957 01B5                                   i1l7949 0177  
                                 i1l8861 0903                                   i1l8853 17F4  
                                 i1l7879 0B0E                                   i1l7799 1343  
                                 i1l8863 02CF                                   i1l7991 0270  
                                 i1l7983 0256                                   i1l7967 01FF  
                                 i1l7959 01C7                                   i1l8855 0FD5  
                                 u402_20 143D                                   i1l8865 1509  
                                 i1l7897 0B83                                   u402_21 143C  
                                 i1l7993 029A                                   i1l7985 025C  
                                 i1l7969 0211                                   i1l8857 0FF4  
                                 i1l8867 0593                                   i1l7899 0B9A  
                                 i1l7995 029F                                   i1l7987 0261  
                                 i1l7979 0248                                   i1l8859 09BE  
                                 i1l7989 026B                                   i1l7999 02C7  
                                 u800_20 145D                                   u800_21 145C  
                                 u801_20 1468                                   u801_21 1467  
                                 u730_20 16E5                                   u802_20 0E65  
                                 u810_20 17B8                                   u730_21 16E4  
                                 u802_21 0E64                                   u810_21 17B7  
                                 u803_20 0E76                                   u811_20 17DA  
                                 u803_21 0E75                                   u811_21 17D9  
                                 u731_25 16E9                                   u732_20 16F7  
                                 u740_20 160D                                   u812_20 12BF  
                                 u804_20 0ECB                                   u732_21 16F6  
                                 u740_21 160C                                   u812_21 12BE  
                                 u804_21 0ECA                                   u740_25 1609  
                                 u813_20 12CD                                   u805_20 0F0C  
                                 u813_21 12CC                                   u805_21 0F0B  
                              ??i1_putch 0071                                   u733_25 16F8  
                                 u741_25 1614                                   u805_25 0F08  
                                 u734_20 1708                                   u742_20 1620  
                                 u830_20 0DA5                                   u814_20 0977  
                                 u806_20 0F34                                   u734_21 1707  
                                 u742_21 161F                                   u830_21 0DA4  
                                 u814_21 0976                                   u806_21 0F33  
                                 u750_25 0A19                                   u734_25 1704  
                                 u806_25 0F30                                   u751_20 0A25  
                                 u743_20 09D2                                   u831_20 0DCC  
                                 u399_20 142B                                   u815_20 098F  
                                 u807_20 0F4A                                   u751_21 0A24  
                                 u743_21 09D1                                   u831_21 0DCB  
                                 u399_21 142A                                   u815_21 098E  
                                 u807_21 0F49                                   u735_25 1710  
                                 u807_25 0F46                                   u752_20 0A2A  
                                 u744_20 09DD                                   u760_20 095C  
                                 u736_20 171C                                   u832_20 0DD3  
                                 u816_20 08C7                                   u808_20 0F8A  
                                 u840_20 0C14                                   u752_21 0A29  
                                 u744_21 09DC                                   u760_21 095B  
                                 u736_21 171B                                   u832_21 0DD2  
                                 u816_21 08C6                                   u808_21 0F89  
                                 u840_21 0C13                                   u745_20 09EE  
                                 u761_20 0961                                   u753_20 0917  
                                 u737_20 15F1                                   u833_20 0DDD  
                                 u809_20 12E9                                   u817_20 08D8  
                                 u841_20 0C1A                                   u745_21 09ED  
                                 u761_21 0960                                   u753_21 0916  
                                 u737_21 15F0                                   u833_21 0DDC  
                                 u809_21 12E8                                   u817_21 08D7  
                                 u841_21 0C19                                   u754_20 0922  
                                 u770_20 053B                                   u762_20 146F  
                                 u834_20 0E03                                   u842_20 0C23  
                                 u754_21 0921                                   u770_21 053A  
                                 u762_21 146E                                   u834_21 0E02  
                                 u842_21 0C22                                   u746_25 09F2  
                                 u738_25 15F5                                   u834_25 0DFF  
                             __i1fptable 0042                                   u747_20 0A00  
                                 u755_20 092D                                   u739_20 1603  
                                 u771_20 054D                                   u763_20 147A  
                                 u835_20 0E19                                   u843_20 0C27  
                                 u747_21 09FF                                   u755_21 092C  
                                 u739_21 1602                                   u771_21 054C  
                                 u763_21 1479                                   u835_21 0E18  
                                 u843_21 0C26                                   u835_25 0E15  
                                 u780_20 06E7                                   u772_20 05A5  
                                 u764_20 1481                                   u836_20 0E59  
                                 u780_21 06E6                                   u772_21 05A4  
                                 u764_21 1480                                   u836_21 0E58  
                                 u748_25 0A01                                   u756_25 0931  
                                 u844_25 0C36                                   u860_27 1356  
                                 u781_20 131D                                   u749_20 0A11  
                                 u757_20 093F                                   u773_20 05C3  
                                 u765_20 1488                                   u829_20 0B0C  
                                 u845_20 0C62                                   u781_21 131C  
                                 u749_21 0A10                                   u757_21 093E  
                                 u773_21 05C2                                   u765_21 1487  
                                 u829_21 0B0B                                   u845_21 0C61  
                                 u749_25 0A0D                                   u845_25 0C5E  
                                 u861_27 1519                                   u782_20 132A  
                                 u758_20 0949                                   u774_20 0608  
                                 u790_20 0B8D                                   u766_20 1334  
                                 u846_20 0C7B                                   u782_21 1329  
                                 u758_21 0948                                   u774_21 0607  
                                 u766_21 1333                                   u846_21 0C7A  
                                 u758_25 0945                                   u774_25 0604  
                                 u862_27 148D                                   u775_20 0613  
                                 u783_20 14A6                                   u767_20 14C8  
                                 u791_20 0056                                   u847_20 0C7F  
                                 u839_20 0C0E                                   u775_21 0612  
                                 u783_21 14A5                                   u767_21 14C7  
                                 u847_21 0C7E                                   u839_21 0C0D  
                                 u759_25 0950                                   u863_27 0B2E  
                                 u855_27 0ACB                                   u776_20 0619  
                                 u784_20 14AC                                   u768_20 14DB  
                                 u792_20 0097                                   u848_20 0C8C  
                                 u776_21 0618                                   u784_21 14AB  
                                 u768_21 14DA                                   u792_21 0096  
                                 u848_21 0C8B                                   u856_27 0AD6  
                                 u777_20 062B                                   u785_20 14C0  
                                 u769_20 14EC                                   u793_20 0159  
                                 u777_21 062A                                   u785_21 14BF  
                                 u769_21 14EB                                   u793_21 0158  
                                 u857_27 0AEB                                   u786_20 0B3A  
                                 u778_20 069B                                   u794_20 017D  
                                 u786_21 0B39                                   u778_21 069A  
                                 u794_21 017C                                   u858_27 0AFF  
                                 u779_20 06CF                                   u795_20 0185  
                                 u787_21 0B50                                   u779_21 06CE  
                                 u795_21 0184                                   u787_22 0B57  
                                 u787_23 0B5E                                   u859_27 141E  
                                 u788_20 0B6D                                   u796_20 025C  
                                 u788_21 0B6C                                   u796_21 025B  
                                 u789_20 0B7B                                   u789_25 0B76  
                                 u797_25 0277                                   u798_20 1448  
                                 u798_21 1447                                   u799_20 1455  
                                 u799_21 1454                                   _TRISB0 0430  
                                 _TRISB1 0431                                   _TRISC0 0438  
                                 _TRISB2 0432                                   _TRISC1 0439  
                                 _TRISC2 043A                                   _TRISB4 0434  
                                 _TRISB5 0435                                   _TRISB6 0436  
                                 _TRISB7 0437                                   _TRISC6 043E  
                                 _TRISC7 043F                         __end_of__fptable 0042  
                       __end_of_lcd_init 1660                         __end_of_lcd_goto 15EB  
                                 ___bmul 1317                         __end_of_lcd_puts 1767  
                   ?_estado_executa_muda 0070                                   _canais 074C  
                              ??___awdiv 0074                                ??___lbdiv 0072  
                              ??___awmod 0074                             ?_timer0_init 0070  
                       estado_maquina@op 00A2                                ??___lwdiv 00B1  
                              ??___lwmod 00B8       estado_menu_conf_quant_sensores@opt 0062  
                              ??__doprnt 01C1                         ___awdiv@quotient 0076  
                        ___awmod@divisor 0070                         __end_of_mq_gl_r0 079E  
                   __end_of_eeprom_write 15B4                             __doprnt@flag 01C6  
                        ___awmod@counter 0074                                   _printf 13CD  
                              ??_handler 00A3                             __doprnt@prec 01C5  
                    _adcon_captura_grava 0D57                                   fptable 0039  
                      __end_ofi1___lwdiv 1721                                   fptotal 0002  
                      __end_ofi1___lwmod 1625                        __end_ofi1__doprnt 06E8  
                                 saved_w 007E                                   putch@c 00AD  
                              ??_sprintf 007C                         ___lbdiv@dividend 0072  
                       __end_ofexp@coeff 0778                         __end_oflog@coeff 079C  
                __end_of__initialization 0035               estado_menu_principal@i_918 006D  
                        eeprom_read@addr 00AD                     ?_adcon_captura_grava 0070  
             estado_menu_principal@maior 0065             __end_ofi1_eeprom_gravar_word 1304  
             estado_menu_principal@menor 0067                     estado_executa_muda@i 0061  
             estado_menu_principal@t_int 006E                            i1_eeprom_read 132C  
                    ___bmul@multiplicand 0070                    ??_estado_executa_muda 003C  
                         __pcstackCOMMON 0070                             __pidataBANK1 12D4  
          estado_menu_principal@qtd_sens 006A                            __end_of_putch 0700  
                       ___lbdiv@quotient 0074                               _adcon_init 135C  
                         i1__doprnt@flag 002B                           _OPTION_REGbits 0081  
                         i1__doprnt@prec 002A                          _adcon_ler_canal 0B0D  
               __end_of_estado_ver_todos 1800                               _rs232_init 1375  
                           i1lcd_write@c 0071                        eeprom_write@value 00AD  
                  eeprom_gravar_word@end 00B1                               __doprnt@ap 00BD  
                             __doprnt@pb 00B9                                  ??_putch 00AE  
                             __pbssBANK1 00C0                               __pbssBANK3 0190  
                    estado_ver_todos@opt 0062                 i1eeprom_gravar_word@dado 0072  
                  ??_adcon_captura_grava 007D                  ??_estado_menu_principal 0062  
                        handler@count_t0 00CD                           ?i1_eeprom_read 0070  
                             __pmaintext 0CA0                                  ?___bmul 0070  
                           ?i1_lcd_write 0070                         adcon_ler_canal@i 007B  
                             __pintentry 0004                          handler@pos_taxa 00AA  
                      ??_eeprom_ler_word 0073                                  ?_printf 01CA  
                     adcon_ler_canal@acc 0077                       adcon_ler_canal@cnl 0076  
                     _menu_tempo_amostra 0712                                ?_lcd_init 0070  
                              ?_lcd_goto 00AF                                ?_lcd_puts 00AD  
                             __stringtab 0700                 estado_captura_mostra@opt 007C  
                      ??_rs232_transmite 0073                                  i1_putch 0003  
                      estado_inicial@opt 0070                                  i1fpbase 0047  
                             _btns_testa 1418                        __end_of_lcd_clear 135C  
             estado_executa_muda@qtd_val 0051               __end_of_eeprom_gravar_word 06FF  
             estado_executa_muda@posicao 0052                        estado_max_min@opt 007C  
               adcon_captura_grava@i_646 005A                                  ___awdiv 09CD  
                                ___lbdiv 1441                                  ___awmod 0912  
                      __end_of_lcd_write 16DD                                  ___lwdiv 1767  
                                ___lwmod 1660                  __end_of_adcon_ler_canal 0B83  
                                __doprnt 02F0                 adcon_captura_grava@maior 0050  
               adcon_captura_grava@menor 0052                        __end_of_btns_init 157F  
               adcon_captura_grava@t_int 005B                                  _handler 0C0A  
               rs232_transmite@qtd_bytes 0077                                  __ptext1 08AF  
                                __ptext2 1375                                  __ptext3 13CD  
                                __ptext4 02F0                                  __ptext5 06FF  
                                __ptext6 1660                                  __ptext7 1767  
                                __ptext8 1721                                  __ptext9 1625  
                    __size_of__i1fptable 0009                              ?_adcon_init 0070  
         estado_executa_muda@novo_estado 0053                                  _dpowers 073A  
                      i1___lwdiv@divisor 0070                        i1___lwdiv@counter 0074  
                       ___awmod@dividend 0072                     i1_eeprom_gravar_word 12F1  
                            ?_rs232_init 0070                             ??i1_lcd_goto 0073  
                           ??i1_lcd_puts 0075               adcon_captura_grava@qtd_val 0058  
             adcon_captura_grava@posicao 0056                                  _sprintf 13AB  
                                clrloop0 12B1                               ??_lcd_init 00AF  
                             ??_lcd_goto 00B0                               ??_lcd_puts 00AF  
                   end_of_initialization 0035                  eeprom_ler_word@temp_int 0076  
                        ??i1_eeprom_read 0070                             _eeprom_write 157F  
            __end_of_menu_quant_sensores 073A                               fp_i1_putch 0048  
                   adcon_captura_grava@i 0059                     adcon_captura_grava@x 0054  
       ??_estado_menu_conf_tempo_amostra 007C          ?_estado_menu_conf_tempo_amostra 0070  
                              _RCSTAbits 0018                                  printf@f 01CA  
                     __end_ofi1_lcd_goto 151C                             __pstringtext 0700  
                     __end_ofi1_lcd_puts 14C1                    ?i1_eeprom_gravar_word 0072  
               _estado_executa_muda$1887 005D                 _estado_executa_muda$1888 005F  
                         _estado_inicial 12A9                           _estado_max_min 12B8  
                              i1___lwdiv 16DD                           _estado_maquina 0A34  
                              i1___lwmod 15EB                                i1__doprnt 0534  
                  _estado_captura_mostra 12E2                            ??_eeprom_read 00AD  
                              _TXSTAbits 0098                              ?_btns_testa 0070  
                         i1_eeprom_write 14C1                               lcd_write@c 00AE  
                         __end_of___bmul 132C                           __end_of_canais 0750  
                       ?_adcon_ler_canal 0070                        i1___lwmod@divisor 0077  
                      i1___lwmod@counter 007B                           __end_of_printf 13F2  
                 __end_of_estado_inicial 12B0                      start_initialization 0015  
                 __end_of_estado_max_min 12C6                   __end_of_estado_maquina 0A9D  
                      ?_estado_ver_todos 0070                              __end_of_div 154B  
                             ?i1___lwdiv 0070                               ?i1___lwmod 0077  
                             ?i1__doprnt 0020                       ??_estado_ver_todos 007C  
                 __end_ofi1_eeprom_write 14EE              __end_of_estado_executa_muda 02F0  
                        _eeprom_ler_word 13F2                            i1lcd_puts@cmd 0075  
                          i1lcd_puts@str 0073            __end_of_estado_menu_principal 1000  
                 eeprom_gravar_word@dado 00AF                                 ??___bmul 0071  
                    __end_of_eeprom_read 13AB                               init_fetch0 1304  
                    __end_of_LCD_POSICAO 074C                              __doprnt@val 01C7  
                            __pdataBANK1 00D3                                 ??_printf 00BF  
                 ??i1_eeprom_gravar_word 0074                          _rs232_transmite 0A9D  
                     __end_of__i1fptable 004B                          ?_estado_inicial 0070  
                              ___latbits 0002                          ?_estado_max_min 0070  
                          __pcstackBANK0 0020                            __pcstackBANK1 00A0  
                          __pcstackBANK3 01C1                          ?_estado_maquina 0070  
           estado_menu_principal@qtd_val 006B             estado_menu_principal@posicao 0069  
                      __size_of__fptable 0009                   _gl_item_menu_principal 00D1  
            __end_of_adcon_captura_grava 0E5A                   _gl_item_menu_ver_todos 00D0  
                 ?_estado_captura_mostra 0070                         eeprom_write@addr 00AE  
                               ?i1_putch 0070                                __doprnt@c 01C9  
                              __doprnt@f 00BB                          ?i1_eeprom_write 0070  
                       rs232_transmite@i 0079                         rs232_transmite@x 0078  
                       ___lwdiv@dividend 00AF                      i1eeprom_write@value 0070  
                              __pfunctab 0039                                 ?___awdiv 0070  
                               ?___lbdiv 0071                                 ?___awmod 0070  
                               ?___lwdiv 00AD                                 ?___lwmod 00B4  
                               ?__doprnt 00B9                                _lcd_clear 1343  
                              _gl_estado 00D2                             _menu_inicial 00D3  
                               ?_handler 0070                                _lcd_write 169C  
                           ??_adcon_init 00AD                                _btns_init 154B  
                     _eeprom_gravar_word 06E8                             ??_rs232_init 00AD  
                          ?_adcon_mostra 003C                           mq_mostra@F1381 01B1  
                         mq_mostra@F1383 01A1                         ___lwdiv@quotient 00B2  
                            ??i1___lwdiv 0074                              ??i1___lwmod 007B  
                __end_of_eeprom_ler_word 1418                                 ?_sprintf 002F  
                            ??i1__doprnt 0026                  rs232_transmite@qtd_sens 0076  
                    ?_eeprom_gravar_word 00AF                        interrupt_function 0004  
                              clear_ram0 12B0                              _eeprom_read 138E  
                              div@number 0078                                 _PIE1bits 008C  
                            _LCD_POSICAO 0744                       __end_of_adcon_init 1375  
                               _PIR1bits 000C                            ??_timer0_init 00AD  
                     __end_of_rs232_init 138E                  __end_of_rs232_transmite 0B0D  
                   ??_eeprom_gravar_word 00B1                               ?_lcd_clear 0070  
                             _ADCON0bits 001F                              __stringbase 0712  
                             _ADCON1bits 009F                               ?_lcd_write 0070  
                              lcd_goto@x 00AF                                lcd_goto@y 00B2  
                             ?_btns_init 0070                           ??_adcon_mostra 003F  
 __end_of_estado_menu_conf_tempo_amostra 09CD           _estado_menu_conf_tempo_amostra 096B  
                               i1fptable 0042                                 i1fptotal 0002  
            estado_executa_muda@endereco 0057                                 i1putch@c 0070  
                           ??_btns_testa 0070                    __end_ofi1_eeprom_read 1343  
                             _EECON1bits 018C              estado_executa_muda@temp_int 0054  
            estado_executa_muda@qtd_sens 0056                       __end_of__stringtab 0712  
             __end_of_estado_menu_limpar 12D4                      __end_of_timer0_init 08BC  
                               __fptable 0039                       i1eeprom_write@addr 0071  
__end_of_estado_menu_conf_quant_sensores 0912        ??_estado_menu_conf_quant_sensores 007C  
       ?_estado_menu_conf_quant_sensores 0070          _estado_menu_conf_quant_sensores 08BC  
                     __end_of_btns_testa 1441                          ___lwdiv@divisor 00AD  
                        ___lwdiv@counter 00B1                            handler@option 00AC  
                               __ptext10 15B4                                 __ptext11 169C  
                               __ptext20 17AD                                 __ptext12 138E  
                               __ptext21 1441                                 __ptext13 06E8  
                               __ptext30 1418                                 __ptext22 0E5A  
                               __ptext14 157F                                 __ptext31 0D57  
                               __ptext23 12C6                                 __ptext15 154B  
                               __ptext40 146A                                 __ptext32 12F1  
                               __ptext24 096B                                 __ptext16 135C  
                               __ptext41 13AB                                 __ptext33 14C1  
                               __ptext25 08BC                                 __ptext17 0C0A  
                               __ptext50 0B0D                                 __ptext42 0534  
                               __ptext34 1343                                 __ptext26 12B8  
                               __ptext18 0A9D                                 __ptext43 0003  
                               __ptext35 13F2                                 __ptext27 12A9  
                               __ptext19 0A34                                 __ptext44 15EB  
                               __ptext36 132C                                 __ptext28 12E2  
                               __ptext45 16DD                                 __ptext37 0B83  
                               __ptext29 004B                                 __ptext46 151C  
                               __ptext38 1494                                 __ptext47 0912  
                               __ptext39 14EE                                 __ptext48 09CD  
                               __ptext49 1317                                 _lcd_init 1625  
                               _lcd_goto 15B4                         ?_eeprom_ler_word 0071  
                               _lcd_puts 1721                        i1eeprom_read@addr 0070  
                     i1___lwdiv@dividend 0072                   rs232_transmite@qtd_val 0075  
                               _mq_gl_r0 079C                                 div@denom 007A  
                          ??i1_lcd_write 0070                         ?_rs232_transmite 0070  
            adcon_captura_grava@qtd_sens 0057                                 fp__putch 003F  
                            ??_lcd_clear 0072                         ??_estado_inicial 007C  
                       ??_estado_max_min 007C                         ??_estado_maquina 00A0  
                            ??_lcd_write 00AD                                 exp@coeff 0750  
                     i1___lwdiv@quotient 0075                                 log@coeff 0778  
                            ??_btns_init 00AD                               _INTCONbits 000B  
                ??_estado_captura_mostra 007C                                 init_ram0 1308  
                       ??i1_eeprom_write 0071                                 intlevel1 0039  
                              sprintf@ap 0038                                sprintf@pb 003A  
                              sprintf@wh 0037                         ___lwmod@dividend 00B6  
                              stringcode 070A                     __end_of_adcon_mostra 0C0A  
                          adcon_mostra@i 003E                    _estado_menu_principal 0E5A  
                               printf@ap 01CC                                 printf@pb 01CE  
                            _timer0_init 08AF                    estado_menu_limpar@opt 007C  
                    __end_ofi1_lcd_write 1494                                 sprintf@f 002F  
                        ___lwmod@divisor 00B4                          ___lwmod@counter 00B8  
                               stringtab 0700                        adcon_mostra@F1474 00C0  
                   handler@tempo_amostra 00A8                     adcon_mostra@temp_div 004C  
                   adcon_mostra@temp_str 0043                            ?_eeprom_write 00AD  
                             _STATUSbits 0003                             ?_eeprom_read 0070  
            _gl_item_menu_config_amostra 00CB                        adcon_mostra@t_int 003C  
