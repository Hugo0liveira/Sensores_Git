

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Aug 30 18:49:48 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2,group=3
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2,group=3
    64                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text50,local,class=CODE,merge=1,delta=2
    68                           	psect	functab,global,class=ENTRY,delta=2
    69                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    71                           	dabs	1,0x7E,2
    72     0000                     
    73                           ; Generated 22/03/2023 GMT
    74                           ; 
    75                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution. Publication is not required when
    89                           ;        this file is used in an embedded application.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC16F886 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0089                     	;# 
   146     008C                     	;# 
   147     008D                     	;# 
   148     008E                     	;# 
   149     008F                     	;# 
   150     0090                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0093                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0095                     	;# 
   158     0096                     	;# 
   159     0097                     	;# 
   160     0098                     	;# 
   161     0099                     	;# 
   162     009A                     	;# 
   163     009B                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     009E                     	;# 
   167     009F                     	;# 
   168     0105                     	;# 
   169     0107                     	;# 
   170     0108                     	;# 
   171     0109                     	;# 
   172     010C                     	;# 
   173     010C                     	;# 
   174     010D                     	;# 
   175     010E                     	;# 
   176     010F                     	;# 
   177     0185                     	;# 
   178     0187                     	;# 
   179     0188                     	;# 
   180     0189                     	;# 
   181     018C                     	;# 
   182     018D                     	;# 
   183     0000                     	;# 
   184     0001                     	;# 
   185     0002                     	;# 
   186     0003                     	;# 
   187     0004                     	;# 
   188     0005                     	;# 
   189     0006                     	;# 
   190     0007                     	;# 
   191     0009                     	;# 
   192     000A                     	;# 
   193     000B                     	;# 
   194     000C                     	;# 
   195     000D                     	;# 
   196     000E                     	;# 
   197     000E                     	;# 
   198     000F                     	;# 
   199     0010                     	;# 
   200     0011                     	;# 
   201     0012                     	;# 
   202     0013                     	;# 
   203     0014                     	;# 
   204     0015                     	;# 
   205     0015                     	;# 
   206     0016                     	;# 
   207     0017                     	;# 
   208     0018                     	;# 
   209     0019                     	;# 
   210     001A                     	;# 
   211     001B                     	;# 
   212     001B                     	;# 
   213     001C                     	;# 
   214     001D                     	;# 
   215     001E                     	;# 
   216     001F                     	;# 
   217     0081                     	;# 
   218     0085                     	;# 
   219     0086                     	;# 
   220     0087                     	;# 
   221     0089                     	;# 
   222     008C                     	;# 
   223     008D                     	;# 
   224     008E                     	;# 
   225     008F                     	;# 
   226     0090                     	;# 
   227     0091                     	;# 
   228     0092                     	;# 
   229     0093                     	;# 
   230     0093                     	;# 
   231     0093                     	;# 
   232     0094                     	;# 
   233     0095                     	;# 
   234     0096                     	;# 
   235     0097                     	;# 
   236     0098                     	;# 
   237     0099                     	;# 
   238     009A                     	;# 
   239     009B                     	;# 
   240     009C                     	;# 
   241     009D                     	;# 
   242     009E                     	;# 
   243     009F                     	;# 
   244     0105                     	;# 
   245     0107                     	;# 
   246     0108                     	;# 
   247     0109                     	;# 
   248     010C                     	;# 
   249     010C                     	;# 
   250     010D                     	;# 
   251     010E                     	;# 
   252     010F                     	;# 
   253     0185                     	;# 
   254     0187                     	;# 
   255     0188                     	;# 
   256     0189                     	;# 
   257     018C                     	;# 
   258     018D                     	;# 
   259     0000                     	;# 
   260     0001                     	;# 
   261     0002                     	;# 
   262     0003                     	;# 
   263     0004                     	;# 
   264     0005                     	;# 
   265     0006                     	;# 
   266     0007                     	;# 
   267     0009                     	;# 
   268     000A                     	;# 
   269     000B                     	;# 
   270     000C                     	;# 
   271     000D                     	;# 
   272     000E                     	;# 
   273     000E                     	;# 
   274     000F                     	;# 
   275     0010                     	;# 
   276     0011                     	;# 
   277     0012                     	;# 
   278     0013                     	;# 
   279     0014                     	;# 
   280     0015                     	;# 
   281     0015                     	;# 
   282     0016                     	;# 
   283     0017                     	;# 
   284     0018                     	;# 
   285     0019                     	;# 
   286     001A                     	;# 
   287     001B                     	;# 
   288     001B                     	;# 
   289     001C                     	;# 
   290     001D                     	;# 
   291     001E                     	;# 
   292     001F                     	;# 
   293     0081                     	;# 
   294     0085                     	;# 
   295     0086                     	;# 
   296     0087                     	;# 
   297     0089                     	;# 
   298     008C                     	;# 
   299     008D                     	;# 
   300     008E                     	;# 
   301     008F                     	;# 
   302     0090                     	;# 
   303     0091                     	;# 
   304     0092                     	;# 
   305     0093                     	;# 
   306     0093                     	;# 
   307     0093                     	;# 
   308     0094                     	;# 
   309     0095                     	;# 
   310     0096                     	;# 
   311     0097                     	;# 
   312     0098                     	;# 
   313     0099                     	;# 
   314     009A                     	;# 
   315     009B                     	;# 
   316     009C                     	;# 
   317     009D                     	;# 
   318     009E                     	;# 
   319     009F                     	;# 
   320     0105                     	;# 
   321     0107                     	;# 
   322     0108                     	;# 
   323     0109                     	;# 
   324     010C                     	;# 
   325     010C                     	;# 
   326     010D                     	;# 
   327     010E                     	;# 
   328     010F                     	;# 
   329     0185                     	;# 
   330     0187                     	;# 
   331     0188                     	;# 
   332     0189                     	;# 
   333     018C                     	;# 
   334     018D                     	;# 
   335     0000                     	;# 
   336     0001                     	;# 
   337     0002                     	;# 
   338     0003                     	;# 
   339     0004                     	;# 
   340     0005                     	;# 
   341     0006                     	;# 
   342     0007                     	;# 
   343     0009                     	;# 
   344     000A                     	;# 
   345     000B                     	;# 
   346     000C                     	;# 
   347     000D                     	;# 
   348     000E                     	;# 
   349     000E                     	;# 
   350     000F                     	;# 
   351     0010                     	;# 
   352     0011                     	;# 
   353     0012                     	;# 
   354     0013                     	;# 
   355     0014                     	;# 
   356     0015                     	;# 
   357     0015                     	;# 
   358     0016                     	;# 
   359     0017                     	;# 
   360     0018                     	;# 
   361     0019                     	;# 
   362     001A                     	;# 
   363     001B                     	;# 
   364     001B                     	;# 
   365     001C                     	;# 
   366     001D                     	;# 
   367     001E                     	;# 
   368     001F                     	;# 
   369     0081                     	;# 
   370     0085                     	;# 
   371     0086                     	;# 
   372     0087                     	;# 
   373     0089                     	;# 
   374     008C                     	;# 
   375     008D                     	;# 
   376     008E                     	;# 
   377     008F                     	;# 
   378     0090                     	;# 
   379     0091                     	;# 
   380     0092                     	;# 
   381     0093                     	;# 
   382     0093                     	;# 
   383     0093                     	;# 
   384     0094                     	;# 
   385     0095                     	;# 
   386     0096                     	;# 
   387     0097                     	;# 
   388     0098                     	;# 
   389     0099                     	;# 
   390     009A                     	;# 
   391     009B                     	;# 
   392     009C                     	;# 
   393     009D                     	;# 
   394     009E                     	;# 
   395     009F                     	;# 
   396     0105                     	;# 
   397     0107                     	;# 
   398     0108                     	;# 
   399     0109                     	;# 
   400     010C                     	;# 
   401     010C                     	;# 
   402     010D                     	;# 
   403     010E                     	;# 
   404     010F                     	;# 
   405     0185                     	;# 
   406     0187                     	;# 
   407     0188                     	;# 
   408     0189                     	;# 
   409     018C                     	;# 
   410     018D                     	;# 
   411     0000                     	;# 
   412     0001                     	;# 
   413     0002                     	;# 
   414     0003                     	;# 
   415     0004                     	;# 
   416     0005                     	;# 
   417     0006                     	;# 
   418     0007                     	;# 
   419     0009                     	;# 
   420     000A                     	;# 
   421     000B                     	;# 
   422     000C                     	;# 
   423     000D                     	;# 
   424     000E                     	;# 
   425     000E                     	;# 
   426     000F                     	;# 
   427     0010                     	;# 
   428     0011                     	;# 
   429     0012                     	;# 
   430     0013                     	;# 
   431     0014                     	;# 
   432     0015                     	;# 
   433     0015                     	;# 
   434     0016                     	;# 
   435     0017                     	;# 
   436     0018                     	;# 
   437     0019                     	;# 
   438     001A                     	;# 
   439     001B                     	;# 
   440     001B                     	;# 
   441     001C                     	;# 
   442     001D                     	;# 
   443     001E                     	;# 
   444     001F                     	;# 
   445     0081                     	;# 
   446     0085                     	;# 
   447     0086                     	;# 
   448     0087                     	;# 
   449     0089                     	;# 
   450     008C                     	;# 
   451     008D                     	;# 
   452     008E                     	;# 
   453     008F                     	;# 
   454     0090                     	;# 
   455     0091                     	;# 
   456     0092                     	;# 
   457     0093                     	;# 
   458     0093                     	;# 
   459     0093                     	;# 
   460     0094                     	;# 
   461     0095                     	;# 
   462     0096                     	;# 
   463     0097                     	;# 
   464     0098                     	;# 
   465     0099                     	;# 
   466     009A                     	;# 
   467     009B                     	;# 
   468     009C                     	;# 
   469     009D                     	;# 
   470     009E                     	;# 
   471     009F                     	;# 
   472     0105                     	;# 
   473     0107                     	;# 
   474     0108                     	;# 
   475     0109                     	;# 
   476     010C                     	;# 
   477     010C                     	;# 
   478     010D                     	;# 
   479     010E                     	;# 
   480     010F                     	;# 
   481     0185                     	;# 
   482     0187                     	;# 
   483     0188                     	;# 
   484     0189                     	;# 
   485     018C                     	;# 
   486     018D                     	;# 
   487     0000                     	;# 
   488     0001                     	;# 
   489     0002                     	;# 
   490     0003                     	;# 
   491     0004                     	;# 
   492     0005                     	;# 
   493     0006                     	;# 
   494     0007                     	;# 
   495     0009                     	;# 
   496     000A                     	;# 
   497     000B                     	;# 
   498     000C                     	;# 
   499     000D                     	;# 
   500     000E                     	;# 
   501     000E                     	;# 
   502     000F                     	;# 
   503     0010                     	;# 
   504     0011                     	;# 
   505     0012                     	;# 
   506     0013                     	;# 
   507     0014                     	;# 
   508     0015                     	;# 
   509     0015                     	;# 
   510     0016                     	;# 
   511     0017                     	;# 
   512     0018                     	;# 
   513     0019                     	;# 
   514     001A                     	;# 
   515     001B                     	;# 
   516     001B                     	;# 
   517     001C                     	;# 
   518     001D                     	;# 
   519     001E                     	;# 
   520     001F                     	;# 
   521     0081                     	;# 
   522     0085                     	;# 
   523     0086                     	;# 
   524     0087                     	;# 
   525     0089                     	;# 
   526     008C                     	;# 
   527     008D                     	;# 
   528     008E                     	;# 
   529     008F                     	;# 
   530     0090                     	;# 
   531     0091                     	;# 
   532     0092                     	;# 
   533     0093                     	;# 
   534     0093                     	;# 
   535     0093                     	;# 
   536     0094                     	;# 
   537     0095                     	;# 
   538     0096                     	;# 
   539     0097                     	;# 
   540     0098                     	;# 
   541     0099                     	;# 
   542     009A                     	;# 
   543     009B                     	;# 
   544     009C                     	;# 
   545     009D                     	;# 
   546     009E                     	;# 
   547     009F                     	;# 
   548     0105                     	;# 
   549     0107                     	;# 
   550     0108                     	;# 
   551     0109                     	;# 
   552     010C                     	;# 
   553     010C                     	;# 
   554     010D                     	;# 
   555     010E                     	;# 
   556     010F                     	;# 
   557     0185                     	;# 
   558     0187                     	;# 
   559     0188                     	;# 
   560     0189                     	;# 
   561     018C                     	;# 
   562     018D                     	;# 
   563     0000                     	;# 
   564     0001                     	;# 
   565     0002                     	;# 
   566     0003                     	;# 
   567     0004                     	;# 
   568     0005                     	;# 
   569     0006                     	;# 
   570     0007                     	;# 
   571     0009                     	;# 
   572     000A                     	;# 
   573     000B                     	;# 
   574     000C                     	;# 
   575     000D                     	;# 
   576     000E                     	;# 
   577     000E                     	;# 
   578     000F                     	;# 
   579     0010                     	;# 
   580     0011                     	;# 
   581     0012                     	;# 
   582     0013                     	;# 
   583     0014                     	;# 
   584     0015                     	;# 
   585     0015                     	;# 
   586     0016                     	;# 
   587     0017                     	;# 
   588     0018                     	;# 
   589     0019                     	;# 
   590     001A                     	;# 
   591     001B                     	;# 
   592     001B                     	;# 
   593     001C                     	;# 
   594     001D                     	;# 
   595     001E                     	;# 
   596     001F                     	;# 
   597     0081                     	;# 
   598     0085                     	;# 
   599     0086                     	;# 
   600     0087                     	;# 
   601     0089                     	;# 
   602     008C                     	;# 
   603     008D                     	;# 
   604     008E                     	;# 
   605     008F                     	;# 
   606     0090                     	;# 
   607     0091                     	;# 
   608     0092                     	;# 
   609     0093                     	;# 
   610     0093                     	;# 
   611     0093                     	;# 
   612     0094                     	;# 
   613     0095                     	;# 
   614     0096                     	;# 
   615     0097                     	;# 
   616     0098                     	;# 
   617     0099                     	;# 
   618     009A                     	;# 
   619     009B                     	;# 
   620     009C                     	;# 
   621     009D                     	;# 
   622     009E                     	;# 
   623     009F                     	;# 
   624     0105                     	;# 
   625     0107                     	;# 
   626     0108                     	;# 
   627     0109                     	;# 
   628     010C                     	;# 
   629     010C                     	;# 
   630     010D                     	;# 
   631     010E                     	;# 
   632     010F                     	;# 
   633     0185                     	;# 
   634     0187                     	;# 
   635     0188                     	;# 
   636     0189                     	;# 
   637     018C                     	;# 
   638     018D                     	;# 
   639     0000                     	;# 
   640     0001                     	;# 
   641     0002                     	;# 
   642     0003                     	;# 
   643     0004                     	;# 
   644     0005                     	;# 
   645     0006                     	;# 
   646     0007                     	;# 
   647     0009                     	;# 
   648     000A                     	;# 
   649     000B                     	;# 
   650     000C                     	;# 
   651     000D                     	;# 
   652     000E                     	;# 
   653     000E                     	;# 
   654     000F                     	;# 
   655     0010                     	;# 
   656     0011                     	;# 
   657     0012                     	;# 
   658     0013                     	;# 
   659     0014                     	;# 
   660     0015                     	;# 
   661     0015                     	;# 
   662     0016                     	;# 
   663     0017                     	;# 
   664     0018                     	;# 
   665     0019                     	;# 
   666     001A                     	;# 
   667     001B                     	;# 
   668     001B                     	;# 
   669     001C                     	;# 
   670     001D                     	;# 
   671     001E                     	;# 
   672     001F                     	;# 
   673     0081                     	;# 
   674     0085                     	;# 
   675     0086                     	;# 
   676     0087                     	;# 
   677     0089                     	;# 
   678     008C                     	;# 
   679     008D                     	;# 
   680     008E                     	;# 
   681     008F                     	;# 
   682     0090                     	;# 
   683     0091                     	;# 
   684     0092                     	;# 
   685     0093                     	;# 
   686     0093                     	;# 
   687     0093                     	;# 
   688     0094                     	;# 
   689     0095                     	;# 
   690     0096                     	;# 
   691     0097                     	;# 
   692     0098                     	;# 
   693     0099                     	;# 
   694     009A                     	;# 
   695     009B                     	;# 
   696     009C                     	;# 
   697     009D                     	;# 
   698     009E                     	;# 
   699     009F                     	;# 
   700     0105                     	;# 
   701     0107                     	;# 
   702     0108                     	;# 
   703     0109                     	;# 
   704     010C                     	;# 
   705     010C                     	;# 
   706     010D                     	;# 
   707     010E                     	;# 
   708     010F                     	;# 
   709     0185                     	;# 
   710     0187                     	;# 
   711     0188                     	;# 
   712     0189                     	;# 
   713     018C                     	;# 
   714     018D                     	;# 
   715     0000                     	;# 
   716     0001                     	;# 
   717     0002                     	;# 
   718     0003                     	;# 
   719     0004                     	;# 
   720     0005                     	;# 
   721     0006                     	;# 
   722     0007                     	;# 
   723     0009                     	;# 
   724     000A                     	;# 
   725     000B                     	;# 
   726     000C                     	;# 
   727     000D                     	;# 
   728     000E                     	;# 
   729     000E                     	;# 
   730     000F                     	;# 
   731     0010                     	;# 
   732     0011                     	;# 
   733     0012                     	;# 
   734     0013                     	;# 
   735     0014                     	;# 
   736     0015                     	;# 
   737     0015                     	;# 
   738     0016                     	;# 
   739     0017                     	;# 
   740     0018                     	;# 
   741     0019                     	;# 
   742     001A                     	;# 
   743     001B                     	;# 
   744     001B                     	;# 
   745     001C                     	;# 
   746     001D                     	;# 
   747     001E                     	;# 
   748     001F                     	;# 
   749     0081                     	;# 
   750     0085                     	;# 
   751     0086                     	;# 
   752     0087                     	;# 
   753     0089                     	;# 
   754     008C                     	;# 
   755     008D                     	;# 
   756     008E                     	;# 
   757     008F                     	;# 
   758     0090                     	;# 
   759     0091                     	;# 
   760     0092                     	;# 
   761     0093                     	;# 
   762     0093                     	;# 
   763     0093                     	;# 
   764     0094                     	;# 
   765     0095                     	;# 
   766     0096                     	;# 
   767     0097                     	;# 
   768     0098                     	;# 
   769     0099                     	;# 
   770     009A                     	;# 
   771     009B                     	;# 
   772     009C                     	;# 
   773     009D                     	;# 
   774     009E                     	;# 
   775     009F                     	;# 
   776     0105                     	;# 
   777     0107                     	;# 
   778     0108                     	;# 
   779     0109                     	;# 
   780     010C                     	;# 
   781     010C                     	;# 
   782     010D                     	;# 
   783     010E                     	;# 
   784     010F                     	;# 
   785     0185                     	;# 
   786     0187                     	;# 
   787     0188                     	;# 
   788     0189                     	;# 
   789     018C                     	;# 
   790     018D                     	;# 
   791     0000                     	;# 
   792     0001                     	;# 
   793     0002                     	;# 
   794     0003                     	;# 
   795     0004                     	;# 
   796     0005                     	;# 
   797     0006                     	;# 
   798     0007                     	;# 
   799     0009                     	;# 
   800     000A                     	;# 
   801     000B                     	;# 
   802     000C                     	;# 
   803     000D                     	;# 
   804     000E                     	;# 
   805     000E                     	;# 
   806     000F                     	;# 
   807     0010                     	;# 
   808     0011                     	;# 
   809     0012                     	;# 
   810     0013                     	;# 
   811     0014                     	;# 
   812     0015                     	;# 
   813     0015                     	;# 
   814     0016                     	;# 
   815     0017                     	;# 
   816     0018                     	;# 
   817     0019                     	;# 
   818     001A                     	;# 
   819     001B                     	;# 
   820     001B                     	;# 
   821     001C                     	;# 
   822     001D                     	;# 
   823     001E                     	;# 
   824     001F                     	;# 
   825     0081                     	;# 
   826     0085                     	;# 
   827     0086                     	;# 
   828     0087                     	;# 
   829     0089                     	;# 
   830     008C                     	;# 
   831     008D                     	;# 
   832     008E                     	;# 
   833     008F                     	;# 
   834     0090                     	;# 
   835     0091                     	;# 
   836     0092                     	;# 
   837     0093                     	;# 
   838     0093                     	;# 
   839     0093                     	;# 
   840     0094                     	;# 
   841     0095                     	;# 
   842     0096                     	;# 
   843     0097                     	;# 
   844     0098                     	;# 
   845     0099                     	;# 
   846     009A                     	;# 
   847     009B                     	;# 
   848     009C                     	;# 
   849     009D                     	;# 
   850     009E                     	;# 
   851     009F                     	;# 
   852     0105                     	;# 
   853     0107                     	;# 
   854     0108                     	;# 
   855     0109                     	;# 
   856     010C                     	;# 
   857     010C                     	;# 
   858     010D                     	;# 
   859     010E                     	;# 
   860     010F                     	;# 
   861     0185                     	;# 
   862     0187                     	;# 
   863     0188                     	;# 
   864     0189                     	;# 
   865     018C                     	;# 
   866     018D                     	;# 
   867     0000                     	;# 
   868     0001                     	;# 
   869     0002                     	;# 
   870     0003                     	;# 
   871     0004                     	;# 
   872     0005                     	;# 
   873     0006                     	;# 
   874     0007                     	;# 
   875     0009                     	;# 
   876     000A                     	;# 
   877     000B                     	;# 
   878     000C                     	;# 
   879     000D                     	;# 
   880     000E                     	;# 
   881     000E                     	;# 
   882     000F                     	;# 
   883     0010                     	;# 
   884     0011                     	;# 
   885     0012                     	;# 
   886     0013                     	;# 
   887     0014                     	;# 
   888     0015                     	;# 
   889     0015                     	;# 
   890     0016                     	;# 
   891     0017                     	;# 
   892     0018                     	;# 
   893     0019                     	;# 
   894     001A                     	;# 
   895     001B                     	;# 
   896     001B                     	;# 
   897     001C                     	;# 
   898     001D                     	;# 
   899     001E                     	;# 
   900     001F                     	;# 
   901     0081                     	;# 
   902     0085                     	;# 
   903     0086                     	;# 
   904     0087                     	;# 
   905     0089                     	;# 
   906     008C                     	;# 
   907     008D                     	;# 
   908     008E                     	;# 
   909     008F                     	;# 
   910     0090                     	;# 
   911     0091                     	;# 
   912     0092                     	;# 
   913     0093                     	;# 
   914     0093                     	;# 
   915     0093                     	;# 
   916     0094                     	;# 
   917     0095                     	;# 
   918     0096                     	;# 
   919     0097                     	;# 
   920     0098                     	;# 
   921     0099                     	;# 
   922     009A                     	;# 
   923     009B                     	;# 
   924     009C                     	;# 
   925     009D                     	;# 
   926     009E                     	;# 
   927     009F                     	;# 
   928     0105                     	;# 
   929     0107                     	;# 
   930     0108                     	;# 
   931     0109                     	;# 
   932     010C                     	;# 
   933     010C                     	;# 
   934     010D                     	;# 
   935     010E                     	;# 
   936     010F                     	;# 
   937     0185                     	;# 
   938     0187                     	;# 
   939     0188                     	;# 
   940     0189                     	;# 
   941     018C                     	;# 
   942     018D                     	;# 
   943     0000                     	;# 
   944     0001                     	;# 
   945     0002                     	;# 
   946     0003                     	;# 
   947     0004                     	;# 
   948     0005                     	;# 
   949     0006                     	;# 
   950     0007                     	;# 
   951     0009                     	;# 
   952     000A                     	;# 
   953     000B                     	;# 
   954     000C                     	;# 
   955     000D                     	;# 
   956     000E                     	;# 
   957     000E                     	;# 
   958     000F                     	;# 
   959     0010                     	;# 
   960     0011                     	;# 
   961     0012                     	;# 
   962     0013                     	;# 
   963     0014                     	;# 
   964     0015                     	;# 
   965     0015                     	;# 
   966     0016                     	;# 
   967     0017                     	;# 
   968     0018                     	;# 
   969     0019                     	;# 
   970     001A                     	;# 
   971     001B                     	;# 
   972     001B                     	;# 
   973     001C                     	;# 
   974     001D                     	;# 
   975     001E                     	;# 
   976     001F                     	;# 
   977     0081                     	;# 
   978     0085                     	;# 
   979     0086                     	;# 
   980     0087                     	;# 
   981     0089                     	;# 
   982     008C                     	;# 
   983     008D                     	;# 
   984     008E                     	;# 
   985     008F                     	;# 
   986     0090                     	;# 
   987     0091                     	;# 
   988     0092                     	;# 
   989     0093                     	;# 
   990     0093                     	;# 
   991     0093                     	;# 
   992     0094                     	;# 
   993     0095                     	;# 
   994     0096                     	;# 
   995     0097                     	;# 
   996     0098                     	;# 
   997     0099                     	;# 
   998     009A                     	;# 
   999     009B                     	;# 
  1000     009C                     	;# 
  1001     009D                     	;# 
  1002     009E                     	;# 
  1003     009F                     	;# 
  1004     0105                     	;# 
  1005     0107                     	;# 
  1006     0108                     	;# 
  1007     0109                     	;# 
  1008     010C                     	;# 
  1009     010C                     	;# 
  1010     010D                     	;# 
  1011     010E                     	;# 
  1012     010F                     	;# 
  1013     0185                     	;# 
  1014     0187                     	;# 
  1015     0188                     	;# 
  1016     0189                     	;# 
  1017     018C                     	;# 
  1018     018D                     	;# 
  1019     0000                     	;# 
  1020     0001                     	;# 
  1021     0002                     	;# 
  1022     0003                     	;# 
  1023     0004                     	;# 
  1024     0005                     	;# 
  1025     0006                     	;# 
  1026     0007                     	;# 
  1027     0009                     	;# 
  1028     000A                     	;# 
  1029     000B                     	;# 
  1030     000C                     	;# 
  1031     000D                     	;# 
  1032     000E                     	;# 
  1033     000E                     	;# 
  1034     000F                     	;# 
  1035     0010                     	;# 
  1036     0011                     	;# 
  1037     0012                     	;# 
  1038     0013                     	;# 
  1039     0014                     	;# 
  1040     0015                     	;# 
  1041     0015                     	;# 
  1042     0016                     	;# 
  1043     0017                     	;# 
  1044     0018                     	;# 
  1045     0019                     	;# 
  1046     001A                     	;# 
  1047     001B                     	;# 
  1048     001B                     	;# 
  1049     001C                     	;# 
  1050     001D                     	;# 
  1051     001E                     	;# 
  1052     001F                     	;# 
  1053     0081                     	;# 
  1054     0085                     	;# 
  1055     0086                     	;# 
  1056     0087                     	;# 
  1057     0089                     	;# 
  1058     008C                     	;# 
  1059     008D                     	;# 
  1060     008E                     	;# 
  1061     008F                     	;# 
  1062     0090                     	;# 
  1063     0091                     	;# 
  1064     0092                     	;# 
  1065     0093                     	;# 
  1066     0093                     	;# 
  1067     0093                     	;# 
  1068     0094                     	;# 
  1069     0095                     	;# 
  1070     0096                     	;# 
  1071     0097                     	;# 
  1072     0098                     	;# 
  1073     0099                     	;# 
  1074     009A                     	;# 
  1075     009B                     	;# 
  1076     009C                     	;# 
  1077     009D                     	;# 
  1078     009E                     	;# 
  1079     009F                     	;# 
  1080     0105                     	;# 
  1081     0107                     	;# 
  1082     0108                     	;# 
  1083     0109                     	;# 
  1084     010C                     	;# 
  1085     010C                     	;# 
  1086     010D                     	;# 
  1087     010E                     	;# 
  1088     010F                     	;# 
  1089     0185                     	;# 
  1090     0187                     	;# 
  1091     0188                     	;# 
  1092     0189                     	;# 
  1093     018C                     	;# 
  1094     018D                     	;# 
  1095                           
  1096                           	psect	idataBANK1
  1097     12A0                     __pidataBANK1:
  1098                           
  1099                           ;initializer for _menu_inicial
  1100     12A0  3447               	retlw	low (STR_23| (0+32768))
  1101     12A1  3488               	retlw	high (STR_23| (0+32768))
  1102     12A2  349E               	retlw	low (STR_24| (0+32768))
  1103     12A3  3487               	retlw	high (STR_24| (0+32768))
  1104     12A4  343D               	retlw	low (STR_25| (0+32768))
  1105     12A5  3488               	retlw	high (STR_25| (0+32768))
  1106     12A6  3462               	retlw	low (STR_26| (0+32768))
  1107     12A7  3488               	retlw	high (STR_26| (0+32768))
  1108     12A8  346A               	retlw	low (STR_27| (0+32768))
  1109     12A9  3488               	retlw	high (STR_27| (0+32768))
  1110     12AA  34BC               	retlw	low (STR_28| (0+32768))
  1111     12AB  3487               	retlw	high (STR_28| (0+32768))
  1112     12AC  34AD               	retlw	low (STR_29| (0+32768))
  1113     12AD  3487               	retlw	high (STR_29| (0+32768))
  1114                           
  1115                           	psect	stringtext
  1116     0700                     __pstringtext:
  1117     0700                     stringtab:
  1118     0700                     __stringtab:
  1119                           
  1120                           ;	String table - string pointers are 2 bytes each
  1121     0700  1BFF               	btfsc	btemp+1,7
  1122     0701  2F0A               	ljmp	stringcode
  1123     0702  1383               	bcf	3,7
  1124     0703  187F               	btfsc	btemp+1,0
  1125     0704  1783               	bsf	3,7
  1126     0705  0800               	movf	0,w
  1127     0706  0A84               	incf	4,f
  1128     0707  1903               	skipnz
  1129     0708  0AFF               	incf	btemp+1,f
  1130     0709  0008               	return
  1131     070A                     stringcode:
  1132     070A  087F               	movf	btemp+1,w
  1133     070B  397F               	andlw	127
  1134     070C  008A               	movwf	10
  1135     070D  0804               	movf	4,w
  1136     070E  0A84               	incf	4,f
  1137     070F  1903               	skipnz
  1138     0710  0AFF               	incf	btemp+1,f
  1139     0711  0082               	movwf	2
  1140     0712                     __stringbase:
  1141     0712                     __end_of__stringtab:
  1142     0712                     _menu_tempo_amostra:
  1143     0712  349B               	retlw	low (STR_5| (0+32768))
  1144     0713  3488               	retlw	high (STR_5| (0+32768))
  1145     0714  3412               	retlw	18
  1146     0715  3400               	retlw	0
  1147     0716  347F               	retlw	low (STR_6| (0+32768))
  1148     0717  3488               	retlw	high (STR_6| (0+32768))
  1149     0718  34B4               	retlw	180
  1150     0719  3400               	retlw	0
  1151     071A  3486               	retlw	low (STR_7| (0+32768))
  1152     071B  3488               	retlw	high (STR_7| (0+32768))
  1153     071C  341C               	retlw	28
  1154     071D  3402               	retlw	2
  1155     071E  34A1               	retlw	low (STR_8| (0+32768))
  1156     071F  3488               	retlw	high (STR_8| (0+32768))
  1157     0720  3438               	retlw	56
  1158     0721  3404               	retlw	4
  1159     0722  348D               	retlw	low (STR_9| (0+32768))
  1160     0723  3488               	retlw	high (STR_9| (0+32768))
  1161     0724  3430               	retlw	48
  1162     0725  342A               	retlw	42
  1163     0726  3494               	retlw	low (STR_10| (0+32768))
  1164     0727  3488               	retlw	high (STR_10| (0+32768))
  1165     0728  3490               	retlw	144
  1166     0729  347E               	retlw	126
  1167     072A  3478               	retlw	low (STR_11| (0+32768))
  1168     072B  3488               	retlw	high (STR_11| (0+32768))
  1169     072C  3420               	retlw	32
  1170     072D  34FD               	retlw	253
  1171     072E                     __end_of_menu_tempo_amostra:
  1172     072E                     _menu_quant_sensores:
  1173     072E  3459               	retlw	low (STR_12| (0+32768))
  1174     072F  3488               	retlw	high (STR_12| (0+32768))
  1175     0730  3401               	retlw	1
  1176     0731  34FD               	retlw	low (STR_13| (0+32768))
  1177     0732  3487               	retlw	high (STR_13| (0+32768))
  1178     0733  3402               	retlw	2
  1179     0734  3408               	retlw	low (STR_14| (0+32768))
  1180     0735  3488               	retlw	high (STR_14| (0+32768))
  1181     0736  3403               	retlw	3
  1182     0737  3413               	retlw	low (STR_15| (0+32768))
  1183     0738  3488               	retlw	high (STR_15| (0+32768))
  1184     0739  3404               	retlw	4
  1185     073A                     __end_of_menu_quant_sensores:
  1186     073A                     _dpowers:
  1187     073A  3401               	retlw	1
  1188     073B  3400               	retlw	0
  1189     073C  340A               	retlw	10
  1190     073D  3400               	retlw	0
  1191     073E  3464               	retlw	100
  1192     073F  3400               	retlw	0
  1193     0740  34E8               	retlw	232
  1194     0741  3403               	retlw	3
  1195     0742  3410               	retlw	16
  1196     0743  3427               	retlw	39
  1197     0744                     __end_of_dpowers:
  1198     0744                     _LCD_POSICAO:
  1199     0744  3401               	retlw	1
  1200     0745  3400               	retlw	0
  1201     0746  3401               	retlw	1
  1202     0747  3408               	retlw	8
  1203     0748  3402               	retlw	2
  1204     0749  3400               	retlw	0
  1205     074A  3402               	retlw	2
  1206     074B  3408               	retlw	8
  1207     074C                     __end_of_LCD_POSICAO:
  1208     074C                     _canais:
  1209     074C  3400               	retlw	0
  1210     074D  3401               	retlw	1
  1211     074E  3402               	retlw	2
  1212     074F  3404               	retlw	4
  1213     0750                     __end_of_canais:
  1214     0750                     exp@coeff:
  1215     0750  3400               	retlw	0
  1216     0751  3400               	retlw	0
  1217     0752  3480               	retlw	128
  1218     0753  343F               	retlw	63
  1219     0754  3418               	retlw	24
  1220     0755  3472               	retlw	114
  1221     0756  3431               	retlw	49
  1222     0757  343F               	retlw	63
  1223     0758  34F0               	retlw	240
  1224     0759  34FD               	retlw	253
  1225     075A  3475               	retlw	117
  1226     075B  343E               	retlw	62
  1227     075C  3447               	retlw	71
  1228     075D  3458               	retlw	88
  1229     075E  3463               	retlw	99
  1230     075F  343D               	retlw	61
  1231     0760  3458               	retlw	88
  1232     0761  3495               	retlw	149
  1233     0762  341D               	retlw	29
  1234     0763  343C               	retlw	60
  1235     0764  3482               	retlw	130
  1236     0765  34C4               	retlw	196
  1237     0766  34AE               	retlw	174
  1238     0767  343A               	retlw	58
  1239     0768  34A8               	retlw	168
  1240     0769  3478               	retlw	120
  1241     076A  3421               	retlw	33
  1242     076B  3439               	retlw	57
  1243     076C  34EF               	retlw	239
  1244     076D  3493               	retlw	147
  1245     076E  3480               	retlw	128
  1246     076F  3437               	retlw	55
  1247     0770  34A0               	retlw	160
  1248     0771  3492               	retlw	146
  1249     0772  34A7               	retlw	167
  1250     0773  3435               	retlw	53
  1251     0774  3446               	retlw	70
  1252     0775  3456               	retlw	86
  1253     0776  3415               	retlw	21
  1254     0777  3434               	retlw	52
  1255     0778                     __end_ofexp@coeff:
  1256     0778                     log@coeff:
  1257     0778  3400               	retlw	0
  1258     0779  3400               	retlw	0
  1259     077A  3400               	retlw	0
  1260     077B  3400               	retlw	0
  1261     077C  34C4               	retlw	196
  1262     077D  34FF               	retlw	255
  1263     077E  347F               	retlw	127
  1264     077F  343F               	retlw	63
  1265     0780  3480               	retlw	128
  1266     0781  34EF               	retlw	239
  1267     0782  34FF               	retlw	255
  1268     0783  34BE               	retlw	190
  1269     0784  3490               	retlw	144
  1270     0785  34E1               	retlw	225
  1271     0786  34A9               	retlw	169
  1272     0787  343E               	retlw	62
  1273     0788  34EC               	retlw	236
  1274     0789  3482               	retlw	130
  1275     078A  3476               	retlw	118
  1276     078B  34BE               	retlw	190
  1277     078C  3482               	retlw	130
  1278     078D  34AD               	retlw	173
  1279     078E  342B               	retlw	43
  1280     078F  343E               	retlw	62
  1281     0790  340E               	retlw	14
  1282     0791  343C               	retlw	60
  1283     0792  34C3               	retlw	195
  1284     0793  34BD               	retlw	189
  1285     0794  3487               	retlw	135
  1286     0795  34D1               	retlw	209
  1287     0796  3413               	retlw	19
  1288     0797  343D               	retlw	61
  1289     0798  3441               	retlw	65
  1290     0799  3478               	retlw	120
  1291     079A  34D3               	retlw	211
  1292     079B  34BB               	retlw	187
  1293     079C                     __end_oflog@coeff:
  1294     079C                     _mq_gl_r0:
  1295     079C  347A               	retlw	122
  1296     079D  3401               	retlw	1
  1297     079E                     __end_of_mq_gl_r0:
  1298     0003                     _STATUSbits	set	3
  1299     0019                     _TXREG	set	25
  1300     001E                     _ADRESH	set	30
  1301     001F                     _ADCON0bits	set	31
  1302     0001                     _TMR0	set	1
  1303     001A                     _RCREG	set	26
  1304     000C                     _PIR1bits	set	12
  1305     000B                     _INTCONbits	set	11
  1306     0018                     _RCSTAbits	set	24
  1307     00C4                     _CREN	set	196
  1308     00C7                     _SPEN	set	199
  1309     0058                     _RBIF	set	88
  1310     005B                     _RBIE	set	91
  1311     0037                     _RB7	set	55
  1312     0036                     _RB6	set	54
  1313     0035                     _RB5	set	53
  1314     0034                     _RB4	set	52
  1315     0038                     _RC0	set	56
  1316     0039                     _RC1	set	57
  1317     0030                     _RB0	set	48
  1318     0031                     _RB1	set	49
  1319     0032                     _RB2	set	50
  1320     003A                     _RC2	set	58
  1321     0099                     _SPBRG	set	153
  1322     009F                     _ADCON1bits	set	159
  1323     0085                     _TRISA	set	133
  1324     009E                     _ADRESL	set	158
  1325     008C                     _PIE1bits	set	140
  1326     0096                     _IOCB	set	150
  1327     0095                     _WPUB	set	149
  1328     0081                     _OPTION_REGbits	set	129
  1329     0098                     _TXSTAbits	set	152
  1330     04C6                     _TX9	set	1222
  1331     04C2                     _BRGH	set	1218
  1332     04C4                     _SYNC	set	1220
  1333     04C5                     _TXEN	set	1221
  1334     043F                     _TRISC7	set	1087
  1335     043E                     _TRISC6	set	1086
  1336     0437                     _TRISB7	set	1079
  1337     0436                     _TRISB6	set	1078
  1338     0435                     _TRISB5	set	1077
  1339     0434                     _TRISB4	set	1076
  1340     0430                     _TRISB0	set	1072
  1341     0431                     _TRISB1	set	1073
  1342     0432                     _TRISB2	set	1074
  1343     043A                     _TRISC2	set	1082
  1344     0439                     _TRISC1	set	1081
  1345     0438                     _TRISC0	set	1080
  1346     010C                     _EEDATA	set	268
  1347     010D                     _EEADR	set	269
  1348     018D                     _EECON2	set	397
  1349     018C                     _EECON1	set	396
  1350     018C                     _EECON1bits	set	396
  1351     0188                     _ANSEL	set	392
  1352     0189                     _ANSELH	set	393
  1353     0C3B                     _BRG16	set	3131
  1354     079E                     STR_24:
  1355     079E  344D               	retlw	77	;'M'
  1356     079F  346F               	retlw	111	;'o'
  1357     07A0  346E               	retlw	110	;'n'
  1358     07A1  3469               	retlw	105	;'i'
  1359     07A2  3474               	retlw	116	;'t'
  1360     07A3  346F               	retlw	111	;'o'
  1361     07A4  3472               	retlw	114	;'r'
  1362     07A5  3461               	retlw	97	;'a'
  1363     07A6  342F               	retlw	47	;'/'
  1364     07A7  3447               	retlw	71	;'G'
  1365     07A8  3472               	retlw	114	;'r'
  1366     07A9  3461               	retlw	97	;'a'
  1367     07AA  3476               	retlw	118	;'v'
  1368     07AB  3461               	retlw	97	;'a'
  1369     07AC  3400               	retlw	0
  1370     07AD                     STR_29:
  1371     07AD  3451               	retlw	81	;'Q'
  1372     07AE  3475               	retlw	117	;'u'
  1373     07AF  3461               	retlw	97	;'a'
  1374     07B0  346E               	retlw	110	;'n'
  1375     07B1  3474               	retlw	116	;'t'
  1376     07B2  3420               	retlw	32	;' '
  1377     07B3  3453               	retlw	83	;'S'
  1378     07B4  3465               	retlw	101	;'e'
  1379     07B5  346E               	retlw	110	;'n'
  1380     07B6  3473               	retlw	115	;'s'
  1381     07B7  346F               	retlw	111	;'o'
  1382     07B8  3472               	retlw	114	;'r'
  1383     07B9  3465               	retlw	101	;'e'
  1384     07BA  3473               	retlw	115	;'s'
  1385     07BB  3400               	retlw	0
  1386     07BC                     STR_28:
  1387     07BC  3454               	retlw	84	;'T'
  1388     07BD  3465               	retlw	101	;'e'
  1389     07BE  346D               	retlw	109	;'m'
  1390     07BF  3470               	retlw	112	;'p'
  1391     07C0  346F               	retlw	111	;'o'
  1392     07C1  3420               	retlw	32	;' '
  1393     07C2  3441               	retlw	65	;'A'
  1394     07C3  346D               	retlw	109	;'m'
  1395     07C4  346F               	retlw	111	;'o'
  1396     07C5  3473               	retlw	115	;'s'
  1397     07C6  3474               	retlw	116	;'t'
  1398     07C7  3472               	retlw	114	;'r'
  1399     07C8  3461               	retlw	97	;'a'
  1400     07C9  3400               	retlw	0
  1401     07CA                     STR_16:
  1402     07CA  344D               	retlw	77	;'M'
  1403     07CB  3465               	retlw	101	;'e'
  1404     07CC  346D               	retlw	109	;'m'
  1405     07CD  346F               	retlw	111	;'o'
  1406     07CE  3472               	retlw	114	;'r'
  1407     07CF  3469               	retlw	105	;'i'
  1408     07D0  3461               	retlw	97	;'a'
  1409     07D1  3420               	retlw	32	;' '
  1410     07D2  3443               	retlw	67	;'C'
  1411     07D3  3468               	retlw	104	;'h'
  1412     07D4  3465               	retlw	101	;'e'
  1413     07D5  3469               	retlw	105	;'i'
  1414     07D6  3461               	retlw	97	;'a'
  1415     07D7  3400               	retlw	0
  1416     07D8                     STR_2:
  1417     07D8  3449               	retlw	73	;'I'
  1418     07D9  346E               	retlw	110	;'n'
  1419     07DA  3469               	retlw	105	;'i'
  1420     07DB  3463               	retlw	99	;'c'
  1421     07DC  3469               	retlw	105	;'i'
  1422     07DD  346F               	retlw	111	;'o'
  1423     07DE  3420               	retlw	32	;' '
  1424     07DF  3476               	retlw	118	;'v'
  1425     07E0  3431               	retlw	49	;'1'
  1426     07E1  342E               	retlw	46	;'.'
  1427     07E2  3435               	retlw	53	;'5'
  1428     07E3  3433               	retlw	51	;'3'
  1429     07E4  342D               	retlw	45	;'-'
  1430     07E5  3400               	retlw	0
  1431     07E6                     STR_42:
  1432     07E6  344E               	retlw	78	;'N'
  1433     07E7  3465               	retlw	101	;'e'
  1434     07E8  346E               	retlw	110	;'n'
  1435     07E9  3468               	retlw	104	;'h'
  1436     07EA  3475               	retlw	117	;'u'
  1437     07EB  346D               	retlw	109	;'m'
  1438     07EC  3420               	retlw	32	;' '
  1439     07ED  3444               	retlw	68	;'D'
  1440     07EE  3461               	retlw	97	;'a'
  1441     07EF  3464               	retlw	100	;'d'
  1442     07F0  346F               	retlw	111	;'o'
  1443     07F1  3400               	retlw	0
  1444     07F2                     STR_47:
  1445     07F2  3454               	retlw	84	;'T'
  1446     07F3  3475               	retlw	117	;'u'
  1447     07F4  3464               	retlw	100	;'d'
  1448     07F5  346F               	retlw	111	;'o'
  1449     07F6  3420               	retlw	32	;' '
  1450     07F7  344C               	retlw	76	;'L'
  1451     07F8  3469               	retlw	105	;'i'
  1452     07F9  346D               	retlw	109	;'m'
  1453     07FA  3470               	retlw	112	;'p'
  1454     07FB  346F               	retlw	111	;'o'
  1455     07FC  3400               	retlw	0
  1456     07FD                     STR_13:
  1457     07FD  3432               	retlw	50	;'2'
  1458     07FE  3420               	retlw	32	;' '
  1459     07FF  3473               	retlw	115	;'s'
  1460     0800  3465               	retlw	101	;'e'
  1461     0801  346E               	retlw	110	;'n'
  1462     0802  3473               	retlw	115	;'s'
  1463     0803  346F               	retlw	111	;'o'
  1464     0804  3472               	retlw	114	;'r'
  1465     0805  3465               	retlw	101	;'e'
  1466     0806  3473               	retlw	115	;'s'
  1467     0807  3400               	retlw	0
  1468     0808                     STR_14:
  1469     0808  3433               	retlw	51	;'3'
  1470     0809  3420               	retlw	32	;' '
  1471     080A  3473               	retlw	115	;'s'
  1472     080B  3465               	retlw	101	;'e'
  1473     080C  346E               	retlw	110	;'n'
  1474     080D  3473               	retlw	115	;'s'
  1475     080E  346F               	retlw	111	;'o'
  1476     080F  3472               	retlw	114	;'r'
  1477     0810  3465               	retlw	101	;'e'
  1478     0811  3473               	retlw	115	;'s'
  1479     0812  3400               	retlw	0
  1480     0813                     STR_15:
  1481     0813  3434               	retlw	52	;'4'
  1482     0814  3420               	retlw	32	;' '
  1483     0815  3473               	retlw	115	;'s'
  1484     0816  3465               	retlw	101	;'e'
  1485     0817  346E               	retlw	110	;'n'
  1486     0818  3473               	retlw	115	;'s'
  1487     0819  346F               	retlw	111	;'o'
  1488     081A  3472               	retlw	114	;'r'
  1489     081B  3465               	retlw	101	;'e'
  1490     081C  3473               	retlw	115	;'s'
  1491     081D  3400               	retlw	0
  1492     081E                     STR_4:
  1493     081E  3432               	retlw	50	;'2'
  1494     081F  3431               	retlw	49	;'1'
  1495     0820  342F               	retlw	47	;'/'
  1496     0821  3430               	retlw	48	;'0'
  1497     0822  3438               	retlw	56	;'8'
  1498     0823  342F               	retlw	47	;'/'
  1499     0824  3432               	retlw	50	;'2'
  1500     0825  3430               	retlw	48	;'0'
  1501     0826  3432               	retlw	50	;'2'
  1502     0827  3433               	retlw	51	;'3'
  1503     0828  3400               	retlw	0
  1504     0829                     STR_46:
  1505     0829  344D               	retlw	77	;'M'
  1506     082A  3469               	retlw	105	;'i'
  1507     082B  346E               	retlw	110	;'n'
  1508     082C  343D               	retlw	61	;'='
  1509     082D  3425               	retlw	37	;'%'
  1510     082E  3464               	retlw	100	;'d'
  1511     082F  342E               	retlw	46	;'.'
  1512     0830  3425               	retlw	37	;'%'
  1513     0831  3464               	retlw	100	;'d'
  1514     0832  3400               	retlw	0
  1515     0833                     STR_45:
  1516     0833  344D               	retlw	77	;'M'
  1517     0834  3461               	retlw	97	;'a'
  1518     0835  3478               	retlw	120	;'x'
  1519     0836  343D               	retlw	61	;'='
  1520     0837  3425               	retlw	37	;'%'
  1521     0838  3464               	retlw	100	;'d'
  1522     0839  342E               	retlw	46	;'.'
  1523     083A  3425               	retlw	37	;'%'
  1524     083B  3464               	retlw	100	;'d'
  1525     083C  3400               	retlw	0
  1526     083D                     STR_25:
  1527     083D  3456               	retlw	86	;'V'
  1528     083E  3465               	retlw	101	;'e'
  1529     083F  3472               	retlw	114	;'r'
  1530     0840  3420               	retlw	32	;' '
  1531     0841  3454               	retlw	84	;'T'
  1532     0842  346F               	retlw	111	;'o'
  1533     0843  3464               	retlw	100	;'d'
  1534     0844  346F               	retlw	111	;'o'
  1535     0845  3473               	retlw	115	;'s'
  1536     0846  3400               	retlw	0
  1537     0847                     STR_23:
  1538     0847  344D               	retlw	77	;'M'
  1539     0848  346F               	retlw	111	;'o'
  1540     0849  346E               	retlw	110	;'n'
  1541     084A  3469               	retlw	105	;'i'
  1542     084B  3474               	retlw	116	;'t'
  1543     084C  346F               	retlw	111	;'o'
  1544     084D  3472               	retlw	114	;'r'
  1545     084E  3461               	retlw	97	;'a'
  1546     084F  3400               	retlw	0
  1547     0850                     STR_17:
  1548     0850  3425               	retlw	37	;'%'
  1549     0851  3464               	retlw	100	;'d'
  1550     0852  343D               	retlw	61	;'='
  1551     0853  3425               	retlw	37	;'%'
  1552     0854  3464               	retlw	100	;'d'
  1553     0855  342E               	retlw	46	;'.'
  1554     0856  3425               	retlw	37	;'%'
  1555     0857  3464               	retlw	100	;'d'
  1556     0858  3400               	retlw	0
  1557     0859                     STR_12:
  1558     0859  3431               	retlw	49	;'1'
  1559     085A  3420               	retlw	32	;' '
  1560     085B  3473               	retlw	115	;'s'
  1561     085C  3465               	retlw	101	;'e'
  1562     085D  346E               	retlw	110	;'n'
  1563     085E  3473               	retlw	115	;'s'
  1564     085F  346F               	retlw	111	;'o'
  1565     0860  3472               	retlw	114	;'r'
  1566     0861  3400               	retlw	0
  1567     0862                     STR_26:
  1568     0862  344D               	retlw	77	;'M'
  1569     0863  3461               	retlw	97	;'a'
  1570     0864  3478               	retlw	120	;'x'
  1571     0865  342F               	retlw	47	;'/'
  1572     0866  344D               	retlw	77	;'M'
  1573     0867  3469               	retlw	105	;'i'
  1574     0868  346E               	retlw	110	;'n'
  1575     0869  3400               	retlw	0
  1576     086A                     STR_27:
  1577     086A  344C               	retlw	76	;'L'
  1578     086B  3469               	retlw	105	;'i'
  1579     086C  346D               	retlw	109	;'m'
  1580     086D  3470               	retlw	112	;'p'
  1581     086E  3461               	retlw	97	;'a'
  1582     086F  3472               	retlw	114	;'r'
  1583     0870  3400               	retlw	0
  1584     0871                     STR_22:
  1585     0871  3470               	retlw	112	;'p'
  1586     0872  3470               	retlw	112	;'p'
  1587     0873  346D               	retlw	109	;'m'
  1588     0874  343D               	retlw	61	;'='
  1589     0875  3425               	retlw	37	;'%'
  1590     0876  3475               	retlw	117	;'u'
  1591     0877  3400               	retlw	0
  1592     0878                     STR_11:
  1593     0878  3431               	retlw	49	;'1'
  1594     0879  3420               	retlw	32	;' '
  1595     087A  3468               	retlw	104	;'h'
  1596     087B  346F               	retlw	111	;'o'
  1597     087C  3472               	retlw	114	;'r'
  1598     087D  3461               	retlw	97	;'a'
  1599     087E  3400               	retlw	0
  1600     087F                     STR_6:
  1601     087F  3431               	retlw	49	;'1'
  1602     0880  3430               	retlw	48	;'0'
  1603     0881  3420               	retlw	32	;' '
  1604     0882  3473               	retlw	115	;'s'
  1605     0883  3465               	retlw	101	;'e'
  1606     0884  3467               	retlw	103	;'g'
  1607     0885  3400               	retlw	0
  1608     0886                     STR_7:
  1609     0886  3433               	retlw	51	;'3'
  1610     0887  3430               	retlw	48	;'0'
  1611     0888  3420               	retlw	32	;' '
  1612     0889  3473               	retlw	115	;'s'
  1613     088A  3465               	retlw	101	;'e'
  1614     088B  3467               	retlw	103	;'g'
  1615     088C  3400               	retlw	0
  1616     088D                     STR_9:
  1617     088D  3431               	retlw	49	;'1'
  1618     088E  3430               	retlw	48	;'0'
  1619     088F  3420               	retlw	32	;' '
  1620     0890  346D               	retlw	109	;'m'
  1621     0891  3469               	retlw	105	;'i'
  1622     0892  346E               	retlw	110	;'n'
  1623     0893  3400               	retlw	0
  1624     0894                     STR_10:
  1625     0894  3433               	retlw	51	;'3'
  1626     0895  3430               	retlw	48	;'0'
  1627     0896  3420               	retlw	32	;' '
  1628     0897  346D               	retlw	109	;'m'
  1629     0898  3469               	retlw	105	;'i'
  1630     0899  346E               	retlw	110	;'n'
  1631     089A  3400               	retlw	0
  1632     089B                     STR_5:
  1633     089B  3431               	retlw	49	;'1'
  1634     089C  3420               	retlw	32	;' '
  1635     089D  3473               	retlw	115	;'s'
  1636     089E  3465               	retlw	101	;'e'
  1637     089F  3467               	retlw	103	;'g'
  1638     08A0  3400               	retlw	0
  1639     08A1                     STR_8:
  1640     08A1  3431               	retlw	49	;'1'
  1641     08A2  3420               	retlw	32	;' '
  1642     08A3  346D               	retlw	109	;'m'
  1643     08A4  3469               	retlw	105	;'i'
  1644     08A5  346E               	retlw	110	;'n'
  1645     08A6  3400               	retlw	0
  1646     08A7                     STR_1:
  1647     08A7  3474               	retlw	116	;'t'
  1648     08A8  3465               	retlw	101	;'e'
  1649     08A9  3473               	retlw	115	;'s'
  1650     08AA  3474               	retlw	116	;'t'
  1651     08AB  3465               	retlw	101	;'e'
  1652     08AC  3400               	retlw	0
  1653     08AD                     STR_3:
  1654     08AD  344E               	retlw	78	;'N'
  1655     08AE  3400               	retlw	0
  1656     07CA                     
  1657                           	psect	cinit
  1658     0015                     start_initialization:	
  1659                           ; #config settings
  1660                           
  1661     0015                     __initialization:
  1662                           
  1663                           ; Initialize objects allocated to BANK1
  1664     0015  1383               	bcf	3,7	;select IRP bank0
  1665     0016  30E1               	movlw	low (__pdataBANK1+14)
  1666     0017  00FD               	movwf	btemp+-1
  1667     0018  3012               	movlw	high __pidataBANK1
  1668     0019  00FE               	movwf	btemp
  1669     001A  30A0               	movlw	low __pidataBANK1
  1670     001B  00FF               	movwf	btemp+1
  1671     001C  30D3               	movlw	low __pdataBANK1
  1672     001D  0084               	movwf	4
  1673     001E  160A  118A  22D4  120A  118A  	fcall	init_ram0
  1674                           
  1675                           ; Clear objects allocated to BANK3
  1676     0023  1783               	bsf	3,7	;select IRP bank2
  1677     0024  3090               	movlw	low __pbssBANK3
  1678     0025  0084               	movwf	4
  1679     0026  30C1               	movlw	low (__pbssBANK3+49)
  1680     0027  160A  118A  226F  120A  118A  	fcall	clear_ram0
  1681                           
  1682                           ; Clear objects allocated to BANK1
  1683     002C  1383               	bcf	3,7	;select IRP bank0
  1684     002D  30C0               	movlw	low __pbssBANK1
  1685     002E  0084               	movwf	4
  1686     002F  30D3               	movlw	low (__pbssBANK1+19)
  1687     0030  160A  118A  226F  120A  118A  	fcall	clear_ram0
  1688     0035                     end_of_initialization:	
  1689                           ;End of C runtime variable initialization code
  1690                           
  1691     0035                     __end_of__initialization:
  1692     0035  0183               	clrf	3
  1693     0036  120A  158A  2CA0   	ljmp	_main	;jump to C main() function
  1694                           
  1695                           	psect	bssBANK1
  1696     00C0                     __pbssBANK1:
  1697     00C0                     adcon_mostra@F1474:
  1698     00C0                     	ds	9
  1699     00C9                     _errno:
  1700     00C9                     	ds	2
  1701     00CB                     _gl_item_menu_config_amostra:
  1702     00CB                     	ds	2
  1703     00CD                     handler@count_t0:
  1704     00CD                     	ds	2
  1705     00CF                     _gl_item_menu_config_sensores:
  1706     00CF                     	ds	1
  1707     00D0                     _gl_item_menu_ver_todos:
  1708     00D0                     	ds	1
  1709     00D1                     _gl_item_menu_principal:
  1710     00D1                     	ds	1
  1711     00D2                     _gl_estado:
  1712     00D2                     	ds	1
  1713                           
  1714                           	psect	dataBANK1
  1715     00D3                     __pdataBANK1:
  1716     00D3                     _menu_inicial:
  1717     00D3                     	ds	14
  1718                           
  1719                           	psect	bssBANK3
  1720     0190                     __pbssBANK3:
  1721     0190                     estado_executa_muda@F1404:
  1722     0190                     	ds	17
  1723     01A1                     mq_mostra@F1383:
  1724     01A1                     	ds	16
  1725     01B1                     mq_mostra@F1381:
  1726     01B1                     	ds	16
  1727                           
  1728                           	psect	inittext
  1729     12D0                     init_fetch0:	
  1730                           ;	Called with low address in FSR and high address in W
  1731                           
  1732     12D0  087E               	movf	btemp,w
  1733     12D1  008A               	movwf	10
  1734     12D2  087F               	movf	btemp+1,w
  1735     12D3  0082               	movwf	2
  1736     12D4                     init_ram0:	
  1737                           ;Called with:
  1738                           ;	high address of idata address in btemp 
  1739                           ;	low address of idata address in btemp+1 
  1740                           ;	low address of data in FSR
  1741                           ;	high address + 1 of data in btemp-1
  1742                           
  1743     12D4  160A  118A  22D0  160A  118A  	fcall	init_fetch0
  1744     12D9  0080               	movwf	0
  1745     12DA  0A84               	incf	4,f
  1746     12DB  0804               	movf	4,w
  1747     12DC  067D               	xorwf	btemp+-1,w
  1748     12DD  1903               	btfsc	3,2
  1749     12DE  3400               	retlw	0
  1750     12DF  0AFF               	incf	btemp+1,f
  1751     12E0  1903               	btfsc	3,2
  1752     12E1  0AFE               	incf	btemp,f
  1753     12E2  2AD4               	goto	init_ram0
  1754                           
  1755                           	psect	clrtext
  1756     126F                     clear_ram0:	
  1757                           ;	Called with FSR containing the base address, and
  1758                           ;	W with the last address+1
  1759                           
  1760     126F  0064               	clrwdt	;clear the watchdog before getting into this loop
  1761     1270                     clrloop0:
  1762     1270  0180               	clrf	0	;clear RAM location pointed to by FSR
  1763     1271  0A84               	incf	4,f	;increment pointer
  1764     1272  0604               	xorwf	4,w	;XOR with final address
  1765     1273  1903               	btfsc	3,2	;have we reached the end yet?
  1766     1274  3400               	retlw	0	;all done for this memory range, return
  1767     1275  0604               	xorwf	4,w	;XOR again to restore value
  1768     1276  2A70               	goto	clrloop0	;do the next byte
  1769                           
  1770                           	psect	cstackBANK3
  1771     01C1                     __pcstackBANK3:
  1772     01C1                     ??__doprnt:
  1773                           
  1774                           ; 1 bytes @ 0x0
  1775     01C1                     	ds	4
  1776     01C5                     __doprnt@prec:
  1777                           
  1778                           ; 1 bytes @ 0x4
  1779     01C5                     	ds	1
  1780     01C6                     __doprnt@flag:
  1781                           
  1782                           ; 1 bytes @ 0x5
  1783     01C6                     	ds	1
  1784     01C7                     __doprnt@val:
  1785                           
  1786                           ; 2 bytes @ 0x6
  1787     01C7                     	ds	2
  1788     01C9                     __doprnt@c:
  1789                           
  1790                           ; 1 bytes @ 0x8
  1791     01C9                     	ds	1
  1792     01CA                     ?_printf:
  1793     01CA                     printf@f:	
  1794                           ; 2 bytes @ 0x9
  1795                           
  1796                           
  1797                           ; 2 bytes @ 0x9
  1798     01CA                     	ds	2
  1799     01CC                     printf@ap:
  1800                           
  1801                           ; 2 bytes @ 0xB
  1802     01CC                     	ds	2
  1803     01CE                     printf@pb:
  1804                           
  1805                           ; 2 bytes @ 0xD
  1806     01CE                     	ds	2
  1807                           
  1808                           	psect	cstackBANK1
  1809     00A0                     __pcstackBANK1:
  1810     00A0                     ??_estado_maquina:
  1811                           
  1812                           ; 1 bytes @ 0x0
  1813     00A0                     	ds	2
  1814     00A2                     estado_maquina@op:
  1815                           
  1816                           ; 1 bytes @ 0x2
  1817     00A2                     	ds	1
  1818     00A3                     ??_handler:
  1819                           
  1820                           ; 1 bytes @ 0x3
  1821     00A3                     	ds	5
  1822     00A8                     handler@tempo_amostra:
  1823                           
  1824                           ; 2 bytes @ 0x8
  1825     00A8                     	ds	2
  1826     00AA                     handler@pos_taxa:
  1827                           
  1828                           ; 2 bytes @ 0xA
  1829     00AA                     	ds	2
  1830     00AC                     handler@option:
  1831                           
  1832                           ; 1 bytes @ 0xC
  1833     00AC                     	ds	1
  1834     00AD                     ??_btns_init:
  1835     00AD                     ??_rs232_init:	
  1836                           ; 1 bytes @ 0xD
  1837                           
  1838     00AD                     ??_eeprom_read:	
  1839                           ; 1 bytes @ 0xD
  1840                           
  1841     00AD                     ?_eeprom_write:	
  1842                           ; 1 bytes @ 0xD
  1843                           
  1844     00AD                     ??_adcon_init:	
  1845                           ; 1 bytes @ 0xD
  1846                           
  1847     00AD                     ??_timer0_init:	
  1848                           ; 1 bytes @ 0xD
  1849                           
  1850     00AD                     ?_putch:	
  1851                           ; 1 bytes @ 0xD
  1852                           
  1853     00AD                     ??_lcd_write:	
  1854                           ; 1 bytes @ 0xD
  1855                           
  1856     00AD                     ?___lwdiv:	
  1857                           ; 1 bytes @ 0xD
  1858                           
  1859     00AD                     eeprom_read@addr:	
  1860                           ; 2 bytes @ 0xD
  1861                           
  1862     00AD                     eeprom_write@value:	
  1863                           ; 1 bytes @ 0xD
  1864                           
  1865     00AD                     putch@c:	
  1866                           ; 1 bytes @ 0xD
  1867                           
  1868     00AD                     ___lwdiv@divisor:	
  1869                           ; 1 bytes @ 0xD
  1870                           
  1871                           
  1872                           ; 2 bytes @ 0xD
  1873     00AD                     	ds	1
  1874     00AE                     ??_eeprom_write:
  1875     00AE                     ??_putch:	
  1876                           ; 1 bytes @ 0xE
  1877                           
  1878     00AE                     lcd_write@c:	
  1879                           ; 1 bytes @ 0xE
  1880                           
  1881     00AE                     eeprom_write@addr:	
  1882                           ; 1 bytes @ 0xE
  1883                           
  1884                           
  1885                           ; 1 bytes @ 0xE
  1886     00AE                     	ds	1
  1887     00AF                     ??_lcd_init:
  1888     00AF                     ?_lcd_puts:	
  1889                           ; 1 bytes @ 0xF
  1890                           
  1891     00AF                     ?_lcd_goto:	
  1892                           ; 1 bytes @ 0xF
  1893                           
  1894     00AF                     ?_eeprom_gravar_word:	
  1895                           ; 1 bytes @ 0xF
  1896                           
  1897     00AF                     lcd_goto@x:	
  1898                           ; 1 bytes @ 0xF
  1899                           
  1900     00AF                     lcd_puts@str:	
  1901                           ; 1 bytes @ 0xF
  1902                           
  1903     00AF                     eeprom_gravar_word@dado:	
  1904                           ; 2 bytes @ 0xF
  1905                           
  1906     00AF                     ___lwdiv@dividend:	
  1907                           ; 2 bytes @ 0xF
  1908                           
  1909                           
  1910                           ; 2 bytes @ 0xF
  1911     00AF                     	ds	1
  1912     00B0                     ??_lcd_goto:
  1913                           
  1914                           ; 1 bytes @ 0x10
  1915     00B0                     	ds	1
  1916     00B1                     ??_lcd_puts:
  1917     00B1                     ??_eeprom_gravar_word:	
  1918                           ; 1 bytes @ 0x11
  1919                           
  1920     00B1                     ??___lwdiv:	
  1921                           ; 1 bytes @ 0x11
  1922                           
  1923     00B1                     eeprom_gravar_word@end:	
  1924                           ; 1 bytes @ 0x11
  1925                           
  1926     00B1                     ___lwdiv@counter:	
  1927                           ; 1 bytes @ 0x11
  1928                           
  1929                           
  1930                           ; 1 bytes @ 0x11
  1931     00B1                     	ds	1
  1932     00B2                     lcd_goto@y:
  1933     00B2                     lcd_puts@cmd:	
  1934                           ; 1 bytes @ 0x12
  1935                           
  1936     00B2                     ___lwdiv@quotient:	
  1937                           ; 1 bytes @ 0x12
  1938                           
  1939                           
  1940                           ; 2 bytes @ 0x12
  1941     00B2                     	ds	2
  1942     00B4                     ?___lwmod:
  1943     00B4                     ___lwmod@divisor:	
  1944                           ; 2 bytes @ 0x14
  1945                           
  1946                           
  1947                           ; 2 bytes @ 0x14
  1948     00B4                     	ds	2
  1949     00B6                     ___lwmod@dividend:
  1950                           
  1951                           ; 2 bytes @ 0x16
  1952     00B6                     	ds	2
  1953     00B8                     ??___lwmod:
  1954     00B8                     ___lwmod@counter:	
  1955                           ; 1 bytes @ 0x18
  1956                           
  1957                           
  1958                           ; 1 bytes @ 0x18
  1959     00B8                     	ds	1
  1960     00B9                     ?__doprnt:
  1961     00B9                     __doprnt@pb:	
  1962                           ; 2 bytes @ 0x19
  1963                           
  1964                           
  1965                           ; 2 bytes @ 0x19
  1966     00B9                     	ds	2
  1967     00BB                     __doprnt@f:
  1968                           
  1969                           ; 2 bytes @ 0x1B
  1970     00BB                     	ds	2
  1971     00BD                     __doprnt@ap:
  1972                           
  1973                           ; 2 bytes @ 0x1D
  1974     00BD                     	ds	2
  1975     00BF                     ??_printf:
  1976     00BF                     ??_main:	
  1977                           ; 1 bytes @ 0x1F
  1978                           
  1979     00BF                     main@i:	
  1980                           ; 1 bytes @ 0x1F
  1981                           
  1982                           
  1983                           ; 1 bytes @ 0x1F
  1984     00BF                     	ds	1
  1985                           
  1986                           	psect	cstackCOMMON
  1987     0070                     __pcstackCOMMON:
  1988     0070                     ?_btns_init:
  1989     0070                     ?_rs232_init:	
  1990                           ; 1 bytes @ 0x0
  1991                           
  1992     0070                     ?_lcd_init:	
  1993                           ; 1 bytes @ 0x0
  1994                           
  1995     0070                     ?_eeprom_read:	
  1996                           ; 1 bytes @ 0x0
  1997                           
  1998     0070                     ?_adcon_init:	
  1999                           ; 1 bytes @ 0x0
  2000                           
  2001     0070                     ?_timer0_init:	
  2002                           ; 1 bytes @ 0x0
  2003                           
  2004     0070                     ?_rs232_transmite:	
  2005                           ; 1 bytes @ 0x0
  2006                           
  2007     0070                     ?_adcon_captura_grava:	
  2008                           ; 1 bytes @ 0x0
  2009                           
  2010     0070                     ?_estado_maquina:	
  2011                           ; 1 bytes @ 0x0
  2012                           
  2013     0070                     ?_estado_inicial:	
  2014                           ; 1 bytes @ 0x0
  2015                           
  2016     0070                     ?_estado_menu_principal:	
  2017                           ; 1 bytes @ 0x0
  2018                           
  2019     0070                     ?_estado_captura_mostra:	
  2020                           ; 1 bytes @ 0x0
  2021                           
  2022     0070                     ?_estado_ver_todos:	
  2023                           ; 1 bytes @ 0x0
  2024                           
  2025     0070                     ?_estado_max_min:	
  2026                           ; 1 bytes @ 0x0
  2027                           
  2028     0070                     ?_estado_menu_limpar:	
  2029                           ; 1 bytes @ 0x0
  2030                           
  2031     0070                     ?_estado_menu_conf_tempo_amostra:	
  2032                           ; 1 bytes @ 0x0
  2033                           
  2034     0070                     ?_estado_menu_conf_quant_sensores:	
  2035                           ; 1 bytes @ 0x0
  2036                           
  2037     0070                     ?_estado_executa_muda:	
  2038                           ; 1 bytes @ 0x0
  2039                           
  2040     0070                     ?_lcd_write:	
  2041                           ; 1 bytes @ 0x0
  2042                           
  2043     0070                     ?_lcd_clear:	
  2044                           ; 1 bytes @ 0x0
  2045                           
  2046     0070                     ?_btns_testa:	
  2047                           ; 1 bytes @ 0x0
  2048                           
  2049     0070                     ??_btns_testa:	
  2050                           ; 1 bytes @ 0x0
  2051                           
  2052     0070                     ?_handler:	
  2053                           ; 1 bytes @ 0x0
  2054                           
  2055     0070                     ?___bmul:	
  2056                           ; 1 bytes @ 0x0
  2057                           
  2058     0070                     ?i1_lcd_write:	
  2059                           ; 1 bytes @ 0x0
  2060                           
  2061     0070                     ??i1_lcd_write:	
  2062                           ; 1 bytes @ 0x0
  2063                           
  2064     0070                     ?i1_eeprom_read:	
  2065                           ; 1 bytes @ 0x0
  2066                           
  2067     0070                     ??i1_eeprom_read:	
  2068                           ; 1 bytes @ 0x0
  2069                           
  2070     0070                     ?i1_eeprom_write:	
  2071                           ; 1 bytes @ 0x0
  2072                           
  2073     0070                     ?i1_putch:	
  2074                           ; 1 bytes @ 0x0
  2075                           
  2076     0070                     ?_adcon_ler_canal:	
  2077                           ; 1 bytes @ 0x0
  2078                           
  2079     0070                     ?_main:	
  2080                           ; 2 bytes @ 0x0
  2081                           
  2082     0070                     ?___awdiv:	
  2083                           ; 2 bytes @ 0x0
  2084                           
  2085     0070                     ?___awmod:	
  2086                           ; 2 bytes @ 0x0
  2087                           
  2088     0070                     ?i1___lwdiv:	
  2089                           ; 2 bytes @ 0x0
  2090                           
  2091     0070                     estado_inicial@opt:	
  2092                           ; 2 bytes @ 0x0
  2093                           
  2094     0070                     ___bmul@multiplicand:	
  2095                           ; 1 bytes @ 0x0
  2096                           
  2097     0070                     i1eeprom_read@addr:	
  2098                           ; 1 bytes @ 0x0
  2099                           
  2100     0070                     i1eeprom_write@value:	
  2101                           ; 1 bytes @ 0x0
  2102                           
  2103     0070                     i1putch@c:	
  2104                           ; 1 bytes @ 0x0
  2105                           
  2106     0070                     ___awdiv@divisor:	
  2107                           ; 1 bytes @ 0x0
  2108                           
  2109     0070                     ___awmod@divisor:	
  2110                           ; 2 bytes @ 0x0
  2111                           
  2112     0070                     i1___lwdiv@divisor:	
  2113                           ; 2 bytes @ 0x0
  2114                           
  2115                           
  2116                           ; 2 bytes @ 0x0
  2117     0070                     	ds	1
  2118     0071                     ??___bmul:
  2119     0071                     ?___lbdiv:	
  2120                           ; 1 bytes @ 0x1
  2121                           
  2122     0071                     ??i1_eeprom_write:	
  2123                           ; 1 bytes @ 0x1
  2124                           
  2125     0071                     ??i1_putch:	
  2126                           ; 1 bytes @ 0x1
  2127                           
  2128     0071                     ?_eeprom_ler_word:	
  2129                           ; 1 bytes @ 0x1
  2130                           
  2131     0071                     ___bmul@product:	
  2132                           ; 2 bytes @ 0x1
  2133                           
  2134     0071                     ___lbdiv@divisor:	
  2135                           ; 1 bytes @ 0x1
  2136                           
  2137     0071                     i1lcd_write@c:	
  2138                           ; 1 bytes @ 0x1
  2139                           
  2140     0071                     i1eeprom_write@addr:	
  2141                           ; 1 bytes @ 0x1
  2142                           
  2143                           
  2144                           ; 1 bytes @ 0x1
  2145     0071                     	ds	1
  2146     0072                     ??_adcon_ler_canal:
  2147     0072                     ??_lcd_clear:	
  2148                           ; 1 bytes @ 0x2
  2149                           
  2150     0072                     ??___lbdiv:	
  2151                           ; 1 bytes @ 0x2
  2152                           
  2153     0072                     ?i1_lcd_goto:	
  2154                           ; 1 bytes @ 0x2
  2155                           
  2156     0072                     ?i1_eeprom_gravar_word:	
  2157                           ; 1 bytes @ 0x2
  2158                           
  2159     0072                     ___bmul@multiplier:	
  2160                           ; 1 bytes @ 0x2
  2161                           
  2162     0072                     ___lbdiv@dividend:	
  2163                           ; 1 bytes @ 0x2
  2164                           
  2165     0072                     i1lcd_goto@x:	
  2166                           ; 1 bytes @ 0x2
  2167                           
  2168     0072                     ___awdiv@dividend:	
  2169                           ; 1 bytes @ 0x2
  2170                           
  2171     0072                     ___awmod@dividend:	
  2172                           ; 2 bytes @ 0x2
  2173                           
  2174     0072                     i1eeprom_gravar_word@dado:	
  2175                           ; 2 bytes @ 0x2
  2176                           
  2177     0072                     i1___lwdiv@dividend:	
  2178                           ; 2 bytes @ 0x2
  2179                           
  2180                           
  2181                           ; 2 bytes @ 0x2
  2182     0072                     	ds	1
  2183     0073                     ??_rs232_transmite:
  2184     0073                     ??_eeprom_ler_word:	
  2185                           ; 1 bytes @ 0x3
  2186                           
  2187     0073                     ??i1_lcd_goto:	
  2188                           ; 1 bytes @ 0x3
  2189                           
  2190     0073                     ?i1_lcd_puts:	
  2191                           ; 1 bytes @ 0x3
  2192                           
  2193     0073                     ___lbdiv@counter:	
  2194                           ; 1 bytes @ 0x3
  2195                           
  2196     0073                     i1lcd_puts@str:	
  2197                           ; 1 bytes @ 0x3
  2198                           
  2199                           
  2200                           ; 2 bytes @ 0x3
  2201     0073                     	ds	1
  2202     0074                     ??___awdiv:
  2203     0074                     ??___awmod:	
  2204                           ; 1 bytes @ 0x4
  2205                           
  2206     0074                     ??i1_eeprom_gravar_word:	
  2207                           ; 1 bytes @ 0x4
  2208                           
  2209     0074                     ??i1___lwdiv:	
  2210                           ; 1 bytes @ 0x4
  2211                           
  2212     0074                     ___awdiv@counter:	
  2213                           ; 1 bytes @ 0x4
  2214                           
  2215     0074                     ___awmod@counter:	
  2216                           ; 1 bytes @ 0x4
  2217                           
  2218     0074                     ___lbdiv@quotient:	
  2219                           ; 1 bytes @ 0x4
  2220                           
  2221     0074                     i1eeprom_gravar_word@end:	
  2222                           ; 1 bytes @ 0x4
  2223                           
  2224     0074                     i1___lwdiv@counter:	
  2225                           ; 1 bytes @ 0x4
  2226                           
  2227                           
  2228                           ; 1 bytes @ 0x4
  2229     0074                     	ds	1
  2230     0075                     ??i1_lcd_puts:
  2231     0075                     eeprom_ler_word@end:	
  2232                           ; 1 bytes @ 0x5
  2233                           
  2234     0075                     rs232_transmite@qtd_val:	
  2235                           ; 1 bytes @ 0x5
  2236                           
  2237     0075                     ___awdiv@sign:	
  2238                           ; 1 bytes @ 0x5
  2239                           
  2240     0075                     ___awmod@sign:	
  2241                           ; 1 bytes @ 0x5
  2242                           
  2243     0075                     i1lcd_goto@y:	
  2244                           ; 1 bytes @ 0x5
  2245                           
  2246     0075                     i1___lwdiv@quotient:	
  2247                           ; 1 bytes @ 0x5
  2248                           
  2249                           
  2250                           ; 2 bytes @ 0x5
  2251     0075                     	ds	1
  2252     0076                     adcon_ler_canal@cnl:
  2253     0076                     rs232_transmite@qtd_sens:	
  2254                           ; 1 bytes @ 0x6
  2255                           
  2256     0076                     i1lcd_puts@cmd:	
  2257                           ; 1 bytes @ 0x6
  2258                           
  2259     0076                     eeprom_ler_word@temp_int:	
  2260                           ; 1 bytes @ 0x6
  2261                           
  2262     0076                     ___awdiv@quotient:	
  2263                           ; 2 bytes @ 0x6
  2264                           
  2265                           
  2266                           ; 2 bytes @ 0x6
  2267     0076                     	ds	1
  2268     0077                     ?i1___lwmod:
  2269     0077                     rs232_transmite@qtd_bytes:	
  2270                           ; 2 bytes @ 0x7
  2271                           
  2272     0077                     i1___lwmod@divisor:	
  2273                           ; 1 bytes @ 0x7
  2274                           
  2275     0077                     adcon_ler_canal@acc:	
  2276                           ; 2 bytes @ 0x7
  2277                           
  2278                           
  2279                           ; 4 bytes @ 0x7
  2280     0077                     	ds	1
  2281     0078                     ?_div:
  2282     0078                     rs232_transmite@x:	
  2283                           ; 4 bytes @ 0x8
  2284                           
  2285     0078                     div@number:	
  2286                           ; 1 bytes @ 0x8
  2287                           
  2288                           
  2289                           ; 2 bytes @ 0x8
  2290     0078                     	ds	1
  2291     0079                     rs232_transmite@i:
  2292     0079                     i1___lwmod@dividend:	
  2293                           ; 1 bytes @ 0x9
  2294                           
  2295                           
  2296                           ; 2 bytes @ 0x9
  2297     0079                     	ds	1
  2298     007A                     div@denom:
  2299                           
  2300                           ; 2 bytes @ 0xA
  2301     007A                     	ds	1
  2302     007B                     ??i1___lwmod:
  2303     007B                     i1___lwmod@counter:	
  2304                           ; 1 bytes @ 0xB
  2305                           
  2306     007B                     adcon_ler_canal@i:	
  2307                           ; 1 bytes @ 0xB
  2308                           
  2309                           
  2310                           ; 2 bytes @ 0xB
  2311     007B                     	ds	1
  2312     007C                     ??_div:
  2313     007C                     ??_sprintf:	
  2314                           ; 1 bytes @ 0xC
  2315                           
  2316     007C                     ??_estado_inicial:	
  2317                           ; 1 bytes @ 0xC
  2318                           
  2319     007C                     ??_estado_captura_mostra:	
  2320                           ; 1 bytes @ 0xC
  2321                           
  2322     007C                     ??_estado_ver_todos:	
  2323                           ; 1 bytes @ 0xC
  2324                           
  2325     007C                     ??_estado_max_min:	
  2326                           ; 1 bytes @ 0xC
  2327                           
  2328     007C                     ??_estado_menu_limpar:	
  2329                           ; 1 bytes @ 0xC
  2330                           
  2331     007C                     ??_estado_menu_conf_tempo_amostra:	
  2332                           ; 1 bytes @ 0xC
  2333                           
  2334     007C                     ??_estado_menu_conf_quant_sensores:	
  2335                           ; 1 bytes @ 0xC
  2336                           
  2337     007C                     estado_menu_limpar@opt:	
  2338                           ; 1 bytes @ 0xC
  2339                           
  2340     007C                     estado_captura_mostra@opt:	
  2341                           ; 1 bytes @ 0xC
  2342                           
  2343     007C                     estado_max_min@opt:	
  2344                           ; 1 bytes @ 0xC
  2345                           
  2346                           
  2347                           ; 1 bytes @ 0xC
  2348     007C                     	ds	1
  2349     007D                     ??_adcon_captura_grava:
  2350                           
  2351                           ; 1 bytes @ 0xD
  2352     007D                     	ds	1
  2353                           
  2354                           	psect	cstackBANK0
  2355     0020                     __pcstackBANK0:
  2356     0020                     ?i1__doprnt:
  2357     0020                     i1__doprnt@pb:	
  2358                           ; 2 bytes @ 0x0
  2359                           
  2360     0020                     div@rv:	
  2361                           ; 2 bytes @ 0x0
  2362                           
  2363                           
  2364                           ; 4 bytes @ 0x0
  2365     0020                     	ds	2
  2366     0022                     i1__doprnt@f:
  2367                           
  2368                           ; 2 bytes @ 0x2
  2369     0022                     	ds	2
  2370     0024                     i1__doprnt@ap:
  2371                           
  2372                           ; 2 bytes @ 0x4
  2373     0024                     	ds	2
  2374     0026                     ??i1__doprnt:
  2375                           
  2376                           ; 1 bytes @ 0x6
  2377     0026                     	ds	4
  2378     002A                     i1__doprnt@prec:
  2379                           
  2380                           ; 1 bytes @ 0xA
  2381     002A                     	ds	1
  2382     002B                     i1__doprnt@flag:
  2383                           
  2384                           ; 1 bytes @ 0xB
  2385     002B                     	ds	1
  2386     002C                     i1__doprnt@val:
  2387                           
  2388                           ; 2 bytes @ 0xC
  2389     002C                     	ds	2
  2390     002E                     i1__doprnt@c:
  2391                           
  2392                           ; 1 bytes @ 0xE
  2393     002E                     	ds	1
  2394     002F                     ?_sprintf:
  2395     002F                     sprintf@f:	
  2396                           ; 2 bytes @ 0xF
  2397                           
  2398                           
  2399                           ; 2 bytes @ 0xF
  2400     002F                     	ds	8
  2401     0037                     sprintf@wh:
  2402                           
  2403                           ; 1 bytes @ 0x17
  2404     0037                     	ds	1
  2405     0038                     sprintf@ap:
  2406                           
  2407                           ; 2 bytes @ 0x18
  2408     0038                     	ds	2
  2409     003A                     sprintf@pb:
  2410                           
  2411                           ; 2 bytes @ 0x1A
  2412     003A                     	ds	2
  2413     003C                     ?_adcon_mostra:
  2414     003C                     ??_estado_executa_muda:	
  2415                           ; 1 bytes @ 0x1C
  2416                           
  2417     003C                     adcon_mostra@t_int:	
  2418                           ; 1 bytes @ 0x1C
  2419                           
  2420                           
  2421                           ; 2 bytes @ 0x1C
  2422     003C                     	ds	2
  2423     003E                     adcon_mostra@i:
  2424                           
  2425                           ; 1 bytes @ 0x1E
  2426     003E                     	ds	1
  2427     003F                     ??_adcon_mostra:
  2428                           
  2429                           ; 1 bytes @ 0x1F
  2430     003F                     	ds	1
  2431     0040                     estado_executa_muda@tmp:
  2432                           
  2433                           ; 17 bytes @ 0x20
  2434     0040                     	ds	3
  2435     0043                     adcon_mostra@temp_str:
  2436                           
  2437                           ; 9 bytes @ 0x23
  2438     0043                     	ds	9
  2439     004C                     adcon_mostra@temp_div:
  2440                           
  2441                           ; 4 bytes @ 0x2C
  2442     004C                     	ds	4
  2443     0050                     adcon_captura_grava@maior:
  2444                           
  2445                           ; 2 bytes @ 0x30
  2446     0050                     	ds	1
  2447     0051                     estado_executa_muda@qtd_val:
  2448                           
  2449                           ; 1 bytes @ 0x31
  2450     0051                     	ds	1
  2451     0052                     estado_executa_muda@posicao:
  2452     0052                     adcon_captura_grava@menor:	
  2453                           ; 1 bytes @ 0x32
  2454                           
  2455                           
  2456                           ; 2 bytes @ 0x32
  2457     0052                     	ds	1
  2458     0053                     estado_executa_muda@novo_estado:
  2459                           
  2460                           ; 1 bytes @ 0x33
  2461     0053                     	ds	1
  2462     0054                     adcon_captura_grava@x:
  2463     0054                     estado_executa_muda@temp_int:	
  2464                           ; 2 bytes @ 0x34
  2465                           
  2466                           
  2467                           ; 2 bytes @ 0x34
  2468     0054                     	ds	2
  2469     0056                     adcon_captura_grava@posicao:
  2470     0056                     estado_executa_muda@qtd_sens:	
  2471                           ; 1 bytes @ 0x36
  2472                           
  2473                           
  2474                           ; 1 bytes @ 0x36
  2475     0056                     	ds	1
  2476     0057                     adcon_captura_grava@qtd_sens:
  2477     0057                     estado_executa_muda@endereco:	
  2478                           ; 1 bytes @ 0x37
  2479                           
  2480                           
  2481                           ; 1 bytes @ 0x37
  2482     0057                     	ds	1
  2483     0058                     adcon_captura_grava@qtd_val:
  2484     0058                     estado_executa_muda@maior:	
  2485                           ; 1 bytes @ 0x38
  2486                           
  2487                           
  2488                           ; 2 bytes @ 0x38
  2489     0058                     	ds	1
  2490     0059                     adcon_captura_grava@i:
  2491                           
  2492                           ; 1 bytes @ 0x39
  2493     0059                     	ds	1
  2494     005A                     adcon_captura_grava@i_644:
  2495     005A                     estado_executa_muda@menor:	
  2496                           ; 1 bytes @ 0x3A
  2497                           
  2498                           
  2499                           ; 2 bytes @ 0x3A
  2500     005A                     	ds	1
  2501     005B                     adcon_captura_grava@t_int:
  2502                           
  2503                           ; 2 bytes @ 0x3B
  2504     005B                     	ds	1
  2505     005C                     estado_executa_muda@i_945:
  2506                           
  2507                           ; 1 bytes @ 0x3C
  2508     005C                     	ds	1
  2509     005D                     _estado_executa_muda$1885:
  2510                           
  2511                           ; 2 bytes @ 0x3D
  2512     005D                     	ds	2
  2513     005F                     _estado_executa_muda$1886:
  2514                           
  2515                           ; 2 bytes @ 0x3F
  2516     005F                     	ds	2
  2517     0061                     estado_executa_muda@i:
  2518                           
  2519                           ; 1 bytes @ 0x41
  2520     0061                     	ds	1
  2521     0062                     ??_estado_menu_principal:
  2522     0062                     estado_ver_todos@opt:	
  2523                           ; 1 bytes @ 0x42
  2524                           
  2525     0062                     estado_menu_conf_tempo_amostra@opt:	
  2526                           ; 1 bytes @ 0x42
  2527                           
  2528     0062                     estado_menu_conf_quant_sensores@opt:	
  2529                           ; 1 bytes @ 0x42
  2530                           
  2531                           
  2532                           ; 1 bytes @ 0x42
  2533     0062                     	ds	2
  2534     0064                     estado_menu_principal@opt:
  2535                           
  2536                           ; 1 bytes @ 0x44
  2537     0064                     	ds	1
  2538     0065                     estado_menu_principal@maior:
  2539                           
  2540                           ; 2 bytes @ 0x45
  2541     0065                     	ds	2
  2542     0067                     estado_menu_principal@menor:
  2543                           
  2544                           ; 2 bytes @ 0x47
  2545     0067                     	ds	2
  2546     0069                     estado_menu_principal@posicao:
  2547                           
  2548                           ; 1 bytes @ 0x49
  2549     0069                     	ds	1
  2550     006A                     estado_menu_principal@qtd_sens:
  2551                           
  2552                           ; 1 bytes @ 0x4A
  2553     006A                     	ds	1
  2554     006B                     estado_menu_principal@qtd_val:
  2555                           
  2556                           ; 1 bytes @ 0x4B
  2557     006B                     	ds	1
  2558     006C                     estado_menu_principal@i:
  2559                           
  2560                           ; 1 bytes @ 0x4C
  2561     006C                     	ds	1
  2562     006D                     estado_menu_principal@i_916:
  2563                           
  2564                           ; 1 bytes @ 0x4D
  2565     006D                     	ds	1
  2566     006E                     estado_menu_principal@t_int:
  2567                           
  2568                           ; 2 bytes @ 0x4E
  2569     006E                     	ds	2
  2570                           
  2571                           	psect	maintext
  2572     0CA0                     __pmaintext:	
  2573 ;;
  2574 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2575 ;;
  2576 ;; *************** function _main *****************
  2577 ;; Defined at:
  2578 ;;		line 41 in file "main.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;		None
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;  i               1   31[BANK1 ] unsigned char 
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  2   36[None  ] int 
  2585 ;; Registers used:
  2586 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2587 ;; Tracked objects:
  2588 ;;		On entry : B00/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2592 ;;      Params:         0       0       0       0       0
  2593 ;;      Locals:         0       0       1       0       0
  2594 ;;      Temps:          0       0       0       0       0
  2595 ;;      Totals:         0       0       1       0       0
  2596 ;;Total ram usage:        1 bytes
  2597 ;; Hardware stack levels required when called: 10
  2598 ;; This function calls:
  2599 ;;		_adcon_init
  2600 ;;		_btns_init
  2601 ;;		_eeprom_gravar_word
  2602 ;;		_eeprom_read
  2603 ;;		_eeprom_write
  2604 ;;		_lcd_goto
  2605 ;;		_lcd_init
  2606 ;;		_lcd_puts
  2607 ;;		_printf
  2608 ;;		_rs232_init
  2609 ;;		_timer0_init
  2610 ;; This function is called by:
  2611 ;;		Startup code after reset
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615     0CA0                     _main:	
  2616                           ;psect for function _main
  2617                           
  2618     0CA0                     l8477:	
  2619                           ;incstack = 0
  2620 ;; hardware stack exceeded
  2621                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2622                           
  2623                           
  2624                           ;main.c: 43:     TXSTAbits.TXEN = 1;
  2625     0CA0  1683               	bsf	3,5	;RP0=1, select bank1
  2626     0CA1  1303               	bcf	3,6	;RP1=0, select bank1
  2627     0CA2  1698               	bsf	24,5	;volatile
  2628                           
  2629                           ;main.c: 44:     RCSTAbits.SPEN = 1;
  2630     0CA3  1283               	bcf	3,5	;RP0=0, select bank0
  2631     0CA4  1303               	bcf	3,6	;RP1=0, select bank0
  2632     0CA5  1798               	bsf	24,7	;volatile
  2633     0CA6                     l8479:
  2634                           
  2635                           ;main.c: 49:     btns_init();
  2636     0CA6  160A  118A  24EA  120A  158A  	fcall	_btns_init
  2637                           
  2638                           ;main.c: 50:     rs232_init();
  2639     0CAB  160A  118A  2341  120A  158A  	fcall	_rs232_init
  2640                           
  2641                           ;main.c: 51:     lcd_init();
  2642     0CB0  160A  118A  25C4  120A  158A  	fcall	_lcd_init
  2643     0CB5                     l8481:
  2644                           
  2645                           ;main.c: 53:     printf("teste");
  2646     0CB5  30A7               	movlw	low (STR_1| (0+32768))
  2647     0CB6  1683               	bsf	3,5	;RP0=1, select bank3
  2648     0CB7  1703               	bsf	3,6	;RP1=1, select bank3
  2649     0CB8  00CA               	movwf	printf@f^(0+384)
  2650     0CB9  3088               	movlw	high (STR_1| (0+32768))
  2651     0CBA  00CB               	movwf	(printf@f^(0+384)+1)
  2652     0CBB  160A  118A  2399  120A  158A  	fcall	_printf
  2653     0CC0                     l8483:
  2654                           
  2655                           ;main.c: 55:     lcd_puts("Inicio v1.53-");
  2656     0CC0  30D8               	movlw	low (STR_2| (0+32768))
  2657     0CC1  1683               	bsf	3,5	;RP0=1, select bank1
  2658     0CC2  1303               	bcf	3,6	;RP1=0, select bank1
  2659     0CC3  00AF               	movwf	lcd_puts@str^(0+128)
  2660     0CC4  3087               	movlw	high (STR_2| (0+32768))
  2661     0CC5  00B0               	movwf	(lcd_puts@str^(0+128)+1)
  2662     0CC6  120A  158A  2234  120A  158A  	fcall	_lcd_puts
  2663     0CCB                     l8485:
  2664                           
  2665                           ;main.c: 58:     lcd_puts("N");
  2666     0CCB  30AD               	movlw	low (STR_3| (0+32768))
  2667     0CCC  1683               	bsf	3,5	;RP0=1, select bank1
  2668     0CCD  1303               	bcf	3,6	;RP1=0, select bank1
  2669     0CCE  00AF               	movwf	lcd_puts@str^(0+128)
  2670     0CCF  3088               	movlw	high (STR_3| (0+32768))
  2671     0CD0  00B0               	movwf	(lcd_puts@str^(0+128)+1)
  2672     0CD1  120A  158A  2234  120A  158A  	fcall	_lcd_puts
  2673     0CD6                     l8487:
  2674                           
  2675                           ;main.c: 70:     lcd_goto(2, 0);
  2676     0CD6  1683               	bsf	3,5	;RP0=1, select bank1
  2677     0CD7  1303               	bcf	3,6	;RP1=0, select bank1
  2678     0CD8  01AF               	clrf	lcd_goto@x^(0+128)
  2679     0CD9  3002               	movlw	2
  2680     0CDA  160A  118A  2553  120A  158A  	fcall	_lcd_goto
  2681     0CDF                     l8489:
  2682                           
  2683                           ;main.c: 71:     lcd_puts("21/08/2023");
  2684     0CDF  301E               	movlw	low (STR_4| (0+32768))
  2685     0CE0  1683               	bsf	3,5	;RP0=1, select bank1
  2686     0CE1  1303               	bcf	3,6	;RP1=0, select bank1
  2687     0CE2  00AF               	movwf	lcd_puts@str^(0+128)
  2688     0CE3  3088               	movlw	high (STR_4| (0+32768))
  2689     0CE4  00B0               	movwf	(lcd_puts@str^(0+128)+1)
  2690     0CE5  120A  158A  2234  120A  158A  	fcall	_lcd_puts
  2691     0CEA                     l8491:
  2692                           
  2693                           ;main.c: 77:     if (eeprom_read(0x0c) != 93) {
  2694     0CEA  300C               	movlw	12
  2695     0CEB  160A  118A  235A  120A  158A  	fcall	_eeprom_read
  2696     0CF0  3A5D               	xorlw	93
  2697     0CF1  1903               	skipnz
  2698     0CF2  2CF4               	goto	u8301
  2699     0CF3  2CF5               	goto	u8300
  2700     0CF4                     u8301:
  2701     0CF4  2D48               	goto	l8509
  2702     0CF5                     u8300:
  2703     0CF5                     l8493:
  2704                           
  2705                           ;main.c: 78:         eeprom_write(0x08, 0);
  2706     0CF5  1683               	bsf	3,5	;RP0=1, select bank1
  2707     0CF6  1303               	bcf	3,6	;RP1=0, select bank1
  2708     0CF7  01AD               	clrf	eeprom_write@value^(0+128)
  2709     0CF8  3008               	movlw	8
  2710     0CF9  160A  118A  251E  120A  158A  	fcall	_eeprom_write
  2711                           
  2712                           ;main.c: 79:         eeprom_write(0x00, 0);
  2713     0CFE  1683               	bsf	3,5	;RP0=1, select bank1
  2714     0CFF  1303               	bcf	3,6	;RP1=0, select bank1
  2715     0D00  01AD               	clrf	eeprom_write@value^(0+128)
  2716     0D01  3000               	movlw	0
  2717     0D02  160A  118A  251E  120A  158A  	fcall	_eeprom_write
  2718                           
  2719                           ;main.c: 80:         eeprom_gravar_word(0x02, 0);
  2720     0D07  3000               	movlw	0
  2721     0D08  1683               	bsf	3,5	;RP0=1, select bank1
  2722     0D09  1303               	bcf	3,6	;RP1=0, select bank1
  2723     0D0A  00AF               	movwf	eeprom_gravar_word@dado^(0+128)
  2724     0D0B  00B0               	movwf	(eeprom_gravar_word@dado+1)^(0+128)
  2725     0D0C  3002               	movlw	2
  2726     0D0D  120A  118A  26E8  120A  158A  	fcall	_eeprom_gravar_word
  2727                           
  2728                           ;main.c: 81:         eeprom_gravar_word(0x04, 0xffff);
  2729     0D12  30FF               	movlw	255
  2730     0D13  1683               	bsf	3,5	;RP0=1, select bank1
  2731     0D14  1303               	bcf	3,6	;RP1=0, select bank1
  2732     0D15  00AF               	movwf	eeprom_gravar_word@dado^(0+128)
  2733     0D16  30FF               	movlw	255
  2734     0D17  00B0               	movwf	(eeprom_gravar_word@dado^(0+128)+1)
  2735     0D18  3004               	movlw	4
  2736     0D19  120A  118A  26E8  120A  158A  	fcall	_eeprom_gravar_word
  2737                           
  2738                           ;main.c: 82:         eeprom_gravar_word(0x06, 0);
  2739     0D1E  3000               	movlw	0
  2740     0D1F  1683               	bsf	3,5	;RP0=1, select bank1
  2741     0D20  1303               	bcf	3,6	;RP1=0, select bank1
  2742     0D21  00AF               	movwf	eeprom_gravar_word@dado^(0+128)
  2743     0D22  00B0               	movwf	(eeprom_gravar_word@dado+1)^(0+128)
  2744     0D23  3006               	movlw	6
  2745     0D24  120A  118A  26E8  120A  158A  	fcall	_eeprom_gravar_word
  2746     0D29                     l8495:
  2747                           
  2748                           ;main.c: 84:         for (uint8_t i = 0; i < 100 * 2; i++) {
  2749     0D29  1683               	bsf	3,5	;RP0=1, select bank1
  2750     0D2A  1303               	bcf	3,6	;RP1=0, select bank1
  2751     0D2B  01BF               	clrf	main@i^(0+128)
  2752     0D2C                     l8501:
  2753                           
  2754                           ;main.c: 85:             eeprom_write(i + 0x0e, 0);
  2755     0D2C  01AD               	clrf	eeprom_write@value^(0+128)
  2756     0D2D  083F               	movf	main@i^(0+128),w
  2757     0D2E  3E0E               	addlw	14
  2758     0D2F  160A  118A  251E  120A  158A  	fcall	_eeprom_write
  2759     0D34                     l8503:
  2760                           
  2761                           ;main.c: 86:         }
  2762     0D34  3001               	movlw	1
  2763     0D35  00FF               	movwf	btemp+1
  2764     0D36  087F               	movf	btemp+1,w
  2765     0D37  1683               	bsf	3,5	;RP0=1, select bank1
  2766     0D38  1303               	bcf	3,6	;RP1=0, select bank1
  2767     0D39  07BF               	addwf	main@i^(0+128),f
  2768     0D3A                     l8505:
  2769     0D3A  30C8               	movlw	200
  2770     0D3B  023F               	subwf	main@i^(0+128),w
  2771     0D3C  1C03               	skipc
  2772     0D3D  2D3F               	goto	u8311
  2773     0D3E  2D40               	goto	u8310
  2774     0D3F                     u8311:
  2775     0D3F  2D2C               	goto	l8501
  2776     0D40                     u8310:
  2777     0D40                     l8507:
  2778                           
  2779                           ;main.c: 92:         eeprom_write(0x0c, 93);
  2780     0D40  305D               	movlw	93
  2781     0D41  00AD               	movwf	eeprom_write@value^(0+128)
  2782     0D42  300C               	movlw	12
  2783     0D43  160A  118A  251E  120A  158A  	fcall	_eeprom_write
  2784     0D48                     l8509:	
  2785                           ;main.c: 93:     } else {
  2786                           
  2787                           
  2788                           ;main.c: 98:     adcon_init();
  2789     0D48  160A  118A  2328  120A  158A  	fcall	_adcon_init
  2790                           
  2791                           ;main.c: 100:     timer0_init();
  2792     0D4D  160A  118A  2277  120A  158A  	fcall	_timer0_init
  2793     0D52                     l8511:
  2794                           
  2795                           ;main.c: 104:     INTCONbits.GIE = 1;
  2796     0D52  178B               	bsf	11,7	;volatile
  2797     0D53                     l41:	
  2798                           ;main.c: 106:     while (1) {
  2799                           
  2800     0D53                     l42:	
  2801                           ;main.c: 117:     }
  2802                           
  2803     0D53  2D53               	goto	l41
  2804     0D54  120A  118A  2812   	ljmp	start
  2805     0D57                     __end_of_main:
  2806                           
  2807                           	psect	text1
  2808     1277                     __ptext1:	
  2809 ;; *************** function _timer0_init *****************
  2810 ;; Defined at:
  2811 ;;		line 7 in file "timer.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;		None
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;		None
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  1    wreg      void 
  2818 ;; Registers used:
  2819 ;;		wreg, status,2, status,0
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2825 ;;      Params:         0       0       0       0       0
  2826 ;;      Locals:         0       0       0       0       0
  2827 ;;      Temps:          0       0       0       0       0
  2828 ;;      Totals:         0       0       0       0       0
  2829 ;;Total ram usage:        0 bytes
  2830 ;; Hardware stack levels used: 1
  2831 ;; Hardware stack levels required when called: 7
  2832 ;; This function calls:
  2833 ;;		Nothing
  2834 ;; This function is called by:
  2835 ;;		_main
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839     1277                     _timer0_init:	
  2840                           ;psect for function _timer0_init
  2841                           
  2842     1277                     l7099:	
  2843                           ;incstack = 0
  2844                           ; Regs used in _timer0_init: [wreg+status,2+status,0]
  2845                           
  2846                           
  2847                           ;timer.c: 21:     TMR0 = 39;
  2848     1277  3027               	movlw	39
  2849     1278  1283               	bcf	3,5	;RP0=0, select bank0
  2850     1279  1303               	bcf	3,6	;RP1=0, select bank0
  2851     127A  0081               	movwf	1	;volatile
  2852     127B                     l7101:
  2853                           
  2854                           ;timer.c: 23:     OPTION_REGbits.T0CS = 0;
  2855     127B  1683               	bsf	3,5	;RP0=1, select bank1
  2856     127C  1303               	bcf	3,6	;RP1=0, select bank1
  2857     127D  1281               	bcf	1,5	;volatile
  2858     127E                     l7103:
  2859                           
  2860                           ;timer.c: 24:     OPTION_REGbits.PSA = 0;
  2861     127E  1181               	bcf	1,3	;volatile
  2862     127F                     l7105:
  2863                           
  2864                           ;timer.c: 25:     OPTION_REGbits.PS = 0b111;
  2865     127F  3007               	movlw	7
  2866     1280  0481               	iorwf	1,f	;volatile
  2867     1281                     l7107:
  2868                           
  2869                           ;timer.c: 27:     INTCONbits.T0IF = 0;
  2870     1281  110B               	bcf	11,2	;volatile
  2871     1282                     l7109:
  2872                           
  2873                           ;timer.c: 29:     INTCONbits.T0IE = 0;
  2874     1282  128B               	bcf	11,5	;volatile
  2875     1283                     l196:
  2876     1283  0008               	return
  2877     1284                     __end_of_timer0_init:
  2878                           
  2879                           	psect	text2
  2880     1341                     __ptext2:	
  2881 ;; *************** function _rs232_init *****************
  2882 ;; Defined at:
  2883 ;;		line 8 in file "rs232.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;		None
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;		None
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  1    wreg      void 
  2890 ;; Registers used:
  2891 ;;		wreg
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2897 ;;      Params:         0       0       0       0       0
  2898 ;;      Locals:         0       0       0       0       0
  2899 ;;      Temps:          0       0       0       0       0
  2900 ;;      Totals:         0       0       0       0       0
  2901 ;;Total ram usage:        0 bytes
  2902 ;; Hardware stack levels used: 1
  2903 ;; Hardware stack levels required when called: 7
  2904 ;; This function calls:
  2905 ;;		Nothing
  2906 ;; This function is called by:
  2907 ;;		_main
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911     1341                     _rs232_init:	
  2912                           ;psect for function _rs232_init
  2913                           
  2914     1341                     l7025:	
  2915                           ;incstack = 0
  2916                           ; Regs used in _rs232_init: [wreg]
  2917                           
  2918                           
  2919                           ;rs232.c: 10:     BRG16 = 0;
  2920     1341  1683               	bsf	3,5	;RP0=1, select bank3
  2921     1342  1703               	bsf	3,6	;RP1=1, select bank3
  2922     1343  1187               	bcf	7,3	;volatile
  2923                           
  2924                           ;rs232.c: 12:     TRISC6 = 0;
  2925     1344  1683               	bsf	3,5	;RP0=1, select bank1
  2926     1345  1303               	bcf	3,6	;RP1=0, select bank1
  2927     1346  1307               	bcf	7,6	;volatile
  2928                           
  2929                           ;rs232.c: 13:     TRISC7 = 1;
  2930     1347  1787               	bsf	7,7	;volatile
  2931                           
  2932                           ;rs232.c: 14:     TXEN = 1;
  2933     1348  1698               	bsf	24,5	;volatile
  2934                           
  2935                           ;rs232.c: 15:     SYNC = 0;
  2936     1349  1218               	bcf	24,4	;volatile
  2937                           
  2938                           ;rs232.c: 16:     SPEN = 1;
  2939     134A  1283               	bcf	3,5	;RP0=0, select bank0
  2940     134B  1303               	bcf	3,6	;RP1=0, select bank0
  2941     134C  1798               	bsf	24,7	;volatile
  2942                           
  2943                           ;rs232.c: 17:     CREN = 1;
  2944     134D  1618               	bsf	24,4	;volatile
  2945                           
  2946                           ;rs232.c: 18:     PIE1bits.RCIE = 1;
  2947     134E  1683               	bsf	3,5	;RP0=1, select bank1
  2948     134F  1303               	bcf	3,6	;RP1=0, select bank1
  2949     1350  168C               	bsf	12,5	;volatile
  2950                           
  2951                           ;rs232.c: 19:     INTCONbits.PEIE = 1;
  2952     1351  170B               	bsf	11,6	;volatile
  2953                           
  2954                           ;rs232.c: 20:     BRGH = 0;
  2955     1352  1118               	bcf	24,2	;volatile
  2956     1353                     l7027:
  2957                           
  2958                           ;rs232.c: 21:     SPBRG = 25;
  2959     1353  3019               	movlw	25
  2960     1354  0099               	movwf	25	;volatile
  2961     1355                     l7029:
  2962                           
  2963                           ;rs232.c: 22:     TX9 = 0;
  2964     1355  1318               	bcf	24,6	;volatile
  2965     1356                     l7031:
  2966                           
  2967                           ;rs232.c: 23:     PIR1bits.RCIF = 0;
  2968     1356  1283               	bcf	3,5	;RP0=0, select bank0
  2969     1357  1303               	bcf	3,6	;RP1=0, select bank0
  2970     1358  128C               	bcf	12,5	;volatile
  2971     1359                     l321:
  2972     1359  0008               	return
  2973     135A                     __end_of_rs232_init:
  2974                           
  2975                           	psect	text3
  2976     1399                     __ptext3:	
  2977 ;; *************** function _printf *****************
  2978 ;; Defined at:
  2979 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\printf.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;  f               2    9[BANK3 ] PTR const unsigned char 
  2982 ;;		 -> STR_1(6), 
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;  pb              2   13[BANK3 ] struct __prbuf
  2985 ;;  ap              2   11[BANK3 ] PTR void [1]
  2986 ;;		 -> ?_sprintf(2), ?_printf(2), 
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  2    9[BANK3 ] int 
  2989 ;; Registers used:
  2990 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2996 ;;      Params:         0       0       0       2       0
  2997 ;;      Locals:         0       0       0       4       0
  2998 ;;      Temps:          0       0       0       0       0
  2999 ;;      Totals:         0       0       0       6       0
  3000 ;;Total ram usage:        6 bytes
  3001 ;; Hardware stack levels used: 1
  3002 ;; Hardware stack levels required when called: 9
  3003 ;; This function calls:
  3004 ;;		__doprnt
  3005 ;; This function is called by:
  3006 ;;		_main
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010     1399                     _printf:	
  3011                           ;psect for function _printf
  3012                           
  3013     1399                     l8351:	
  3014                           ;incstack = 0
  3015 ;; hardware stack exceeded
  3016                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3017                           
  3018     1399  1683               	bsf	3,5	;RP0=1, select bank3
  3019     139A  1703               	bsf	3,6	;RP1=1, select bank3
  3020     139B  01CE               	clrf	printf@pb^(0+384)
  3021     139C                     l8353:
  3022     139C  3001               	movlw	(low (fp__putch-fpbase))& (0+255)
  3023     139D  00CF               	movwf	(low ((printf@pb| (0+256)+1)))^(0+128)
  3024     139E                     l8355:
  3025     139E  30CC               	movlw	(low ((?_printf| (0+256)+2)))& (0+255)
  3026     139F  00CC               	movwf	printf@ap^(0+384)
  3027     13A0  3001               	movlw	1
  3028     13A1  00CD               	movwf	(printf@ap+1)^(0+384)
  3029     13A2                     l8357:
  3030                           
  3031                           ;	Return value of _printf is never used
  3032     13A2  30CE               	movlw	(low (printf@pb| (0+256)))& (0+255)
  3033     13A3  1683               	bsf	3,5	;RP0=1, select bank1
  3034     13A4  1303               	bcf	3,6	;RP1=0, select bank1
  3035     13A5  00B9               	movwf	__doprnt@pb^(0+128)
  3036     13A6  3001               	movlw	1
  3037     13A7  00BA               	movwf	(__doprnt@pb+1)^(0+128)
  3038     13A8  1683               	bsf	3,5	;RP0=1, select bank3
  3039     13A9  1703               	bsf	3,6	;RP1=1, select bank3
  3040     13AA  084A               	movf	printf@f^(0+384),w
  3041     13AB  1683               	bsf	3,5	;RP0=1, select bank1
  3042     13AC  1303               	bcf	3,6	;RP1=0, select bank1
  3043     13AD  00BB               	movwf	__doprnt@f^(0+128)
  3044     13AE  1683               	bsf	3,5	;RP0=1, select bank3
  3045     13AF  1703               	bsf	3,6	;RP1=1, select bank3
  3046     13B0  084B               	movf	(printf@f+1)^(0+384),w
  3047     13B1  1683               	bsf	3,5	;RP0=1, select bank1
  3048     13B2  1303               	bcf	3,6	;RP1=0, select bank1
  3049     13B3  00BC               	movwf	(__doprnt@f+1)^(0+128)
  3050     13B4  30CC               	movlw	(low (printf@ap| (0+256)))& (0+255)
  3051     13B5  00BD               	movwf	__doprnt@ap^(0+128)
  3052     13B6  3001               	movlw	1
  3053     13B7  00BE               	movwf	(__doprnt@ap+1)^(0+128)
  3054     13B8  120A  118A  22F0  160A  118A  	fcall	__doprnt
  3055     13BD                     l1204:
  3056     13BD  0008               	return
  3057     13BE                     __end_of_printf:
  3058                           
  3059                           	psect	text4
  3060     02F0                     __ptext4:	
  3061 ;; *************** function __doprnt *****************
  3062 ;; Defined at:
  3063 ;;		line 471 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;  pb              2   25[BANK1 ] PTR struct __prbuf
  3066 ;;		 -> sprintf@pb(2), printf@pb(2), 
  3067 ;;  f               2   27[BANK1 ] PTR const unsigned char 
  3068 ;;		 -> STR_46(10), STR_45(10), STR_43(9), STR_22(7), 
  3069 ;;		 -> STR_17(9), STR_1(6), 
  3070 ;;  ap              2   29[BANK1 ] PTR PTR void 
  3071 ;;		 -> sprintf@ap(2), printf@ap(2), 
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;  tmpval          4    0        struct .
  3074 ;;  val             2    6[BANK3 ] unsigned int 
  3075 ;;  cp              2    0        PTR const unsigned char 
  3076 ;;  len             2    0        unsigned int 
  3077 ;;  c               1    8[BANK3 ] unsigned char 
  3078 ;;  flag            1    5[BANK3 ] unsigned char 
  3079 ;;  prec            1    4[BANK3 ] char 
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  2   25[BANK1 ] int 
  3082 ;; Registers used:
  3083 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3089 ;;      Params:         0       0       6       0       0
  3090 ;;      Locals:         0       0       0       5       0
  3091 ;;      Temps:          0       0       0       4       0
  3092 ;;      Totals:         0       0       6       9       0
  3093 ;;Total ram usage:       15 bytes
  3094 ;; Hardware stack levels used: 1
  3095 ;; Hardware stack levels required when called: 8
  3096 ;; This function calls:
  3097 ;;		NULL
  3098 ;;		___lwdiv
  3099 ;;		___lwmod
  3100 ;;		_putch
  3101 ;; This function is called by:
  3102 ;;		_printf
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105                           
  3106     02F0                     __doprnt:	
  3107                           ;psect for function __doprnt
  3108                           
  3109     02F0                     l8275:	
  3110                           ;incstack = 0
  3111 ;; hardware stack exceeded
  3112                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3113                           
  3114                           
  3115                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 471: _doprnt(stru
      +                          ct __prbuf * pb, register const char * f, register va_list ap);C:\Program Files\Microchi
      +                          p\xc8\v2.41\pic\sources\c90\common\doprnt.c: 472: {;C:\Program Files\Microchip\xc8\v2.41
      +                          \pic\sources\c90\common\doprnt.c: 512:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files\Microchip\xc8\v2.
      +                          41\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;;C:\Program Files\Microchip
      +                          \xc8\v2.41\pic\sources\c90\common\doprnt.c: 543:  } tmpval;
  3116     02F0  2D05               	goto	l8341
  3117     02F1                     l8277:
  3118                           
  3119                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3120     02F1  3025               	movlw	37
  3121     02F2  0649               	xorwf	__doprnt@c^(0+384),w
  3122     02F3  1903               	btfsc	3,2
  3123     02F4  2AF6               	goto	u8111
  3124     02F5  2AF7               	goto	u8110
  3125     02F6                     u8111:
  3126     02F6  2B49               	goto	l8287
  3127     02F7                     u8110:
  3128     02F7                     l8279:
  3129     02F7  1683               	bsf	3,5	;RP0=1, select bank1
  3130     02F8  1303               	bcf	3,6	;RP1=0, select bank1
  3131     02F9  0839               	movf	__doprnt@pb^(0+128),w
  3132     02FA  3E01               	addlw	1
  3133     02FB  1683               	bsf	3,5	;RP0=1, select bank3
  3134     02FC  1703               	bsf	3,6	;RP1=1, select bank3
  3135     02FD  00C1               	movwf	??__doprnt^(0+384)
  3136     02FE  1683               	bsf	3,5	;RP0=1, select bank1
  3137     02FF  1303               	bcf	3,6	;RP1=0, select bank1
  3138     0300  083A               	movf	(__doprnt@pb+1)^(0+128),w
  3139     0301  1803               	skipnc
  3140     0302  3E01               	addlw	1
  3141     0303  3E00               	addlw	0
  3142     0304  1683               	bsf	3,5	;RP0=1, select bank3
  3143     0305  1703               	bsf	3,6	;RP1=1, select bank3
  3144     0306  00C2               	movwf	(??__doprnt+1)^(0+384)
  3145     0307  0841               	movf	??__doprnt^(0+384),w
  3146     0308  0084               	movwf	4
  3147     0309  1783               	bsf	3,7
  3148     030A  1C42               	btfss	(??__doprnt+1)^(0+384),0
  3149     030B  1383               	bcf	3,7
  3150     030C  0800               	movf	0,w
  3151     030D  1903               	btfsc	3,2
  3152     030E  2B10               	goto	u8121
  3153     030F  2B11               	goto	u8120
  3154     0310                     u8121:
  3155     0310  2B2F               	goto	l8283
  3156     0311                     u8120:
  3157     0311                     l8281:
  3158     0311  0849               	movf	__doprnt@c^(0+384),w
  3159     0312  1683               	bsf	3,5	;RP0=1, select bank1
  3160     0313  1303               	bcf	3,6	;RP1=0, select bank1
  3161     0314  00AD               	movwf	putch@c^(0+128)
  3162     0315  0839               	movf	__doprnt@pb^(0+128),w
  3163     0316  3E01               	addlw	1
  3164     0317  1683               	bsf	3,5	;RP0=1, select bank3
  3165     0318  1703               	bsf	3,6	;RP1=1, select bank3
  3166     0319  00C1               	movwf	??__doprnt^(0+384)
  3167     031A  1683               	bsf	3,5	;RP0=1, select bank1
  3168     031B  1303               	bcf	3,6	;RP1=0, select bank1
  3169     031C  083A               	movf	(__doprnt@pb+1)^(0+128),w
  3170     031D  1803               	skipnc
  3171     031E  3E01               	addlw	1
  3172     031F  3E00               	addlw	0
  3173     0320  1683               	bsf	3,5	;RP0=1, select bank3
  3174     0321  1703               	bsf	3,6	;RP1=1, select bank3
  3175     0322  00C2               	movwf	(??__doprnt+1)^(0+384)
  3176     0323  0841               	movf	??__doprnt^(0+384),w
  3177     0324  0084               	movwf	4
  3178     0325  1783               	bsf	3,7
  3179     0326  1C42               	btfss	(??__doprnt+1)^(0+384),0
  3180     0327  1383               	bcf	3,7
  3181     0328  0800               	movf	0,w
  3182     0329  120A  118A  2039  120A  118A  	fcall	fptable
  3183     032E  2AF0               	goto	l8275
  3184     032F                     l8283:
  3185     032F  1683               	bsf	3,5	;RP0=1, select bank1
  3186     0330  1303               	bcf	3,6	;RP1=0, select bank1
  3187     0331  0839               	movf	__doprnt@pb^(0+128),w
  3188     0332  0084               	movwf	4
  3189     0333  1783               	bsf	3,7
  3190     0334  1C3A               	btfss	(__doprnt@pb+1)^(0+128),0
  3191     0335  1383               	bcf	3,7
  3192     0336  0800               	movf	0,w
  3193     0337  0084               	movwf	4
  3194     0338  1683               	bsf	3,5	;RP0=1, select bank3
  3195     0339  1703               	bsf	3,6	;RP1=1, select bank3
  3196     033A  0849               	movf	__doprnt@c^(0+384),w
  3197     033B  1383               	bcf	3,7	;select IRP bank0
  3198     033C  0080               	movwf	0
  3199     033D                     l8285:
  3200     033D  3001               	movlw	1
  3201     033E  00FF               	movwf	btemp+1
  3202     033F  1683               	bsf	3,5	;RP0=1, select bank1
  3203     0340  1303               	bcf	3,6	;RP1=0, select bank1
  3204     0341  0839               	movf	__doprnt@pb^(0+128),w
  3205     0342  0084               	movwf	4
  3206     0343  1783               	bsf	3,7
  3207     0344  1C3A               	btfss	(__doprnt@pb+1)^(0+128),0
  3208     0345  1383               	bcf	3,7
  3209     0346  087F               	movf	btemp+1,w
  3210     0347  0780               	addwf	0,f
  3211     0348  2AF0               	goto	l8275
  3212     0349                     l8287:
  3213                           
  3214                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3215     0349  01C6               	clrf	__doprnt@flag^(0+384)
  3216                           
  3217                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  3218     034A  2B4D               	goto	l8291
  3219     034B                     l1225:	
  3220                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 843:   case 'u':
  3221                           
  3222                           
  3223                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          x40;
  3224     034B  1746               	bsf	__doprnt@flag^(0+384),6
  3225                           
  3226                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 845:    break;
  3227     034C  2B87               	goto	l1223
  3228     034D                     l8291:
  3229     034D  1683               	bsf	3,5	;RP0=1, select bank1
  3230     034E  1303               	bcf	3,6	;RP1=0, select bank1
  3231     034F  083C               	movf	(__doprnt@f+1)^(0+128),w
  3232     0350  1683               	bsf	3,5	;RP0=1, select bank3
  3233     0351  1703               	bsf	3,6	;RP1=1, select bank3
  3234     0352  00C2               	movwf	(??__doprnt^(0+384)+1)
  3235     0353  1683               	bsf	3,5	;RP0=1, select bank1
  3236     0354  1303               	bcf	3,6	;RP1=0, select bank1
  3237     0355  083B               	movf	__doprnt@f^(0+128),w
  3238     0356  1683               	bsf	3,5	;RP0=1, select bank3
  3239     0357  1703               	bsf	3,6	;RP1=1, select bank3
  3240     0358  00C1               	movwf	??__doprnt^(0+384)
  3241     0359  1683               	bsf	3,5	;RP0=1, select bank1
  3242     035A  1303               	bcf	3,6	;RP1=0, select bank1
  3243     035B  0ABB               	incf	__doprnt@f^(0+128),f
  3244     035C  1903               	skipnz
  3245     035D  0ABC               	incf	(__doprnt@f+1)^(0+128),f
  3246     035E  1683               	bsf	3,5	;RP0=1, select bank3
  3247     035F  1703               	bsf	3,6	;RP1=1, select bank3
  3248     0360  0842               	movf	(??__doprnt+1)^(0+384),w
  3249     0361  1283               	bcf	3,5	;RP0=0, select bank0
  3250     0362  1303               	bcf	3,6	;RP1=0, select bank0
  3251     0363  00FF               	movwf	btemp+1
  3252     0364  1683               	bsf	3,5	;RP0=1, select bank3
  3253     0365  1703               	bsf	3,6	;RP1=1, select bank3
  3254     0366  0841               	movf	??__doprnt^(0+384),w
  3255     0367  0084               	movwf	4
  3256     0368  1283               	bcf	3,5	;RP0=0, select bank0
  3257     0369  1303               	bcf	3,6	;RP1=0, select bank0
  3258     036A  120A  118A  2700  120A  118A  	fcall	stringtab
  3259     036F  1683               	bsf	3,5	;RP0=1, select bank3
  3260     0370  1703               	bsf	3,6	;RP1=1, select bank3
  3261     0371  00C9               	movwf	__doprnt@c^(0+384)
  3262     0372  00C3               	movwf	(??__doprnt+2)^(0+384)
  3263     0373  01C4               	clrf	((??__doprnt+2)^(0+384)+1)
  3264                           
  3265                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3266                           ; Switch size 1, requested type "simple"
  3267                           ; Number of cases is 1, Range of values is 0 to 0
  3268                           ; switch strategies available:
  3269                           ; Name         Instructions Cycles
  3270                           ; simple_byte            4     3 (average)
  3271                           ; direct_byte           11     8 (fixed)
  3272                           ; jumptable            260     6 (fixed)
  3273                           ;	Chosen strategy is simple_byte
  3274     0374  0844               	movf	(??__doprnt+3)^(0+384),w
  3275     0375  3A00               	xorlw	0	; case 0
  3276     0376  1903               	skipnz
  3277     0377  2B79               	goto	l8879
  3278     0378  2D05               	goto	l8341
  3279     0379                     l8879:
  3280                           
  3281                           ; Switch size 1, requested type "simple"
  3282                           ; Number of cases is 4, Range of values is 0 to 117
  3283                           ; switch strategies available:
  3284                           ; Name         Instructions Cycles
  3285                           ; simple_byte           13     7 (average)
  3286                           ; jumptable            260     6 (fixed)
  3287                           ;	Chosen strategy is simple_byte
  3288     0379  0843               	movf	(??__doprnt+2)^(0+384),w
  3289     037A  3A00               	xorlw	0	; case 0
  3290     037B  1903               	skipnz
  3291     037C  2D2F               	goto	l8343
  3292     037D  3A64               	xorlw	100	; case 100
  3293     037E  1903               	skipnz
  3294     037F  2B87               	goto	l1223
  3295     0380  3A0D               	xorlw	13	; case 105
  3296     0381  1903               	skipnz
  3297     0382  2B87               	goto	l1223
  3298     0383  3A1C               	xorlw	28	; case 117
  3299     0384  1903               	skipnz
  3300     0385  2B4B               	goto	l1225
  3301     0386  2D05               	goto	l8341
  3302     0387                     l1223:
  3303                           
  3304                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x40) == 0x00)
  3305     0387  1B46               	btfsc	__doprnt@flag^(0+384),6
  3306     0388  2B8A               	goto	u8131
  3307     0389  2B8B               	goto	u8130
  3308     038A                     u8131:
  3309     038A  2BB7               	goto	l8301
  3310     038B                     u8130:
  3311     038B                     l8293:
  3312                           
  3313                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3314     038B  1683               	bsf	3,5	;RP0=1, select bank1
  3315     038C  1303               	bcf	3,6	;RP1=0, select bank1
  3316     038D  083D               	movf	__doprnt@ap^(0+128),w
  3317     038E  0084               	movwf	4
  3318     038F  1783               	bsf	3,7
  3319     0390  1C3E               	btfss	(__doprnt@ap+1)^(0+128),0
  3320     0391  1383               	bcf	3,7
  3321     0392  0800               	movf	0,w
  3322     0393  1683               	bsf	3,5	;RP0=1, select bank3
  3323     0394  1703               	bsf	3,6	;RP1=1, select bank3
  3324     0395  00C1               	movwf	??__doprnt^(0+384)
  3325     0396  3002               	movlw	2
  3326     0397  0780               	addwf	0,f
  3327     0398  0A84               	incf	4,f
  3328     0399  0800               	movf	0,w
  3329     039A  00C2               	movwf	(??__doprnt^(0+384)+1)
  3330     039B  3000               	movlw	0
  3331     039C  1803               	skipnc
  3332     039D  0A80               	incf	0,f
  3333     039E  0780               	addwf	0,f
  3334     039F  0841               	movf	??__doprnt^(0+384),w
  3335     03A0  0084               	movwf	4
  3336     03A1  1783               	bsf	3,7
  3337     03A2  1C42               	btfss	(??__doprnt+1)^(0+384),0
  3338     03A3  1383               	bcf	3,7
  3339     03A4  0800               	movf	0,w
  3340     03A5  00C7               	movwf	__doprnt@val^(0+384)
  3341     03A6  0A84               	incf	4,f
  3342     03A7  0800               	movf	0,w
  3343     03A8  00C8               	movwf	(__doprnt@val+1)^(0+384)
  3344     03A9                     l8295:
  3345                           
  3346                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  3347     03A9  1FC8               	btfss	(__doprnt@val+1)^(0+384),7
  3348     03AA  2BAC               	goto	u8141
  3349     03AB  2BAD               	goto	u8140
  3350     03AC                     u8141:
  3351     03AC  2BD5               	goto	l8303
  3352     03AD                     u8140:
  3353     03AD                     l8297:
  3354                           
  3355                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3356     03AD  3003               	movlw	3
  3357     03AE  00FF               	movwf	btemp+1
  3358     03AF  087F               	movf	btemp+1,w
  3359     03B0  04C6               	iorwf	__doprnt@flag^(0+384),f
  3360     03B1                     l8299:
  3361                           
  3362                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3363     03B1  09C7               	comf	__doprnt@val^(0+384),f
  3364     03B2  09C8               	comf	(__doprnt@val+1)^(0+384),f
  3365     03B3  0AC7               	incf	__doprnt@val^(0+384),f
  3366     03B4  1903               	skipnz
  3367     03B5  0AC8               	incf	(__doprnt@val+1)^(0+384),f
  3368     03B6  2BD5               	goto	l8303
  3369     03B7                     l8301:
  3370                           
  3371                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3372     03B7  1683               	bsf	3,5	;RP0=1, select bank1
  3373     03B8  1303               	bcf	3,6	;RP1=0, select bank1
  3374     03B9  083D               	movf	__doprnt@ap^(0+128),w
  3375     03BA  0084               	movwf	4
  3376     03BB  1783               	bsf	3,7
  3377     03BC  1C3E               	btfss	(__doprnt@ap+1)^(0+128),0
  3378     03BD  1383               	bcf	3,7
  3379     03BE  0800               	movf	0,w
  3380     03BF  1683               	bsf	3,5	;RP0=1, select bank3
  3381     03C0  1703               	bsf	3,6	;RP1=1, select bank3
  3382     03C1  00C1               	movwf	??__doprnt^(0+384)
  3383     03C2  3002               	movlw	2
  3384     03C3  0780               	addwf	0,f
  3385     03C4  0A84               	incf	4,f
  3386     03C5  0800               	movf	0,w
  3387     03C6  00C2               	movwf	(??__doprnt^(0+384)+1)
  3388     03C7  3000               	movlw	0
  3389     03C8  1803               	skipnc
  3390     03C9  0A80               	incf	0,f
  3391     03CA  0780               	addwf	0,f
  3392     03CB  0841               	movf	??__doprnt^(0+384),w
  3393     03CC  0084               	movwf	4
  3394     03CD  1783               	bsf	3,7
  3395     03CE  1C42               	btfss	(??__doprnt+1)^(0+384),0
  3396     03CF  1383               	bcf	3,7
  3397     03D0  0800               	movf	0,w
  3398     03D1  00C7               	movwf	__doprnt@val^(0+384)
  3399     03D2  0A84               	incf	4,f
  3400     03D3  0800               	movf	0,w
  3401     03D4  00C8               	movwf	(__doprnt@val+1)^(0+384)
  3402     03D5                     l8303:
  3403                           
  3404                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3405     03D5  01C9               	clrf	__doprnt@c^(0+384)
  3406     03D6  0AC9               	incf	__doprnt@c^(0+384),f
  3407     03D7                     l8309:
  3408                           
  3409                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3410     03D7  0849               	movf	__doprnt@c^(0+384),w
  3411     03D8  00C1               	movwf	??__doprnt^(0+384)
  3412     03D9  0741               	addwf	??__doprnt^(0+384),w
  3413     03DA  3E3A               	addlw	low (_dpowers| (0+32768))
  3414     03DB  0084               	movwf	4
  3415     03DC  3087               	movlw	high (_dpowers| (0+32768))
  3416     03DD  1803               	skipnc
  3417     03DE  3E01               	addlw	1
  3418     03DF  1283               	bcf	3,5	;RP0=0, select bank0
  3419     03E0  1303               	bcf	3,6	;RP1=0, select bank0
  3420     03E1  00FF               	movwf	btemp+1
  3421     03E2  120A  118A  2700  120A  118A  	fcall	stringtab
  3422     03E7  1683               	bsf	3,5	;RP0=1, select bank3
  3423     03E8  1703               	bsf	3,6	;RP1=1, select bank3
  3424     03E9  00C2               	movwf	(??__doprnt+1)^(0+384)
  3425     03EA  1283               	bcf	3,5	;RP0=0, select bank0
  3426     03EB  1303               	bcf	3,6	;RP1=0, select bank0
  3427     03EC  120A  118A  2700  120A  118A  	fcall	stringtab
  3428     03F1  1683               	bsf	3,5	;RP0=1, select bank3
  3429     03F2  1703               	bsf	3,6	;RP1=1, select bank3
  3430     03F3  00C3               	movwf	((??__doprnt+1)^(0+384)+1)
  3431     03F4  0843               	movf	(??__doprnt+2)^(0+384),w
  3432     03F5  0248               	subwf	(__doprnt@val+1)^(0+384),w
  3433     03F6  1D03               	skipz
  3434     03F7  2BFA               	goto	u8155
  3435     03F8  0842               	movf	(??__doprnt+1)^(0+384),w
  3436     03F9  0247               	subwf	__doprnt@val^(0+384),w
  3437     03FA                     u8155:
  3438     03FA  1803               	skipnc
  3439     03FB  2BFD               	goto	u8151
  3440     03FC  2BFE               	goto	u8150
  3441     03FD                     u8151:
  3442     03FD  2BFF               	goto	l8313
  3443     03FE                     u8150:
  3444     03FE  2C09               	goto	l8317
  3445     03FF                     l8313:
  3446     03FF  3001               	movlw	1
  3447     0400  00FF               	movwf	btemp+1
  3448     0401  087F               	movf	btemp+1,w
  3449     0402  07C9               	addwf	__doprnt@c^(0+384),f
  3450     0403                     l8315:
  3451     0403  3005               	movlw	5
  3452     0404  0649               	xorwf	__doprnt@c^(0+384),w
  3453     0405  1D03               	btfss	3,2
  3454     0406  2C08               	goto	u8161
  3455     0407  2C09               	goto	u8160
  3456     0408                     u8161:
  3457     0408  2BD7               	goto	l8309
  3458     0409                     u8160:
  3459     0409                     l8317:
  3460                           
  3461                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3462     0409  0846               	movf	__doprnt@flag^(0+384),w
  3463     040A  3903               	andlw	3
  3464     040B  1903               	btfsc	3,2
  3465     040C  2C0E               	goto	u8171
  3466     040D  2C0F               	goto	u8170
  3467     040E                     u8171:
  3468     040E  2C5C               	goto	l8327
  3469     040F                     u8170:
  3470     040F                     l8319:
  3471     040F  1683               	bsf	3,5	;RP0=1, select bank1
  3472     0410  1303               	bcf	3,6	;RP1=0, select bank1
  3473     0411  0839               	movf	__doprnt@pb^(0+128),w
  3474     0412  3E01               	addlw	1
  3475     0413  1683               	bsf	3,5	;RP0=1, select bank3
  3476     0414  1703               	bsf	3,6	;RP1=1, select bank3
  3477     0415  00C1               	movwf	??__doprnt^(0+384)
  3478     0416  1683               	bsf	3,5	;RP0=1, select bank1
  3479     0417  1303               	bcf	3,6	;RP1=0, select bank1
  3480     0418  083A               	movf	(__doprnt@pb+1)^(0+128),w
  3481     0419  1803               	skipnc
  3482     041A  3E01               	addlw	1
  3483     041B  3E00               	addlw	0
  3484     041C  1683               	bsf	3,5	;RP0=1, select bank3
  3485     041D  1703               	bsf	3,6	;RP1=1, select bank3
  3486     041E  00C2               	movwf	(??__doprnt+1)^(0+384)
  3487     041F  0841               	movf	??__doprnt^(0+384),w
  3488     0420  0084               	movwf	4
  3489     0421  1783               	bsf	3,7
  3490     0422  1C42               	btfss	(??__doprnt+1)^(0+384),0
  3491     0423  1383               	bcf	3,7
  3492     0424  0800               	movf	0,w
  3493     0425  1903               	btfsc	3,2
  3494     0426  2C28               	goto	u8181
  3495     0427  2C29               	goto	u8180
  3496     0428                     u8181:
  3497     0428  2C47               	goto	l8323
  3498     0429                     u8180:
  3499     0429                     l8321:
  3500     0429  302D               	movlw	45
  3501     042A  1683               	bsf	3,5	;RP0=1, select bank1
  3502     042B  1303               	bcf	3,6	;RP1=0, select bank1
  3503     042C  00AD               	movwf	putch@c^(0+128)
  3504     042D  0839               	movf	__doprnt@pb^(0+128),w
  3505     042E  3E01               	addlw	1
  3506     042F  1683               	bsf	3,5	;RP0=1, select bank3
  3507     0430  1703               	bsf	3,6	;RP1=1, select bank3
  3508     0431  00C1               	movwf	??__doprnt^(0+384)
  3509     0432  1683               	bsf	3,5	;RP0=1, select bank1
  3510     0433  1303               	bcf	3,6	;RP1=0, select bank1
  3511     0434  083A               	movf	(__doprnt@pb+1)^(0+128),w
  3512     0435  1803               	skipnc
  3513     0436  3E01               	addlw	1
  3514     0437  3E00               	addlw	0
  3515     0438  1683               	bsf	3,5	;RP0=1, select bank3
  3516     0439  1703               	bsf	3,6	;RP1=1, select bank3
  3517     043A  00C2               	movwf	(??__doprnt+1)^(0+384)
  3518     043B  0841               	movf	??__doprnt^(0+384),w
  3519     043C  0084               	movwf	4
  3520     043D  1783               	bsf	3,7
  3521     043E  1C42               	btfss	(??__doprnt+1)^(0+384),0
  3522     043F  1383               	bcf	3,7
  3523     0440  0800               	movf	0,w
  3524     0441  120A  118A  2039  120A  118A  	fcall	fptable
  3525     0446  2C5C               	goto	l8327
  3526     0447                     l8323:
  3527     0447  1683               	bsf	3,5	;RP0=1, select bank1
  3528     0448  1303               	bcf	3,6	;RP1=0, select bank1
  3529     0449  0839               	movf	__doprnt@pb^(0+128),w
  3530     044A  0084               	movwf	4
  3531     044B  1783               	bsf	3,7
  3532     044C  1C3A               	btfss	(__doprnt@pb+1)^(0+128),0
  3533     044D  1383               	bcf	3,7
  3534     044E  0800               	movf	0,w
  3535     044F  0084               	movwf	4
  3536     0450  302D               	movlw	45
  3537     0451  1383               	bcf	3,7	;select IRP bank0
  3538     0452  0080               	movwf	0
  3539     0453                     l8325:
  3540     0453  3001               	movlw	1
  3541     0454  00FF               	movwf	btemp+1
  3542     0455  0839               	movf	__doprnt@pb^(0+128),w
  3543     0456  0084               	movwf	4
  3544     0457  1783               	bsf	3,7
  3545     0458  1C3A               	btfss	(__doprnt@pb+1)^(0+128),0
  3546     0459  1383               	bcf	3,7
  3547     045A  087F               	movf	btemp+1,w
  3548     045B  0780               	addwf	0,f
  3549     045C                     l8327:
  3550                           
  3551                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3552     045C  1683               	bsf	3,5	;RP0=1, select bank3
  3553     045D  1703               	bsf	3,6	;RP1=1, select bank3
  3554     045E  0849               	movf	__doprnt@c^(0+384),w
  3555     045F  00C5               	movwf	__doprnt@prec^(0+384)
  3556                           
  3557                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3558     0460  2CFA               	goto	l8339
  3559     0461                     l8329:
  3560                           
  3561                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3562     0461  300A               	movlw	10
  3563     0462  1683               	bsf	3,5	;RP0=1, select bank1
  3564     0463  1303               	bcf	3,6	;RP1=0, select bank1
  3565     0464  00B4               	movwf	___lwmod@divisor^(0+128)
  3566     0465  3000               	movlw	0
  3567     0466  00B5               	movwf	(___lwmod@divisor^(0+128)+1)
  3568     0467  1683               	bsf	3,5	;RP0=1, select bank3
  3569     0468  1703               	bsf	3,6	;RP1=1, select bank3
  3570     0469  0845               	movf	__doprnt@prec^(0+384),w
  3571     046A  00C1               	movwf	??__doprnt^(0+384)
  3572     046B  0741               	addwf	??__doprnt^(0+384),w
  3573     046C  3E3A               	addlw	low (_dpowers| (0+32768))
  3574     046D  0084               	movwf	4
  3575     046E  3087               	movlw	high (_dpowers| (0+32768))
  3576     046F  1803               	skipnc
  3577     0470  3E01               	addlw	1
  3578     0471  1283               	bcf	3,5	;RP0=0, select bank0
  3579     0472  1303               	bcf	3,6	;RP1=0, select bank0
  3580     0473  00FF               	movwf	btemp+1
  3581     0474  120A  118A  2700  120A  118A  	fcall	stringtab
  3582     0479  1683               	bsf	3,5	;RP0=1, select bank1
  3583     047A  1303               	bcf	3,6	;RP1=0, select bank1
  3584     047B  00AD               	movwf	___lwdiv@divisor^(0+128)
  3585     047C  1283               	bcf	3,5	;RP0=0, select bank0
  3586     047D  1303               	bcf	3,6	;RP1=0, select bank0
  3587     047E  120A  118A  2700  120A  118A  	fcall	stringtab
  3588     0483  1683               	bsf	3,5	;RP0=1, select bank1
  3589     0484  1303               	bcf	3,6	;RP1=0, select bank1
  3590     0485  00AE               	movwf	(___lwdiv@divisor+1)^(0+128)
  3591     0486  1683               	bsf	3,5	;RP0=1, select bank3
  3592     0487  1703               	bsf	3,6	;RP1=1, select bank3
  3593     0488  0848               	movf	(__doprnt@val+1)^(0+384),w
  3594     0489  1683               	bsf	3,5	;RP0=1, select bank1
  3595     048A  1303               	bcf	3,6	;RP1=0, select bank1
  3596     048B  00B0               	movwf	(___lwdiv@dividend+1)^(0+128)
  3597     048C  1683               	bsf	3,5	;RP0=1, select bank3
  3598     048D  1703               	bsf	3,6	;RP1=1, select bank3
  3599     048E  0847               	movf	__doprnt@val^(0+384),w
  3600     048F  1683               	bsf	3,5	;RP0=1, select bank1
  3601     0490  1303               	bcf	3,6	;RP1=0, select bank1
  3602     0491  00AF               	movwf	___lwdiv@dividend^(0+128)
  3603     0492  160A  118A  26C0  120A  118A  	fcall	___lwdiv
  3604     0497  1683               	bsf	3,5	;RP0=1, select bank1
  3605     0498  1303               	bcf	3,6	;RP1=0, select bank1
  3606     0499  082E               	movf	(?___lwdiv+1)^(0+128),w
  3607     049A  00B7               	movwf	(___lwmod@dividend+1)^(0+128)
  3608     049B  082D               	movf	?___lwdiv^(0+128),w
  3609     049C  00B6               	movwf	___lwmod@dividend^(0+128)
  3610     049D  160A  118A  25FF  120A  118A  	fcall	___lwmod
  3611     04A2  1683               	bsf	3,5	;RP0=1, select bank1
  3612     04A3  1303               	bcf	3,6	;RP1=0, select bank1
  3613     04A4  0834               	movf	?___lwmod^(0+128),w
  3614     04A5  3E30               	addlw	48
  3615     04A6  1683               	bsf	3,5	;RP0=1, select bank3
  3616     04A7  1703               	bsf	3,6	;RP1=1, select bank3
  3617     04A8  00C9               	movwf	__doprnt@c^(0+384)
  3618     04A9                     l8331:
  3619     04A9  1683               	bsf	3,5	;RP0=1, select bank1
  3620     04AA  1303               	bcf	3,6	;RP1=0, select bank1
  3621     04AB  0839               	movf	__doprnt@pb^(0+128),w
  3622     04AC  3E01               	addlw	1
  3623     04AD  1683               	bsf	3,5	;RP0=1, select bank3
  3624     04AE  1703               	bsf	3,6	;RP1=1, select bank3
  3625     04AF  00C1               	movwf	??__doprnt^(0+384)
  3626     04B0  1683               	bsf	3,5	;RP0=1, select bank1
  3627     04B1  1303               	bcf	3,6	;RP1=0, select bank1
  3628     04B2  083A               	movf	(__doprnt@pb+1)^(0+128),w
  3629     04B3  1803               	skipnc
  3630     04B4  3E01               	addlw	1
  3631     04B5  3E00               	addlw	0
  3632     04B6  1683               	bsf	3,5	;RP0=1, select bank3
  3633     04B7  1703               	bsf	3,6	;RP1=1, select bank3
  3634     04B8  00C2               	movwf	(??__doprnt+1)^(0+384)
  3635     04B9  0841               	movf	??__doprnt^(0+384),w
  3636     04BA  0084               	movwf	4
  3637     04BB  1783               	bsf	3,7
  3638     04BC  1C42               	btfss	(??__doprnt+1)^(0+384),0
  3639     04BD  1383               	bcf	3,7
  3640     04BE  0800               	movf	0,w
  3641     04BF  1903               	btfsc	3,2
  3642     04C0  2CC2               	goto	u8191
  3643     04C1  2CC3               	goto	u8190
  3644     04C2                     u8191:
  3645     04C2  2CE1               	goto	l8335
  3646     04C3                     u8190:
  3647     04C3                     l8333:
  3648     04C3  0849               	movf	__doprnt@c^(0+384),w
  3649     04C4  1683               	bsf	3,5	;RP0=1, select bank1
  3650     04C5  1303               	bcf	3,6	;RP1=0, select bank1
  3651     04C6  00AD               	movwf	putch@c^(0+128)
  3652     04C7  0839               	movf	__doprnt@pb^(0+128),w
  3653     04C8  3E01               	addlw	1
  3654     04C9  1683               	bsf	3,5	;RP0=1, select bank3
  3655     04CA  1703               	bsf	3,6	;RP1=1, select bank3
  3656     04CB  00C1               	movwf	??__doprnt^(0+384)
  3657     04CC  1683               	bsf	3,5	;RP0=1, select bank1
  3658     04CD  1303               	bcf	3,6	;RP1=0, select bank1
  3659     04CE  083A               	movf	(__doprnt@pb+1)^(0+128),w
  3660     04CF  1803               	skipnc
  3661     04D0  3E01               	addlw	1
  3662     04D1  3E00               	addlw	0
  3663     04D2  1683               	bsf	3,5	;RP0=1, select bank3
  3664     04D3  1703               	bsf	3,6	;RP1=1, select bank3
  3665     04D4  00C2               	movwf	(??__doprnt+1)^(0+384)
  3666     04D5  0841               	movf	??__doprnt^(0+384),w
  3667     04D6  0084               	movwf	4
  3668     04D7  1783               	bsf	3,7
  3669     04D8  1C42               	btfss	(??__doprnt+1)^(0+384),0
  3670     04D9  1383               	bcf	3,7
  3671     04DA  0800               	movf	0,w
  3672     04DB  120A  118A  2039  120A  118A  	fcall	fptable
  3673     04E0  2CFA               	goto	l8339
  3674     04E1                     l8335:
  3675     04E1  1683               	bsf	3,5	;RP0=1, select bank1
  3676     04E2  1303               	bcf	3,6	;RP1=0, select bank1
  3677     04E3  0839               	movf	__doprnt@pb^(0+128),w
  3678     04E4  0084               	movwf	4
  3679     04E5  1783               	bsf	3,7
  3680     04E6  1C3A               	btfss	(__doprnt@pb+1)^(0+128),0
  3681     04E7  1383               	bcf	3,7
  3682     04E8  0800               	movf	0,w
  3683     04E9  0084               	movwf	4
  3684     04EA  1683               	bsf	3,5	;RP0=1, select bank3
  3685     04EB  1703               	bsf	3,6	;RP1=1, select bank3
  3686     04EC  0849               	movf	__doprnt@c^(0+384),w
  3687     04ED  1383               	bcf	3,7	;select IRP bank0
  3688     04EE  0080               	movwf	0
  3689     04EF                     l8337:
  3690     04EF  3001               	movlw	1
  3691     04F0  00FF               	movwf	btemp+1
  3692     04F1  1683               	bsf	3,5	;RP0=1, select bank1
  3693     04F2  1303               	bcf	3,6	;RP1=0, select bank1
  3694     04F3  0839               	movf	__doprnt@pb^(0+128),w
  3695     04F4  0084               	movwf	4
  3696     04F5  1783               	bsf	3,7
  3697     04F6  1C3A               	btfss	(__doprnt@pb+1)^(0+128),0
  3698     04F7  1383               	bcf	3,7
  3699     04F8  087F               	movf	btemp+1,w
  3700     04F9  0780               	addwf	0,f
  3701     04FA                     l8339:
  3702                           
  3703                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3704     04FA  30FF               	movlw	255
  3705     04FB  00FF               	movwf	btemp+1
  3706     04FC  087F               	movf	btemp+1,w
  3707     04FD  1683               	bsf	3,5	;RP0=1, select bank3
  3708     04FE  1703               	bsf	3,6	;RP1=1, select bank3
  3709     04FF  07C5               	addwf	__doprnt@prec^(0+384),f
  3710     0500  0A45               	incf	__doprnt@prec^(0+384),w
  3711     0501  1D03               	btfss	3,2
  3712     0502  2D04               	goto	u8201
  3713     0503  2D05               	goto	u8200
  3714     0504                     u8201:
  3715     0504  2C61               	goto	l8329
  3716     0505                     u8200:
  3717     0505                     l8341:
  3718                           
  3719                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3720     0505  1683               	bsf	3,5	;RP0=1, select bank1
  3721     0506  1303               	bcf	3,6	;RP1=0, select bank1
  3722     0507  083C               	movf	(__doprnt@f+1)^(0+128),w
  3723     0508  1683               	bsf	3,5	;RP0=1, select bank3
  3724     0509  1703               	bsf	3,6	;RP1=1, select bank3
  3725     050A  00C2               	movwf	(??__doprnt^(0+384)+1)
  3726     050B  1683               	bsf	3,5	;RP0=1, select bank1
  3727     050C  1303               	bcf	3,6	;RP1=0, select bank1
  3728     050D  083B               	movf	__doprnt@f^(0+128),w
  3729     050E  1683               	bsf	3,5	;RP0=1, select bank3
  3730     050F  1703               	bsf	3,6	;RP1=1, select bank3
  3731     0510  00C1               	movwf	??__doprnt^(0+384)
  3732     0511  1683               	bsf	3,5	;RP0=1, select bank1
  3733     0512  1303               	bcf	3,6	;RP1=0, select bank1
  3734     0513  0ABB               	incf	__doprnt@f^(0+128),f
  3735     0514  1903               	skipnz
  3736     0515  0ABC               	incf	(__doprnt@f+1)^(0+128),f
  3737     0516  1683               	bsf	3,5	;RP0=1, select bank3
  3738     0517  1703               	bsf	3,6	;RP1=1, select bank3
  3739     0518  0842               	movf	(??__doprnt+1)^(0+384),w
  3740     0519  1283               	bcf	3,5	;RP0=0, select bank0
  3741     051A  1303               	bcf	3,6	;RP1=0, select bank0
  3742     051B  00FF               	movwf	btemp+1
  3743     051C  1683               	bsf	3,5	;RP0=1, select bank3
  3744     051D  1703               	bsf	3,6	;RP1=1, select bank3
  3745     051E  0841               	movf	??__doprnt^(0+384),w
  3746     051F  0084               	movwf	4
  3747     0520  1283               	bcf	3,5	;RP0=0, select bank0
  3748     0521  1303               	bcf	3,6	;RP1=0, select bank0
  3749     0522  120A  118A  2700  120A  118A  	fcall	stringtab
  3750     0527  1683               	bsf	3,5	;RP0=1, select bank3
  3751     0528  1703               	bsf	3,6	;RP1=1, select bank3
  3752     0529  00C9               	movwf	__doprnt@c^(0+384)
  3753     052A  0849               	movf	__doprnt@c^(0+384),w
  3754     052B  1D03               	btfss	3,2
  3755     052C  2D2E               	goto	u8211
  3756     052D  2D2F               	goto	u8210
  3757     052E                     u8211:
  3758     052E  2AF1               	goto	l8277
  3759     052F                     u8210:
  3760     052F                     l8343:
  3761                           
  3762                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1566:  return 0;
  3763     052F  1683               	bsf	3,5	;RP0=1, select bank1
  3764     0530  1303               	bcf	3,6	;RP1=0, select bank1
  3765     0531  01B9               	clrf	?__doprnt^(0+128)
  3766     0532  01BA               	clrf	(?__doprnt+1)^(0+128)
  3767     0533                     l1245:
  3768     0533  0008               	return
  3769     0534                     __end_of__doprnt:
  3770                           
  3771                           	psect	text5
  3772     06FF                     __ptext5:	
  3773 ;; *************** function _putch *****************
  3774 ;; Defined at:
  3775 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\putch.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;  c               1   13[BANK1 ] unsigned char 
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;		None
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  1    wreg      void 
  3782 ;; Registers used:
  3783 ;;		None
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3789 ;;      Params:         0       0       1       0       0
  3790 ;;      Locals:         0       0       0       0       0
  3791 ;;      Temps:          0       0       0       0       0
  3792 ;;      Totals:         0       0       1       0       0
  3793 ;;Total ram usage:        1 bytes
  3794 ;; Hardware stack levels used: 1
  3795 ;; Hardware stack levels required when called: 7
  3796 ;; This function calls:
  3797 ;;		Nothing
  3798 ;; This function is called by:
  3799 ;;		_printf
  3800 ;;		i1__doprnt
  3801 ;;		__doprnt
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805     06FF                     _putch:	
  3806                           ;psect for function _putch
  3807                           
  3808     06FF                     l1248:	
  3809                           ;incstack = 0
  3810 ;; hardware stack exceeded
  3811                           ; Regs used in _putch: []
  3812                           
  3813     06FF  0008               	return
  3814     0700                     __end_of_putch:
  3815                           
  3816                           	psect	text6
  3817     15FF                     __ptext6:	
  3818 ;; *************** function ___lwmod *****************
  3819 ;; Defined at:
  3820 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;  divisor         2   20[BANK1 ] unsigned int 
  3823 ;;  dividend        2   22[BANK1 ] unsigned int 
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;  counter         1   24[BANK1 ] unsigned char 
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  2   20[BANK1 ] unsigned int 
  3828 ;; Registers used:
  3829 ;;		wreg, status,2, status,0, btemp+1
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3835 ;;      Params:         0       0       4       0       0
  3836 ;;      Locals:         0       0       1       0       0
  3837 ;;      Temps:          0       0       0       0       0
  3838 ;;      Totals:         0       0       5       0       0
  3839 ;;Total ram usage:        5 bytes
  3840 ;; Hardware stack levels used: 1
  3841 ;; Hardware stack levels required when called: 7
  3842 ;; This function calls:
  3843 ;;		Nothing
  3844 ;; This function is called by:
  3845 ;;		__doprnt
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849     15FF                     ___lwmod:	
  3850                           ;psect for function ___lwmod
  3851                           
  3852     15FF                     l6677:	
  3853                           ;incstack = 0
  3854 ;; hardware stack exceeded
  3855                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  3856                           
  3857     15FF  1683               	bsf	3,5	;RP0=1, select bank1
  3858     1600  1303               	bcf	3,6	;RP1=0, select bank1
  3859     1601  0834               	movf	___lwmod@divisor^(0+128),w
  3860     1602  0435               	iorwf	(___lwmod@divisor+1)^(0+128),w
  3861     1603  1903               	btfsc	3,2
  3862     1604  2E06               	goto	u6551
  3863     1605  2E07               	goto	u6550
  3864     1606                     u6551:
  3865     1606  2E36               	goto	l6695
  3866     1607                     u6550:
  3867     1607                     l6679:
  3868     1607  01B8               	clrf	___lwmod@counter^(0+128)
  3869     1608  0AB8               	incf	___lwmod@counter^(0+128),f
  3870     1609  2E15               	goto	l6685
  3871     160A                     l6681:
  3872     160A  3001               	movlw	1
  3873     160B                     u6565:
  3874     160B  1003               	clrc
  3875     160C  0DB4               	rlf	___lwmod@divisor^(0+128),f
  3876     160D  0DB5               	rlf	(___lwmod@divisor+1)^(0+128),f
  3877     160E  3EFF               	addlw	-1
  3878     160F  1D03               	skipz
  3879     1610  2E0B               	goto	u6565
  3880     1611                     l6683:
  3881     1611  3001               	movlw	1
  3882     1612  00FF               	movwf	btemp+1
  3883     1613  087F               	movf	btemp+1,w
  3884     1614  07B8               	addwf	___lwmod@counter^(0+128),f
  3885     1615                     l6685:
  3886     1615  1FB5               	btfss	(___lwmod@divisor+1)^(0+128),7
  3887     1616  2E18               	goto	u6571
  3888     1617  2E19               	goto	u6570
  3889     1618                     u6571:
  3890     1618  2E0A               	goto	l6681
  3891     1619                     u6570:
  3892     1619                     l6687:
  3893     1619  0835               	movf	(___lwmod@divisor+1)^(0+128),w
  3894     161A  0237               	subwf	(___lwmod@dividend+1)^(0+128),w
  3895     161B  1D03               	skipz
  3896     161C  2E1F               	goto	u6585
  3897     161D  0834               	movf	___lwmod@divisor^(0+128),w
  3898     161E  0236               	subwf	___lwmod@dividend^(0+128),w
  3899     161F                     u6585:
  3900     161F  1C03               	skipc
  3901     1620  2E22               	goto	u6581
  3902     1621  2E23               	goto	u6580
  3903     1622                     u6581:
  3904     1622  2E29               	goto	l6691
  3905     1623                     u6580:
  3906     1623                     l6689:
  3907     1623  0834               	movf	___lwmod@divisor^(0+128),w
  3908     1624  02B6               	subwf	___lwmod@dividend^(0+128),f
  3909     1625  0835               	movf	(___lwmod@divisor+1)^(0+128),w
  3910     1626  1C03               	skipc
  3911     1627  03B7               	decf	(___lwmod@dividend+1)^(0+128),f
  3912     1628  02B7               	subwf	(___lwmod@dividend+1)^(0+128),f
  3913     1629                     l6691:
  3914     1629  3001               	movlw	1
  3915     162A                     u6595:
  3916     162A  1003               	clrc
  3917     162B  0CB5               	rrf	(___lwmod@divisor+1)^(0+128),f
  3918     162C  0CB4               	rrf	___lwmod@divisor^(0+128),f
  3919     162D  3EFF               	addlw	-1
  3920     162E  1D03               	skipz
  3921     162F  2E2A               	goto	u6595
  3922     1630                     l6693:
  3923     1630  3001               	movlw	1
  3924     1631  02B8               	subwf	___lwmod@counter^(0+128),f
  3925     1632  1D03               	btfss	3,2
  3926     1633  2E35               	goto	u6601
  3927     1634  2E36               	goto	u6600
  3928     1635                     u6601:
  3929     1635  2E19               	goto	l6687
  3930     1636                     u6600:
  3931     1636                     l6695:
  3932     1636  0837               	movf	(___lwmod@dividend+1)^(0+128),w
  3933     1637  00B5               	movwf	(?___lwmod+1)^(0+128)
  3934     1638  0836               	movf	___lwmod@dividend^(0+128),w
  3935     1639  00B4               	movwf	?___lwmod^(0+128)
  3936     163A                     l943:
  3937     163A  0008               	return
  3938     163B                     __end_of___lwmod:
  3939                           
  3940                           	psect	text7
  3941     16C0                     __ptext7:	
  3942 ;; *************** function ___lwdiv *****************
  3943 ;; Defined at:
  3944 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;  divisor         2   13[BANK1 ] unsigned int 
  3947 ;;  dividend        2   15[BANK1 ] unsigned int 
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;  quotient        2   18[BANK1 ] unsigned int 
  3950 ;;  counter         1   17[BANK1 ] unsigned char 
  3951 ;; Return value:  Size  Location     Type
  3952 ;;                  2   13[BANK1 ] unsigned int 
  3953 ;; Registers used:
  3954 ;;		wreg, status,2, status,0, btemp+1
  3955 ;; Tracked objects:
  3956 ;;		On entry : 0/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3960 ;;      Params:         0       0       4       0       0
  3961 ;;      Locals:         0       0       3       0       0
  3962 ;;      Temps:          0       0       0       0       0
  3963 ;;      Totals:         0       0       7       0       0
  3964 ;;Total ram usage:        7 bytes
  3965 ;; Hardware stack levels used: 1
  3966 ;; Hardware stack levels required when called: 7
  3967 ;; This function calls:
  3968 ;;		Nothing
  3969 ;; This function is called by:
  3970 ;;		__doprnt
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974     16C0                     ___lwdiv:	
  3975                           ;psect for function ___lwdiv
  3976                           
  3977     16C0                     l6651:	
  3978                           ;incstack = 0
  3979 ;; hardware stack exceeded
  3980                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  3981                           
  3982     16C0  1683               	bsf	3,5	;RP0=1, select bank1
  3983     16C1  1303               	bcf	3,6	;RP1=0, select bank1
  3984     16C2  01B2               	clrf	___lwdiv@quotient^(0+128)
  3985     16C3  01B3               	clrf	(___lwdiv@quotient+1)^(0+128)
  3986     16C4                     l6653:
  3987     16C4  082D               	movf	___lwdiv@divisor^(0+128),w
  3988     16C5  042E               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  3989     16C6  1903               	btfsc	3,2
  3990     16C7  2EC9               	goto	u6481
  3991     16C8  2ECA               	goto	u6480
  3992     16C9                     u6481:
  3993     16C9  2F01               	goto	l6673
  3994     16CA                     u6480:
  3995     16CA                     l6655:
  3996     16CA  01B1               	clrf	___lwdiv@counter^(0+128)
  3997     16CB  0AB1               	incf	___lwdiv@counter^(0+128),f
  3998     16CC  2ED8               	goto	l6661
  3999     16CD                     l6657:
  4000     16CD  3001               	movlw	1
  4001     16CE                     u6495:
  4002     16CE  1003               	clrc
  4003     16CF  0DAD               	rlf	___lwdiv@divisor^(0+128),f
  4004     16D0  0DAE               	rlf	(___lwdiv@divisor+1)^(0+128),f
  4005     16D1  3EFF               	addlw	-1
  4006     16D2  1D03               	skipz
  4007     16D3  2ECE               	goto	u6495
  4008     16D4                     l6659:
  4009     16D4  3001               	movlw	1
  4010     16D5  00FF               	movwf	btemp+1
  4011     16D6  087F               	movf	btemp+1,w
  4012     16D7  07B1               	addwf	___lwdiv@counter^(0+128),f
  4013     16D8                     l6661:
  4014     16D8  1FAE               	btfss	(___lwdiv@divisor+1)^(0+128),7
  4015     16D9  2EDB               	goto	u6501
  4016     16DA  2EDC               	goto	u6500
  4017     16DB                     u6501:
  4018     16DB  2ECD               	goto	l6657
  4019     16DC                     u6500:
  4020     16DC                     l6663:
  4021     16DC  3001               	movlw	1
  4022     16DD                     u6515:
  4023     16DD  1003               	clrc
  4024     16DE  0DB2               	rlf	___lwdiv@quotient^(0+128),f
  4025     16DF  0DB3               	rlf	(___lwdiv@quotient+1)^(0+128),f
  4026     16E0  3EFF               	addlw	-1
  4027     16E1  1D03               	skipz
  4028     16E2  2EDD               	goto	u6515
  4029     16E3  082E               	movf	(___lwdiv@divisor+1)^(0+128),w
  4030     16E4  0230               	subwf	(___lwdiv@dividend+1)^(0+128),w
  4031     16E5  1D03               	skipz
  4032     16E6  2EE9               	goto	u6525
  4033     16E7  082D               	movf	___lwdiv@divisor^(0+128),w
  4034     16E8  022F               	subwf	___lwdiv@dividend^(0+128),w
  4035     16E9                     u6525:
  4036     16E9  1C03               	skipc
  4037     16EA  2EEC               	goto	u6521
  4038     16EB  2EED               	goto	u6520
  4039     16EC                     u6521:
  4040     16EC  2EF4               	goto	l6669
  4041     16ED                     u6520:
  4042     16ED                     l6665:
  4043     16ED  082D               	movf	___lwdiv@divisor^(0+128),w
  4044     16EE  02AF               	subwf	___lwdiv@dividend^(0+128),f
  4045     16EF  082E               	movf	(___lwdiv@divisor+1)^(0+128),w
  4046     16F0  1C03               	skipc
  4047     16F1  03B0               	decf	(___lwdiv@dividend+1)^(0+128),f
  4048     16F2  02B0               	subwf	(___lwdiv@dividend+1)^(0+128),f
  4049     16F3                     l6667:
  4050     16F3  1432               	bsf	___lwdiv@quotient^(0+128),0
  4051     16F4                     l6669:
  4052     16F4  3001               	movlw	1
  4053     16F5                     u6535:
  4054     16F5  1003               	clrc
  4055     16F6  0CAE               	rrf	(___lwdiv@divisor+1)^(0+128),f
  4056     16F7  0CAD               	rrf	___lwdiv@divisor^(0+128),f
  4057     16F8  3EFF               	addlw	-1
  4058     16F9  1D03               	skipz
  4059     16FA  2EF5               	goto	u6535
  4060     16FB                     l6671:
  4061     16FB  3001               	movlw	1
  4062     16FC  02B1               	subwf	___lwdiv@counter^(0+128),f
  4063     16FD  1D03               	btfss	3,2
  4064     16FE  2F00               	goto	u6541
  4065     16FF  2F01               	goto	u6540
  4066     1700                     u6541:
  4067     1700  2EDC               	goto	l6663
  4068     1701                     u6540:
  4069     1701                     l6673:
  4070     1701  0833               	movf	(___lwdiv@quotient+1)^(0+128),w
  4071     1702  00AE               	movwf	(?___lwdiv+1)^(0+128)
  4072     1703  0832               	movf	___lwdiv@quotient^(0+128),w
  4073     1704  00AD               	movwf	?___lwdiv^(0+128)
  4074     1705                     l933:
  4075     1705  0008               	return
  4076     1706                     __end_of___lwdiv:
  4077                           
  4078                           	psect	text8
  4079     0A34                     __ptext8:	
  4080 ;; *************** function _lcd_puts *****************
  4081 ;; Defined at:
  4082 ;;		line 65 in file "lcd.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;  str             2   15[BANK1 ] PTR const unsigned char 
  4085 ;;		 -> STR_47(11), STR_44(12), STR_42(12), estado_executa_muda@tmp(17), 
  4086 ;;		 -> STR_41(14), STR_40(7), STR_39(7), STR_38(7), 
  4087 ;;		 -> STR_37(6), STR_36(7), STR_35(7), STR_34(6), 
  4088 ;;		 -> STR_33(11), STR_32(11), STR_31(11), STR_30(9), 
  4089 ;;		 -> STR_29(15), STR_28(14), STR_27(7), STR_26(8), 
  4090 ;;		 -> STR_25(10), STR_24(15), STR_23(9), mq_mostra@temp_str(16), 
  4091 ;;		 -> STR_21(11), STR_20(11), STR_19(11), STR_18(9), 
  4092 ;;		 -> adcon_mostra@temp_str(9), STR_16(14), STR_15(11), STR_14(11), 
  4093 ;;		 -> STR_13(11), STR_12(9), STR_11(7), STR_10(7), 
  4094 ;;		 -> STR_9(7), STR_8(6), STR_7(7), STR_6(7), 
  4095 ;;		 -> STR_5(6), STR_4(11), STR_3(2), STR_2(14), 
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;  cmd             1   18[BANK1 ] unsigned char 
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  1    wreg      void 
  4100 ;; Registers used:
  4101 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4107 ;;      Params:         0       0       2       0       0
  4108 ;;      Locals:         0       0       1       0       0
  4109 ;;      Temps:          0       0       1       0       0
  4110 ;;      Totals:         0       0       4       0       0
  4111 ;;Total ram usage:        4 bytes
  4112 ;; Hardware stack levels used: 1
  4113 ;; Hardware stack levels required when called: 8
  4114 ;; This function calls:
  4115 ;;		_lcd_write
  4116 ;; This function is called by:
  4117 ;;		_main
  4118 ;;		_mq_mostra
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122     0A34                     _lcd_puts:	
  4123                           ;psect for function _lcd_puts
  4124                           
  4125     0A34                     l7047:	
  4126                           ;incstack = 0
  4127 ;; hardware stack exceeded
  4128                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4129                           
  4130                           
  4131                           ;lcd.c: 66:   uint8_t cmd;;lcd.c: 67:   RC0 = 1;
  4132     0A34  1283               	bcf	3,5	;RP0=0, select bank0
  4133     0A35  1303               	bcf	3,6	;RP1=0, select bank0
  4134     0A36  1407               	bsf	7,0	;volatile
  4135                           
  4136                           ;lcd.c: 69:   while (*str) {
  4137     0A37  2A86               	goto	l7061
  4138     0A38                     l7049:
  4139                           
  4140                           ;lcd.c: 106:       cmd = *str >> 4;
  4141     0A38  1683               	bsf	3,5	;RP0=1, select bank1
  4142     0A39  1303               	bcf	3,6	;RP1=0, select bank1
  4143     0A3A  0830               	movf	(lcd_puts@str+1)^(0+128),w
  4144     0A3B  1283               	bcf	3,5	;RP0=0, select bank0
  4145     0A3C  1303               	bcf	3,6	;RP1=0, select bank0
  4146     0A3D  00FF               	movwf	btemp+1
  4147     0A3E  1683               	bsf	3,5	;RP0=1, select bank1
  4148     0A3F  1303               	bcf	3,6	;RP1=0, select bank1
  4149     0A40  082F               	movf	lcd_puts@str^(0+128),w
  4150     0A41  0084               	movwf	4
  4151     0A42  1283               	bcf	3,5	;RP0=0, select bank0
  4152     0A43  1303               	bcf	3,6	;RP1=0, select bank0
  4153     0A44  120A  118A  2700  120A  158A  	fcall	stringtab
  4154     0A49  1683               	bsf	3,5	;RP0=1, select bank1
  4155     0A4A  1303               	bcf	3,6	;RP1=0, select bank1
  4156     0A4B  00B1               	movwf	??_lcd_puts^(0+128)
  4157     0A4C  3004               	movlw	4
  4158     0A4D                     u6995:
  4159     0A4D  1003               	clrc
  4160     0A4E  0CB1               	rrf	??_lcd_puts^(0+128),f
  4161     0A4F  3EFF               	addlw	-1
  4162     0A50  1D03               	skipz
  4163     0A51  2A4D               	goto	u6995
  4164     0A52  0831               	movf	??_lcd_puts^(0+128),w
  4165     0A53  00B2               	movwf	lcd_puts@cmd^(0+128)
  4166     0A54                     l7051:
  4167                           
  4168                           ;lcd.c: 107:       lcd_write(cmd);
  4169     0A54  0832               	movf	lcd_puts@cmd^(0+128),w
  4170     0A55  160A  118A  263B  120A  158A  	fcall	_lcd_write
  4171     0A5A                     l7053:
  4172                           
  4173                           ;lcd.c: 108:       _delay((unsigned long)((40)*(4000000/4000000.0)));
  4174     0A5A  300C               	movlw	12
  4175     0A5B  1683               	bsf	3,5	;RP0=1, select bank1
  4176     0A5C  1303               	bcf	3,6	;RP1=0, select bank1
  4177     0A5D  00B1               	movwf	??_lcd_puts^(0+128)
  4178     0A5E                     u8467:
  4179     0A5E  0BB1               	decfsz	??_lcd_puts^(0+128),f
  4180     0A5F  2A5E               	goto	u8467
  4181     0A60  0000               	nop
  4182     0A61                     l7055:
  4183                           
  4184                           ;lcd.c: 111:       lcd_write(*str);
  4185     0A61  1683               	bsf	3,5	;RP0=1, select bank1
  4186     0A62  1303               	bcf	3,6	;RP1=0, select bank1
  4187     0A63  0830               	movf	(lcd_puts@str+1)^(0+128),w
  4188     0A64  1283               	bcf	3,5	;RP0=0, select bank0
  4189     0A65  1303               	bcf	3,6	;RP1=0, select bank0
  4190     0A66  00FF               	movwf	btemp+1
  4191     0A67  1683               	bsf	3,5	;RP0=1, select bank1
  4192     0A68  1303               	bcf	3,6	;RP1=0, select bank1
  4193     0A69  082F               	movf	lcd_puts@str^(0+128),w
  4194     0A6A  0084               	movwf	4
  4195     0A6B  1283               	bcf	3,5	;RP0=0, select bank0
  4196     0A6C  1303               	bcf	3,6	;RP1=0, select bank0
  4197     0A6D  120A  118A  2700  120A  158A  	fcall	stringtab
  4198     0A72  160A  118A  263B  120A  158A  	fcall	_lcd_write
  4199     0A77                     l7057:
  4200                           
  4201                           ;lcd.c: 112:        _delay((unsigned long)((40)*(4000000/4000000.0)));
  4202     0A77  300C               	movlw	12
  4203     0A78  1683               	bsf	3,5	;RP0=1, select bank1
  4204     0A79  1303               	bcf	3,6	;RP1=0, select bank1
  4205     0A7A  00B1               	movwf	??_lcd_puts^(0+128)
  4206     0A7B                     u8477:
  4207     0A7B  0BB1               	decfsz	??_lcd_puts^(0+128),f
  4208     0A7C  2A7B               	goto	u8477
  4209     0A7D  0000               	nop
  4210     0A7E                     l7059:
  4211                           
  4212                           ;lcd.c: 115:     str++;
  4213     0A7E  3001               	movlw	1
  4214     0A7F  1683               	bsf	3,5	;RP0=1, select bank1
  4215     0A80  1303               	bcf	3,6	;RP1=0, select bank1
  4216     0A81  07AF               	addwf	lcd_puts@str^(0+128),f
  4217     0A82  1803               	skipnc
  4218     0A83  0AB0               	incf	(lcd_puts@str+1)^(0+128),f
  4219     0A84  3000               	movlw	0
  4220     0A85  07B0               	addwf	(lcd_puts@str+1)^(0+128),f
  4221     0A86                     l7061:
  4222                           
  4223                           ;lcd.c: 69:   while (*str) {
  4224     0A86  1683               	bsf	3,5	;RP0=1, select bank1
  4225     0A87  1303               	bcf	3,6	;RP1=0, select bank1
  4226     0A88  0830               	movf	(lcd_puts@str+1)^(0+128),w
  4227     0A89  1283               	bcf	3,5	;RP0=0, select bank0
  4228     0A8A  1303               	bcf	3,6	;RP1=0, select bank0
  4229     0A8B  00FF               	movwf	btemp+1
  4230     0A8C  1683               	bsf	3,5	;RP0=1, select bank1
  4231     0A8D  1303               	bcf	3,6	;RP1=0, select bank1
  4232     0A8E  082F               	movf	lcd_puts@str^(0+128),w
  4233     0A8F  0084               	movwf	4
  4234     0A90  1283               	bcf	3,5	;RP0=0, select bank0
  4235     0A91  1303               	bcf	3,6	;RP1=0, select bank0
  4236     0A92  120A  118A  2700  120A  158A  	fcall	stringtab
  4237     0A97  3A00               	xorlw	0
  4238     0A98  1D03               	skipz
  4239     0A99  2A9B               	goto	u7001
  4240     0A9A  2A9C               	goto	u7000
  4241     0A9B                     u7001:
  4242     0A9B  2A38               	goto	l7049
  4243     0A9C                     u7000:
  4244     0A9C                     l99:
  4245     0A9C  0008               	return
  4246     0A9D                     __end_of_lcd_puts:
  4247                           
  4248                           	psect	text9
  4249     15C4                     __ptext9:	
  4250 ;; *************** function _lcd_init *****************
  4251 ;; Defined at:
  4252 ;;		line 120 in file "lcd.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;		None
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;		None
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  1    wreg      void 
  4259 ;; Registers used:
  4260 ;;		wreg, status,2, status,0, pclath, cstack
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4266 ;;      Params:         0       0       0       0       0
  4267 ;;      Locals:         0       0       0       0       0
  4268 ;;      Temps:          0       0       0       0       0
  4269 ;;      Totals:         0       0       0       0       0
  4270 ;;Total ram usage:        0 bytes
  4271 ;; Hardware stack levels used: 1
  4272 ;; Hardware stack levels required when called: 8
  4273 ;; This function calls:
  4274 ;;		_lcd_write
  4275 ;; This function is called by:
  4276 ;;		_main
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280     15C4                     _lcd_init:	
  4281                           ;psect for function _lcd_init
  4282                           
  4283     15C4                     l7033:	
  4284                           ;incstack = 0
  4285 ;; hardware stack exceeded
  4286                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4287                           
  4288                           
  4289                           ;lcd.c: 121:     TRISC0 = TRISC1 = TRISC2 = TRISB2 = TRISB1 = TRISB0 = 0;
  4290     15C4  1683               	bsf	3,5	;RP0=1, select bank1
  4291     15C5  1303               	bcf	3,6	;RP1=0, select bank1
  4292     15C6  1006               	bcf	6,0	;volatile
  4293     15C7  1086               	bcf	6,1	;volatile
  4294     15C8  1106               	bcf	6,2	;volatile
  4295     15C9  1107               	bcf	7,2	;volatile
  4296     15CA  1087               	bcf	7,1	;volatile
  4297     15CB  1007               	bcf	7,0	;volatile
  4298                           
  4299                           ;lcd.c: 122:     RC0 = RC1 = RC2 = RB2 = RB1 = RB0 = 0;
  4300     15CC  1283               	bcf	3,5	;RP0=0, select bank0
  4301     15CD  1303               	bcf	3,6	;RP1=0, select bank0
  4302     15CE  1006               	bcf	6,0	;volatile
  4303     15CF  1086               	bcf	6,1	;volatile
  4304     15D0  1106               	bcf	6,2	;volatile
  4305     15D1  1107               	bcf	7,2	;volatile
  4306     15D2  1087               	bcf	7,1	;volatile
  4307     15D3  1007               	bcf	7,0	;volatile
  4308     15D4                     l7035:
  4309                           
  4310                           ;lcd.c: 123:     lcd_write(2);
  4311     15D4  3002               	movlw	2
  4312     15D5  160A  118A  263B  160A  118A  	fcall	_lcd_write
  4313                           
  4314                           ;lcd.c: 124:     lcd_write(8);
  4315     15DA  3008               	movlw	8
  4316     15DB  160A  118A  263B  160A  118A  	fcall	_lcd_write
  4317                           
  4318                           ;lcd.c: 125:     lcd_write(0);
  4319     15E0  3000               	movlw	0
  4320     15E1  160A  118A  263B  160A  118A  	fcall	_lcd_write
  4321                           
  4322                           ;lcd.c: 126:     lcd_write(0);
  4323     15E6  3000               	movlw	0
  4324     15E7  160A  118A  263B  160A  118A  	fcall	_lcd_write
  4325                           
  4326                           ;lcd.c: 127:     lcd_write(0xc);
  4327     15EC  300C               	movlw	12
  4328     15ED  160A  118A  263B  160A  118A  	fcall	_lcd_write
  4329                           
  4330                           ;lcd.c: 128:     lcd_write(0);
  4331     15F2  3000               	movlw	0
  4332     15F3  160A  118A  263B  160A  118A  	fcall	_lcd_write
  4333                           
  4334                           ;lcd.c: 129:     lcd_write(6);
  4335     15F8  3006               	movlw	6
  4336     15F9  160A  118A  263B  160A  118A  	fcall	_lcd_write
  4337     15FE                     l102:
  4338     15FE  0008               	return
  4339     15FF                     __end_of_lcd_init:
  4340                           
  4341                           	psect	text10
  4342     1553                     __ptext10:	
  4343 ;; *************** function _lcd_goto *****************
  4344 ;; Defined at:
  4345 ;;		line 47 in file "lcd.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;  y               1    wreg     unsigned char 
  4348 ;;  x               1   15[BANK1 ] unsigned char 
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;  y               1   18[BANK1 ] unsigned char 
  4351 ;; Return value:  Size  Location     Type
  4352 ;;                  1    wreg      void 
  4353 ;; Registers used:
  4354 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4355 ;; Tracked objects:
  4356 ;;		On entry : 0/0
  4357 ;;		On exit  : 0/0
  4358 ;;		Unchanged: 0/0
  4359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4360 ;;      Params:         0       0       1       0       0
  4361 ;;      Locals:         0       0       1       0       0
  4362 ;;      Temps:          0       0       2       0       0
  4363 ;;      Totals:         0       0       4       0       0
  4364 ;;Total ram usage:        4 bytes
  4365 ;; Hardware stack levels used: 1
  4366 ;; Hardware stack levels required when called: 8
  4367 ;; This function calls:
  4368 ;;		_lcd_write
  4369 ;; This function is called by:
  4370 ;;		_main
  4371 ;;		_mq_mostra
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375     1553                     _lcd_goto:	
  4376                           ;psect for function _lcd_goto
  4377                           
  4378                           
  4379                           ;incstack = 0
  4380 ;; hardware stack exceeded
  4381                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4382                           ;lcd_goto@y stored from wreg
  4383     1553  1683               	bsf	3,5	;RP0=1, select bank1
  4384     1554  1303               	bcf	3,6	;RP1=0, select bank1
  4385     1555  00B2               	movwf	lcd_goto@y^(0+128)
  4386     1556                     l7063:
  4387                           
  4388                           ;lcd.c: 48:     RC0 = 0;
  4389     1556  1283               	bcf	3,5	;RP0=0, select bank0
  4390     1557  1303               	bcf	3,6	;RP1=0, select bank0
  4391     1558  1007               	bcf	7,0	;volatile
  4392                           
  4393                           ;lcd.c: 49:     switch (y) {
  4394     1559  2D68               	goto	l7071
  4395     155A                     l7065:
  4396                           
  4397                           ;lcd.c: 51:             lcd_write(8);
  4398     155A  3008               	movlw	8
  4399     155B  160A  118A  263B  160A  118A  	fcall	_lcd_write
  4400                           
  4401                           ;lcd.c: 52:             break;
  4402     1560  2D7A               	goto	l7073
  4403     1561                     l7067:
  4404                           
  4405                           ;lcd.c: 54:             lcd_write(0xc);
  4406     1561  300C               	movlw	12
  4407     1562  160A  118A  263B  160A  118A  	fcall	_lcd_write
  4408                           
  4409                           ;lcd.c: 55:             break;
  4410     1567  2D7A               	goto	l7073
  4411     1568                     l7071:
  4412     1568  1683               	bsf	3,5	;RP0=1, select bank1
  4413     1569  1303               	bcf	3,6	;RP1=0, select bank1
  4414     156A  0832               	movf	lcd_goto@y^(0+128),w
  4415     156B  00B0               	movwf	??_lcd_goto^(0+128)
  4416     156C  01B1               	clrf	(??_lcd_goto^(0+128)+1)
  4417                           
  4418                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4419                           ; Switch size 1, requested type "simple"
  4420                           ; Number of cases is 1, Range of values is 0 to 0
  4421                           ; switch strategies available:
  4422                           ; Name         Instructions Cycles
  4423                           ; simple_byte            4     3 (average)
  4424                           ; direct_byte           11     8 (fixed)
  4425                           ; jumptable            260     6 (fixed)
  4426                           ;	Chosen strategy is simple_byte
  4427     156D  0831               	movf	(??_lcd_goto+1)^(0+128),w
  4428     156E  3A00               	xorlw	0	; case 0
  4429     156F  1903               	skipnz
  4430     1570  2D72               	goto	l8881
  4431     1571  2D7A               	goto	l7073
  4432     1572                     l8881:
  4433                           
  4434                           ; Switch size 1, requested type "simple"
  4435                           ; Number of cases is 2, Range of values is 1 to 2
  4436                           ; switch strategies available:
  4437                           ; Name         Instructions Cycles
  4438                           ; simple_byte            7     4 (average)
  4439                           ; direct_byte           17    11 (fixed)
  4440                           ; jumptable            263     9 (fixed)
  4441                           ;	Chosen strategy is simple_byte
  4442     1572  0830               	movf	??_lcd_goto^(0+128),w
  4443     1573  3A01               	xorlw	1	; case 1
  4444     1574  1903               	skipnz
  4445     1575  2D5A               	goto	l7065
  4446     1576  3A03               	xorlw	3	; case 2
  4447     1577  1903               	skipnz
  4448     1578  2D61               	goto	l7067
  4449     1579  2D7A               	goto	l7073
  4450     157A                     l7073:
  4451                           
  4452                           ;lcd.c: 57:     lcd_write(x);
  4453     157A  1683               	bsf	3,5	;RP0=1, select bank1
  4454     157B  1303               	bcf	3,6	;RP1=0, select bank1
  4455     157C  082F               	movf	lcd_goto@x^(0+128),w
  4456     157D  160A  118A  263B  160A  118A  	fcall	_lcd_write
  4457     1582                     l7075:
  4458                           
  4459                           ;lcd.c: 58:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4460     1582  300C               	movlw	12
  4461     1583  1683               	bsf	3,5	;RP0=1, select bank1
  4462     1584  1303               	bcf	3,6	;RP1=0, select bank1
  4463     1585  00B0               	movwf	??_lcd_goto^(0+128)
  4464     1586                     u8487:
  4465     1586  0BB0               	decfsz	??_lcd_goto^(0+128),f
  4466     1587  2D86               	goto	u8487
  4467     1588  0000               	nop
  4468     1589                     l93:
  4469     1589  0008               	return
  4470     158A                     __end_of_lcd_goto:
  4471                           
  4472                           	psect	text11
  4473     163B                     __ptext11:	
  4474 ;; *************** function _lcd_write *****************
  4475 ;; Defined at:
  4476 ;;		line 14 in file "lcd.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;  c               1    wreg     unsigned char 
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;  c               1   14[BANK1 ] unsigned char 
  4481 ;; Return value:  Size  Location     Type
  4482 ;;                  1    wreg      void 
  4483 ;; Registers used:
  4484 ;;		wreg
  4485 ;; Tracked objects:
  4486 ;;		On entry : 0/0
  4487 ;;		On exit  : 0/0
  4488 ;;		Unchanged: 0/0
  4489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4490 ;;      Params:         0       0       0       0       0
  4491 ;;      Locals:         0       0       1       0       0
  4492 ;;      Temps:          0       0       1       0       0
  4493 ;;      Totals:         0       0       2       0       0
  4494 ;;Total ram usage:        2 bytes
  4495 ;; Hardware stack levels used: 1
  4496 ;; Hardware stack levels required when called: 7
  4497 ;; This function calls:
  4498 ;;		Nothing
  4499 ;; This function is called by:
  4500 ;;		_lcd_goto
  4501 ;;		_lcd_puts
  4502 ;;		_lcd_init
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506     163B                     _lcd_write:	
  4507                           ;psect for function _lcd_write
  4508                           
  4509                           
  4510                           ;incstack = 0
  4511 ;; hardware stack exceeded
  4512                           ; Regs used in _lcd_write: [wreg]
  4513                           ;lcd_write@c stored from wreg
  4514     163B  1683               	bsf	3,5	;RP0=1, select bank1
  4515     163C  1303               	bcf	3,6	;RP1=0, select bank1
  4516     163D  00AE               	movwf	lcd_write@c^(0+128)
  4517     163E                     l6719:
  4518                           
  4519                           ;lcd.c: 15:     if (c & 0b00000001) {
  4520     163E  1C2E               	btfss	lcd_write@c^(0+128),0
  4521     163F  2E41               	goto	u6641
  4522     1640  2E42               	goto	u6640
  4523     1641                     u6641:
  4524     1641  2E46               	goto	l75
  4525     1642                     u6640:
  4526     1642                     l6721:
  4527                           
  4528                           ;lcd.c: 16:         RC2 = 1;
  4529     1642  1283               	bcf	3,5	;RP0=0, select bank0
  4530     1643  1303               	bcf	3,6	;RP1=0, select bank0
  4531     1644  1507               	bsf	7,2	;volatile
  4532                           
  4533                           ;lcd.c: 17:     } else {
  4534     1645  2E49               	goto	l76
  4535     1646                     l75:
  4536                           
  4537                           ;lcd.c: 18:         RC2 = 0;
  4538     1646  1283               	bcf	3,5	;RP0=0, select bank0
  4539     1647  1303               	bcf	3,6	;RP1=0, select bank0
  4540     1648  1107               	bcf	7,2	;volatile
  4541     1649                     l76:	
  4542                           ;lcd.c: 19:     }
  4543                           
  4544                           
  4545                           ;lcd.c: 20:     if (c & 0b00000010) {
  4546     1649  1683               	bsf	3,5	;RP0=1, select bank1
  4547     164A  1303               	bcf	3,6	;RP1=0, select bank1
  4548     164B  1CAE               	btfss	lcd_write@c^(0+128),1
  4549     164C  2E4E               	goto	u6651
  4550     164D  2E4F               	goto	u6650
  4551     164E                     u6651:
  4552     164E  2E53               	goto	l77
  4553     164F                     u6650:
  4554     164F                     l6723:
  4555                           
  4556                           ;lcd.c: 21:         RB2 = 1;
  4557     164F  1283               	bcf	3,5	;RP0=0, select bank0
  4558     1650  1303               	bcf	3,6	;RP1=0, select bank0
  4559     1651  1506               	bsf	6,2	;volatile
  4560                           
  4561                           ;lcd.c: 22:     } else {
  4562     1652  2E56               	goto	l78
  4563     1653                     l77:
  4564                           
  4565                           ;lcd.c: 23:         RB2 = 0;
  4566     1653  1283               	bcf	3,5	;RP0=0, select bank0
  4567     1654  1303               	bcf	3,6	;RP1=0, select bank0
  4568     1655  1106               	bcf	6,2	;volatile
  4569     1656                     l78:	
  4570                           ;lcd.c: 24:     }
  4571                           
  4572                           
  4573                           ;lcd.c: 25:     if (c & 0b00000100) {
  4574     1656  1683               	bsf	3,5	;RP0=1, select bank1
  4575     1657  1303               	bcf	3,6	;RP1=0, select bank1
  4576     1658  1D2E               	btfss	lcd_write@c^(0+128),2
  4577     1659  2E5B               	goto	u6661
  4578     165A  2E5C               	goto	u6660
  4579     165B                     u6661:
  4580     165B  2E60               	goto	l79
  4581     165C                     u6660:
  4582     165C                     l6725:
  4583                           
  4584                           ;lcd.c: 26:         RB1 = 1;
  4585     165C  1283               	bcf	3,5	;RP0=0, select bank0
  4586     165D  1303               	bcf	3,6	;RP1=0, select bank0
  4587     165E  1486               	bsf	6,1	;volatile
  4588                           
  4589                           ;lcd.c: 27:     } else {
  4590     165F  2E63               	goto	l80
  4591     1660                     l79:
  4592                           
  4593                           ;lcd.c: 28:         RB1 = 0;
  4594     1660  1283               	bcf	3,5	;RP0=0, select bank0
  4595     1661  1303               	bcf	3,6	;RP1=0, select bank0
  4596     1662  1086               	bcf	6,1	;volatile
  4597     1663                     l80:	
  4598                           ;lcd.c: 29:     }
  4599                           
  4600                           
  4601                           ;lcd.c: 30:     if (c & 0b00001000) {
  4602     1663  1683               	bsf	3,5	;RP0=1, select bank1
  4603     1664  1303               	bcf	3,6	;RP1=0, select bank1
  4604     1665  1DAE               	btfss	lcd_write@c^(0+128),3
  4605     1666  2E68               	goto	u6671
  4606     1667  2E69               	goto	u6670
  4607     1668                     u6671:
  4608     1668  2E6D               	goto	l81
  4609     1669                     u6670:
  4610     1669                     l6727:
  4611                           
  4612                           ;lcd.c: 31:         RB0 = 1;
  4613     1669  1283               	bcf	3,5	;RP0=0, select bank0
  4614     166A  1303               	bcf	3,6	;RP1=0, select bank0
  4615     166B  1406               	bsf	6,0	;volatile
  4616                           
  4617                           ;lcd.c: 32:     } else {
  4618     166C  2E70               	goto	l6729
  4619     166D                     l81:
  4620                           
  4621                           ;lcd.c: 33:         RB0 = 0;
  4622     166D  1283               	bcf	3,5	;RP0=0, select bank0
  4623     166E  1303               	bcf	3,6	;RP1=0, select bank0
  4624     166F  1006               	bcf	6,0	;volatile
  4625     1670                     l6729:
  4626                           
  4627                           ;lcd.c: 35:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4628     1670  300C               	movlw	12
  4629     1671  1683               	bsf	3,5	;RP0=1, select bank1
  4630     1672  1303               	bcf	3,6	;RP1=0, select bank1
  4631     1673  00AD               	movwf	??_lcd_write^(0+128)
  4632     1674                     u8497:
  4633     1674  0BAD               	decfsz	??_lcd_write^(0+128),f
  4634     1675  2E74               	goto	u8497
  4635     1676  0000               	nop
  4636     1677                     l6731:
  4637                           
  4638                           ;lcd.c: 36:     RC1 = 1;
  4639     1677  1283               	bcf	3,5	;RP0=0, select bank0
  4640     1678  1303               	bcf	3,6	;RP1=0, select bank0
  4641     1679  1487               	bsf	7,1	;volatile
  4642     167A                     l6733:
  4643                           
  4644                           ;lcd.c: 37:     RC1 = 0;
  4645     167A  1087               	bcf	7,1	;volatile
  4646     167B                     l83:
  4647     167B  0008               	return
  4648     167C                     __end_of_lcd_write:
  4649                           
  4650                           	psect	text12
  4651     135A                     __ptext12:	
  4652 ;; *************** function _eeprom_read *****************
  4653 ;; Defined at:
  4654 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eeread.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;  addr            1    wreg     unsigned char 
  4657 ;; Auto vars:     Size  Location     Type
  4658 ;;  addr            1   13[BANK1 ] unsigned char 
  4659 ;; Return value:  Size  Location     Type
  4660 ;;                  1    wreg      unsigned char 
  4661 ;; Registers used:
  4662 ;;		wreg, status,2, status,0, btemp+1
  4663 ;; Tracked objects:
  4664 ;;		On entry : 0/0
  4665 ;;		On exit  : 0/0
  4666 ;;		Unchanged: 0/0
  4667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4668 ;;      Params:         0       0       0       0       0
  4669 ;;      Locals:         0       0       1       0       0
  4670 ;;      Temps:          0       0       0       0       0
  4671 ;;      Totals:         0       0       1       0       0
  4672 ;;Total ram usage:        1 bytes
  4673 ;; Hardware stack levels used: 1
  4674 ;; Hardware stack levels required when called: 7
  4675 ;; This function calls:
  4676 ;;		Nothing
  4677 ;; This function is called by:
  4678 ;;		_main
  4679 ;; This function uses a non-reentrant model
  4680 ;;
  4681                           
  4682     135A                     _eeprom_read:	
  4683                           ;psect for function _eeprom_read
  4684                           
  4685                           
  4686                           ;incstack = 0
  4687                           ; Regs used in _eeprom_read: [wreg+status,2+status,0+btemp+1]
  4688                           ;eeprom_read@addr stored from wreg
  4689     135A  1683               	bsf	3,5	;RP0=1, select bank1
  4690     135B  1303               	bcf	3,6	;RP1=0, select bank1
  4691     135C  00AD               	movwf	eeprom_read@addr^(0+128)
  4692     135D                     l631:	
  4693                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eeread.c: 6: eeprom_read(uns
      +                          igned char addr);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eeread.c: 7:
      +                           {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eeread.c: 8:  do
  4694                           
  4695     135D  0064               	clrwdt	;# 
  4696     135E  1683               	bsf	3,5	;RP0=1, select bank3
  4697     135F  1703               	bsf	3,6	;RP1=1, select bank3
  4698     1360  188C               	btfsc	12,1	;volsfr
  4699     1361  2B63               	goto	u7011
  4700     1362  2B66               	goto	u7010
  4701     1363                     u7011:
  4702     1363  1683               	bsf	3,5	;RP0=1, select bank1
  4703     1364  1303               	bcf	3,6	;RP1=0, select bank1
  4704     1365  2B5D               	goto	l631
  4705     1366                     u7010:
  4706     1366                     l7081:
  4707                           
  4708                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eeread.c: 18:  return ( EEAD
      +                          R = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  4709     1366  1683               	bsf	3,5	;RP0=1, select bank1
  4710     1367  1303               	bcf	3,6	;RP1=0, select bank1
  4711     1368  082D               	movf	eeprom_read@addr^(0+128),w
  4712     1369  1283               	bcf	3,5	;RP0=0, select bank2
  4713     136A  1703               	bsf	3,6	;RP1=1, select bank2
  4714     136B  008D               	movwf	13	;volatile
  4715     136C  303F               	movlw	63
  4716     136D  00FF               	movwf	btemp+1
  4717     136E  087F               	movf	btemp+1,w
  4718     136F  1683               	bsf	3,5	;RP0=1, select bank3
  4719     1370  1703               	bsf	3,6	;RP1=1, select bank3
  4720     1371  058C               	andwf	12,f	;volsfr
  4721     1372  140C               	bsf	12,0	;volsfr
  4722     1373  1283               	bcf	3,5	;RP0=0, select bank2
  4723     1374  1703               	bsf	3,6	;RP1=1, select bank2
  4724     1375  080C               	movf	12,w	;volatile
  4725     1376                     l633:
  4726     1376  0008               	return
  4727     1377                     __end_of_eeprom_read:
  4728                           
  4729                           	psect	text13
  4730     06E8                     __ptext13:	
  4731 ;; *************** function _eeprom_gravar_word *****************
  4732 ;; Defined at:
  4733 ;;		line 23 in file "eeprom.c"
  4734 ;; Parameters:    Size  Location     Type
  4735 ;;  end             1    wreg     unsigned char 
  4736 ;;  dado            2   15[BANK1 ] unsigned int 
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;  end             1   17[BANK1 ] unsigned char 
  4739 ;; Return value:  Size  Location     Type
  4740 ;;                  1    wreg      void 
  4741 ;; Registers used:
  4742 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4743 ;; Tracked objects:
  4744 ;;		On entry : 0/0
  4745 ;;		On exit  : 0/0
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4748 ;;      Params:         0       0       2       0       0
  4749 ;;      Locals:         0       0       1       0       0
  4750 ;;      Temps:          0       0       0       0       0
  4751 ;;      Totals:         0       0       3       0       0
  4752 ;;Total ram usage:        3 bytes
  4753 ;; Hardware stack levels used: 1
  4754 ;; Hardware stack levels required when called: 8
  4755 ;; This function calls:
  4756 ;;		_eeprom_write
  4757 ;; This function is called by:
  4758 ;;		_main
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762     06E8                     _eeprom_gravar_word:	
  4763                           ;psect for function _eeprom_gravar_word
  4764                           
  4765                           
  4766                           ;incstack = 0
  4767 ;; hardware stack exceeded
  4768                           ; Regs used in _eeprom_gravar_word: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4769                           ;eeprom_gravar_word@end stored from wreg
  4770     06E8  1683               	bsf	3,5	;RP0=1, select bank1
  4771     06E9  1303               	bcf	3,6	;RP1=0, select bank1
  4772     06EA  00B1               	movwf	eeprom_gravar_word@end^(0+128)
  4773     06EB                     l7085:
  4774                           
  4775                           ;eeprom.c: 30:     eeprom_write(end, dado >> 8);
  4776     06EB  0830               	movf	(eeprom_gravar_word@dado+1)^(0+128),w
  4777     06EC  00AD               	movwf	eeprom_write@value^(0+128)
  4778     06ED  0831               	movf	eeprom_gravar_word@end^(0+128),w
  4779     06EE  160A  118A  251E  120A  118A  	fcall	_eeprom_write
  4780                           
  4781                           ;eeprom.c: 32:     eeprom_write(end + 1, dado);
  4782     06F3  1683               	bsf	3,5	;RP0=1, select bank1
  4783     06F4  1303               	bcf	3,6	;RP1=0, select bank1
  4784     06F5  082F               	movf	eeprom_gravar_word@dado^(0+128),w
  4785     06F6  00AD               	movwf	eeprom_write@value^(0+128)
  4786     06F7  0831               	movf	eeprom_gravar_word@end^(0+128),w
  4787     06F8  3E01               	addlw	1
  4788     06F9  160A  118A  251E  120A  118A  	fcall	_eeprom_write
  4789     06FE                     l284:
  4790     06FE  0008               	return
  4791     06FF                     __end_of_eeprom_gravar_word:
  4792                           
  4793                           	psect	text14
  4794     151E                     __ptext14:	
  4795 ;; *************** function _eeprom_write *****************
  4796 ;; Defined at:
  4797 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eewrite.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;  addr            1    wreg     unsigned char 
  4800 ;;  value           1   13[BANK1 ] unsigned char 
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;  addr            1   14[BANK1 ] unsigned char 
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  1    wreg      void 
  4805 ;; Registers used:
  4806 ;;		wreg, status,2, status,0, btemp+1
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4812 ;;      Params:         0       0       1       0       0
  4813 ;;      Locals:         0       0       1       0       0
  4814 ;;      Temps:          0       0       0       0       0
  4815 ;;      Totals:         0       0       2       0       0
  4816 ;;Total ram usage:        2 bytes
  4817 ;; Hardware stack levels used: 1
  4818 ;; Hardware stack levels required when called: 7
  4819 ;; This function calls:
  4820 ;;		Nothing
  4821 ;; This function is called by:
  4822 ;;		_main
  4823 ;;		_eeprom_gravar_word
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827     151E                     _eeprom_write:	
  4828                           ;psect for function _eeprom_write
  4829                           
  4830                           
  4831                           ;incstack = 0
  4832                           ; Regs used in _eeprom_write: [wreg+status,2+status,0+btemp+1]
  4833                           ;eeprom_write@addr stored from wreg
  4834     151E  1683               	bsf	3,5	;RP0=1, select bank1
  4835     151F  1303               	bcf	3,6	;RP1=0, select bank1
  4836     1520  00AE               	movwf	eeprom_write@addr^(0+128)
  4837     1521                     l650:	
  4838                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eewrite.c: 6: eeprom_write(u
      +                          nsigned char addr, unsigned char value);C:\Program Files\Microchip\xc8\v2.41\pic\sources
      +                          \c90\pic\__eewrite.c: 7: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__ee
      +                          write.c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value); E
      +                          ECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCO
      +                          Nbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1; EEC
      +                          ON1bits.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
  4839                           
  4840     1521                     l651:
  4841     1521  1683               	bsf	3,5	;RP0=1, select bank3
  4842     1522  1703               	bsf	3,6	;RP1=1, select bank3
  4843     1523  188C               	btfsc	12,1	;volsfr
  4844     1524  2D26               	goto	u6611
  4845     1525  2D27               	goto	u6610
  4846     1526                     u6611:
  4847     1526  2D21               	goto	l651
  4848     1527                     u6610:
  4849     1527                     l6699:
  4850     1527  1683               	bsf	3,5	;RP0=1, select bank1
  4851     1528  1303               	bcf	3,6	;RP1=0, select bank1
  4852     1529  082E               	movf	eeprom_write@addr^(0+128),w
  4853     152A  1283               	bcf	3,5	;RP0=0, select bank2
  4854     152B  1703               	bsf	3,6	;RP1=1, select bank2
  4855     152C  008D               	movwf	13	;volatile
  4856     152D  1683               	bsf	3,5	;RP0=1, select bank1
  4857     152E  1303               	bcf	3,6	;RP1=0, select bank1
  4858     152F  082D               	movf	eeprom_write@value^(0+128),w
  4859     1530  1283               	bcf	3,5	;RP0=0, select bank2
  4860     1531  1703               	bsf	3,6	;RP1=1, select bank2
  4861     1532  008C               	movwf	12	;volatile
  4862     1533                     l6701:
  4863     1533  303F               	movlw	63
  4864     1534  00FF               	movwf	btemp+1
  4865     1535  087F               	movf	btemp+1,w
  4866     1536  1683               	bsf	3,5	;RP0=1, select bank3
  4867     1537  1703               	bsf	3,6	;RP1=1, select bank3
  4868     1538  058C               	andwf	12,f	;volsfr
  4869     1539                     l6703:
  4870     1539  1283               	bcf	3,5	;RP0=0, select bank0
  4871     153A  1303               	bcf	3,6	;RP1=0, select bank0
  4872     153B  1003               	bcf	3,0	;volatile
  4873     153C                     l6705:
  4874     153C  1F8B               	btfss	11,7	;volatile
  4875     153D  2D3F               	goto	u6621
  4876     153E  2D40               	goto	u6620
  4877     153F                     u6621:
  4878     153F  2D41               	goto	l654
  4879     1540                     u6620:
  4880     1540                     l6707:
  4881     1540  1403               	bsf	3,0	;volatile
  4882     1541                     l654:
  4883     1541  138B               	bcf	11,7	;volatile
  4884     1542  1683               	bsf	3,5	;RP0=1, select bank3
  4885     1543  1703               	bsf	3,6	;RP1=1, select bank3
  4886     1544  150C               	bsf	12,2	;volsfr
  4887     1545                     l6709:
  4888     1545  3055               	movlw	85
  4889     1546  008D               	movwf	13	;volsfr
  4890     1547  30AA               	movlw	170
  4891     1548  008D               	movwf	13	;volsfr
  4892     1549                     l6711:
  4893     1549  148C               	bsf	12,1	;volsfr
  4894     154A                     l6713:
  4895     154A  110C               	bcf	12,2	;volsfr
  4896     154B                     l6715:
  4897     154B  1283               	bcf	3,5	;RP0=0, select bank0
  4898     154C  1303               	bcf	3,6	;RP1=0, select bank0
  4899     154D  1C03               	btfss	3,0	;volatile
  4900     154E  2D50               	goto	u6631
  4901     154F  2D51               	goto	u6630
  4902     1550                     u6631:
  4903     1550  2D52               	goto	l657
  4904     1551                     u6630:
  4905     1551                     l6717:
  4906     1551  178B               	bsf	11,7	;volatile
  4907     1552                     l657:
  4908     1552  0008               	return
  4909     1553                     __end_of_eeprom_write:
  4910                           
  4911                           	psect	text15
  4912     14EA                     __ptext15:	
  4913 ;; *************** function _btns_init *****************
  4914 ;; Defined at:
  4915 ;;		line 25 in file "botoes.c"
  4916 ;; Parameters:    Size  Location     Type
  4917 ;;		None
  4918 ;; Auto vars:     Size  Location     Type
  4919 ;;		None
  4920 ;; Return value:  Size  Location     Type
  4921 ;;                  1    wreg      void 
  4922 ;; Registers used:
  4923 ;;		wreg
  4924 ;; Tracked objects:
  4925 ;;		On entry : 0/0
  4926 ;;		On exit  : 0/0
  4927 ;;		Unchanged: 0/0
  4928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4929 ;;      Params:         0       0       0       0       0
  4930 ;;      Locals:         0       0       0       0       0
  4931 ;;      Temps:          0       0       0       0       0
  4932 ;;      Totals:         0       0       0       0       0
  4933 ;;Total ram usage:        0 bytes
  4934 ;; Hardware stack levels used: 1
  4935 ;; Hardware stack levels required when called: 7
  4936 ;; This function calls:
  4937 ;;		Nothing
  4938 ;; This function is called by:
  4939 ;;		_main
  4940 ;; This function uses a non-reentrant model
  4941 ;;
  4942                           
  4943     14EA                     _btns_init:	
  4944                           ;psect for function _btns_init
  4945                           
  4946     14EA                     l7019:	
  4947                           ;incstack = 0
  4948                           ; Regs used in _btns_init: [wreg]
  4949                           
  4950                           
  4951                           ;botoes.c: 31:     RB4 = RB5 = RB6 = RB7 = 0;
  4952     14EA  1283               	bcf	3,5	;RP0=0, select bank0
  4953     14EB  1303               	bcf	3,6	;RP1=0, select bank0
  4954     14EC  1386               	bcf	6,7	;volatile
  4955     14ED  1306               	bcf	6,6	;volatile
  4956     14EE  1286               	bcf	6,5	;volatile
  4957     14EF  1206               	bcf	6,4	;volatile
  4958                           
  4959                           ;botoes.c: 32:     TRISB4 = TRISB5 = TRISB6 = TRISB7 = 1;
  4960     14F0  1683               	bsf	3,5	;RP0=1, select bank1
  4961     14F1  1303               	bcf	3,6	;RP1=0, select bank1
  4962     14F2  1786               	bsf	6,7	;volatile
  4963     14F3  1B86               	btfsc	6,7	;volatile
  4964     14F4  2CF6               	goto	u6951
  4965     14F5  2CFA               	goto	u6950
  4966     14F6                     u6951:
  4967     14F6  1683               	bsf	3,5	;RP0=1, select bank1
  4968     14F7  1303               	bcf	3,6	;RP1=0, select bank1
  4969     14F8  1706               	bsf	6,6	;volatile
  4970     14F9  2CFD               	goto	u6964
  4971     14FA                     u6950:
  4972     14FA  1683               	bsf	3,5	;RP0=1, select bank1
  4973     14FB  1303               	bcf	3,6	;RP1=0, select bank1
  4974     14FC  1306               	bcf	6,6	;volatile
  4975     14FD                     u6964:
  4976     14FD  1B06               	btfsc	6,6	;volatile
  4977     14FE  2D00               	goto	u6961
  4978     14FF  2D04               	goto	u6960
  4979     1500                     u6961:
  4980     1500  1683               	bsf	3,5	;RP0=1, select bank1
  4981     1501  1303               	bcf	3,6	;RP1=0, select bank1
  4982     1502  1686               	bsf	6,5	;volatile
  4983     1503  2D07               	goto	u6974
  4984     1504                     u6960:
  4985     1504  1683               	bsf	3,5	;RP0=1, select bank1
  4986     1505  1303               	bcf	3,6	;RP1=0, select bank1
  4987     1506  1286               	bcf	6,5	;volatile
  4988     1507                     u6974:
  4989     1507  1A86               	btfsc	6,5	;volatile
  4990     1508  2D0A               	goto	u6971
  4991     1509  2D0E               	goto	u6970
  4992     150A                     u6971:
  4993     150A  1683               	bsf	3,5	;RP0=1, select bank1
  4994     150B  1303               	bcf	3,6	;RP1=0, select bank1
  4995     150C  1606               	bsf	6,4	;volatile
  4996     150D  2D11               	goto	u6984
  4997     150E                     u6970:
  4998     150E  1683               	bsf	3,5	;RP0=1, select bank1
  4999     150F  1303               	bcf	3,6	;RP1=0, select bank1
  5000     1510  1206               	bcf	6,4	;volatile
  5001     1511                     u6984:
  5002                           
  5003                           ;botoes.c: 34:     OPTION_REGbits.nRBPU = 0;
  5004     1511  1381               	bcf	1,7	;volatile
  5005     1512                     l7021:
  5006                           
  5007                           ;botoes.c: 35:     WPUB = 0xf0;
  5008     1512  30F0               	movlw	240
  5009     1513  0095               	movwf	21	;volatile
  5010                           
  5011                           ;botoes.c: 40:     ANSELH = 0b00010010;
  5012     1514  3012               	movlw	18
  5013     1515  1683               	bsf	3,5	;RP0=1, select bank3
  5014     1516  1703               	bsf	3,6	;RP1=1, select bank3
  5015     1517  0089               	movwf	9	;volatile
  5016                           
  5017                           ;botoes.c: 41:     IOCB = 0xf0;
  5018     1518  30F0               	movlw	240
  5019     1519  1683               	bsf	3,5	;RP0=1, select bank1
  5020     151A  1303               	bcf	3,6	;RP1=0, select bank1
  5021     151B  0096               	movwf	22	;volatile
  5022     151C                     l7023:
  5023                           
  5024                           ;botoes.c: 44:     INTCONbits.RBIE = 1;
  5025     151C  158B               	bsf	11,3	;volatile
  5026     151D                     l140:
  5027     151D  0008               	return
  5028     151E                     __end_of_btns_init:
  5029                           
  5030                           	psect	text16
  5031     1328                     __ptext16:	
  5032 ;; *************** function _adcon_init *****************
  5033 ;; Defined at:
  5034 ;;		line 139 in file "adcon.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;		None
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;		None
  5039 ;; Return value:  Size  Location     Type
  5040 ;;                  1    wreg      void 
  5041 ;; Registers used:
  5042 ;;		wreg, status,2, status,0
  5043 ;; Tracked objects:
  5044 ;;		On entry : 0/0
  5045 ;;		On exit  : 0/0
  5046 ;;		Unchanged: 0/0
  5047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5048 ;;      Params:         0       0       0       0       0
  5049 ;;      Locals:         0       0       0       0       0
  5050 ;;      Temps:          0       0       0       0       0
  5051 ;;      Totals:         0       0       0       0       0
  5052 ;;Total ram usage:        0 bytes
  5053 ;; Hardware stack levels used: 1
  5054 ;; Hardware stack levels required when called: 7
  5055 ;; This function calls:
  5056 ;;		Nothing
  5057 ;; This function is called by:
  5058 ;;		_main
  5059 ;; This function uses a non-reentrant model
  5060 ;;
  5061                           
  5062     1328                     _adcon_init:	
  5063                           ;psect for function _adcon_init
  5064                           
  5065     1328                     l7087:	
  5066                           ;incstack = 0
  5067                           ; Regs used in _adcon_init: [wreg+status,2+status,0]
  5068                           
  5069                           
  5070                           ;adcon.c: 140:     TRISA = 0xff;
  5071     1328  30FF               	movlw	255
  5072     1329  1683               	bsf	3,5	;RP0=1, select bank1
  5073     132A  1303               	bcf	3,6	;RP1=0, select bank1
  5074     132B  0085               	movwf	5	;volatile
  5075                           
  5076                           ;adcon.c: 142:     ANSEL = 0b00011111;
  5077     132C  301F               	movlw	31
  5078     132D  1683               	bsf	3,5	;RP0=1, select bank3
  5079     132E  1703               	bsf	3,6	;RP1=1, select bank3
  5080     132F  0088               	movwf	8	;volatile
  5081     1330                     l7089:
  5082                           
  5083                           ;adcon.c: 144:     ADCON1bits.VCFG1 = 0;
  5084     1330  1683               	bsf	3,5	;RP0=1, select bank1
  5085     1331  1303               	bcf	3,6	;RP1=0, select bank1
  5086     1332  129F               	bcf	31,5	;volatile
  5087     1333                     l7091:
  5088                           
  5089                           ;adcon.c: 146:     ADCON1bits.VCFG0 = 1;
  5090     1333  161F               	bsf	31,4	;volatile
  5091     1334                     l7093:
  5092                           
  5093                           ;adcon.c: 152:     ADCON0bits.ADCS = 1;
  5094     1334  1283               	bcf	3,5	;RP0=0, select bank0
  5095     1335  1303               	bcf	3,6	;RP1=0, select bank0
  5096     1336  081F               	movf	31,w	;volatile
  5097     1337  393F               	andlw	-193
  5098     1338  3840               	iorlw	64
  5099     1339  009F               	movwf	31	;volatile
  5100     133A                     l7095:
  5101                           
  5102                           ;adcon.c: 153:     ADCON1bits.ADFM = 1;
  5103     133A  1683               	bsf	3,5	;RP0=1, select bank1
  5104     133B  1303               	bcf	3,6	;RP1=0, select bank1
  5105     133C  179F               	bsf	31,7	;volatile
  5106     133D                     l7097:
  5107                           
  5108                           ;adcon.c: 154:     ADCON0bits.ADON = 1;
  5109     133D  1283               	bcf	3,5	;RP0=0, select bank0
  5110     133E  1303               	bcf	3,6	;RP1=0, select bank0
  5111     133F  141F               	bsf	31,0	;volatile
  5112     1340                     l274:
  5113     1340  0008               	return
  5114     1341                     __end_of_adcon_init:
  5115                           
  5116                           	psect	text17
  5117     0C0A                     __ptext17:	
  5118 ;; *************** function _handler *****************
  5119 ;; Defined at:
  5120 ;;		line 16 in file "handler.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;		None
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;  pos_taxa        2   10[BANK1 ] unsigned int 
  5125 ;;  tempo_amostr    2    8[BANK1 ] unsigned int 
  5126 ;;  option          1   12[BANK1 ] unsigned char 
  5127 ;; Return value:  Size  Location     Type
  5128 ;;                  1    wreg      void 
  5129 ;; Registers used:
  5130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5136 ;;      Params:         0       0       0       0       0
  5137 ;;      Locals:         0       0       5       0       0
  5138 ;;      Temps:          0       0       5       0       0
  5139 ;;      Totals:         0       0      10       0       0
  5140 ;;Total ram usage:       10 bytes
  5141 ;; Hardware stack levels used: 1
  5142 ;; Hardware stack levels required when called: 6
  5143 ;; This function calls:
  5144 ;;		_adcon_captura_grava
  5145 ;;		_btns_testa
  5146 ;;		_eeprom_ler_word
  5147 ;;		_estado_maquina
  5148 ;;		_rs232_transmite
  5149 ;; This function is called by:
  5150 ;;		Interrupt level 1
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154     0C0A                     _handler:	
  5155                           ;psect for function _handler
  5156                           
  5157     0C0A                     i1l8513:
  5158                           
  5159                           ;handler.c: 18:     uint8_t option;;handler.c: 20:     static uint16_t count_t0 = 0;;han
      +                          dler.c: 24:     uint16_t tempo_amostra, pos_taxa;;handler.c: 35:     if (PIE1bits.RCIE) 
      +                          {
  5160     0C0A  1E8C               	btfss	12,5	;volatile
  5161     0C0B  2C0D               	goto	u832_21
  5162     0C0C  2C0E               	goto	u832_20
  5163     0C0D                     u832_21:
  5164     0C0D  2C1F               	goto	i1l8521
  5165     0C0E                     u832_20:
  5166     0C0E                     i1l8515:
  5167                           
  5168                           ;handler.c: 36:         if (PIR1bits.RCIF) {
  5169     0C0E  1283               	bcf	3,5	;RP0=0, select bank0
  5170     0C0F  1303               	bcf	3,6	;RP1=0, select bank0
  5171     0C10  1E8C               	btfss	12,5	;volatile
  5172     0C11  2C13               	goto	u833_21
  5173     0C12  2C14               	goto	u833_20
  5174     0C13                     u833_21:
  5175     0C13  2C1F               	goto	i1l8521
  5176     0C14                     u833_20:
  5177     0C14                     i1l8517:
  5178                           
  5179                           ;handler.c: 37:             if (RCREG == 0x41) {
  5180     0C14  3041               	movlw	65
  5181     0C15  061A               	xorwf	26,w	;volatile
  5182     0C16  1D03               	btfss	3,2
  5183     0C17  2C19               	goto	u834_21
  5184     0C18  2C1A               	goto	u834_20
  5185     0C19                     u834_21:
  5186     0C19  2C1F               	goto	i1l8521
  5187     0C1A                     u834_20:
  5188     0C1A                     i1l8519:
  5189                           
  5190                           ;handler.c: 49:                 rs232_transmite();
  5191     0C1A  120A  158A  229D  120A  158A  	fcall	_rs232_transmite
  5192     0C1F                     i1l8521:
  5193                           
  5194                           ;handler.c: 57:     if (INTCONbits.T0IE) {
  5195     0C1F  1E8B               	btfss	11,5	;volatile
  5196     0C20  2C22               	goto	u835_21
  5197     0C21  2C23               	goto	u835_20
  5198     0C22                     u835_21:
  5199     0C22  2C77               	goto	i1l8541
  5200     0C23                     u835_20:
  5201     0C23                     i1l8523:
  5202                           
  5203                           ;handler.c: 58:         if (INTCONbits.T0IF) {
  5204     0C23  1D0B               	btfss	11,2	;volatile
  5205     0C24  2C26               	goto	u836_21
  5206     0C25  2C27               	goto	u836_20
  5207     0C26                     u836_21:
  5208     0C26  2C77               	goto	i1l8541
  5209     0C27                     u836_20:
  5210     0C27                     i1l8525:
  5211                           
  5212                           ;handler.c: 61:             pos_taxa = eeprom_ler_word(0x02);
  5213     0C27  3002               	movlw	2
  5214     0C28  160A  118A  23BE  120A  158A  	fcall	_eeprom_ler_word
  5215     0C2D  0872               	movf	?_eeprom_ler_word+1,w
  5216     0C2E  1683               	bsf	3,5	;RP0=1, select bank1
  5217     0C2F  1303               	bcf	3,6	;RP1=0, select bank1
  5218     0C30  00AB               	movwf	(handler@pos_taxa+1)^(0+128)
  5219     0C31  0871               	movf	?_eeprom_ler_word,w
  5220     0C32  00AA               	movwf	handler@pos_taxa^(0+128)
  5221     0C33                     i1l8527:
  5222                           
  5223                           ;handler.c: 63:             tempo_amostra = menu_tempo_amostra[pos_taxa].ul_tempo_amostr
      +                          a;
  5224     0C33  082A               	movf	handler@pos_taxa^(0+128),w
  5225     0C34  00A3               	movwf	??_handler^(0+128)
  5226     0C35  3001               	movlw	1
  5227     0C36                     u837_25:
  5228     0C36  1003               	clrc
  5229     0C37  0DA3               	rlf	??_handler^(0+128),f
  5230     0C38  3EFF               	addlw	-1
  5231     0C39  1D03               	skipz
  5232     0C3A  2C36               	goto	u837_25
  5233     0C3B  1003               	clrc
  5234     0C3C  0D23               	rlf	??_handler^(0+128),w
  5235     0C3D  3E02               	addlw	2
  5236     0C3E  3E12               	addlw	low (_menu_tempo_amostra| (0+32768))
  5237     0C3F  0084               	movwf	4
  5238     0C40  3087               	movlw	high (_menu_tempo_amostra| (0+32768))
  5239     0C41  1803               	skipnc
  5240     0C42  3E01               	addlw	1
  5241     0C43  1283               	bcf	3,5	;RP0=0, select bank0
  5242     0C44  1303               	bcf	3,6	;RP1=0, select bank0
  5243     0C45  00FF               	movwf	btemp+1
  5244     0C46  120A  118A  2700  120A  158A  	fcall	stringtab
  5245     0C4B  1683               	bsf	3,5	;RP0=1, select bank1
  5246     0C4C  1303               	bcf	3,6	;RP1=0, select bank1
  5247     0C4D  00A8               	movwf	handler@tempo_amostra^(0+128)
  5248     0C4E  1283               	bcf	3,5	;RP0=0, select bank0
  5249     0C4F  1303               	bcf	3,6	;RP1=0, select bank0
  5250     0C50  120A  118A  2700  120A  158A  	fcall	stringtab
  5251     0C55  1683               	bsf	3,5	;RP0=1, select bank1
  5252     0C56  1303               	bcf	3,6	;RP1=0, select bank1
  5253     0C57  00A9               	movwf	(handler@tempo_amostra+1)^(0+128)
  5254     0C58                     i1l8529:
  5255                           
  5256                           ;handler.c: 72:             if (count_t0 != tempo_amostra) {
  5257     0C58  0829               	movf	(handler@tempo_amostra+1)^(0+128),w
  5258     0C59  064E               	xorwf	(handler@count_t0+1)^(0+128),w
  5259     0C5A  1D03               	skipz
  5260     0C5B  2C5E               	goto	u838_25
  5261     0C5C  0828               	movf	handler@tempo_amostra^(0+128),w
  5262     0C5D  064D               	xorwf	handler@count_t0^(0+128),w
  5263     0C5E                     u838_25:
  5264     0C5E  1903               	skipnz
  5265     0C5F  2C61               	goto	u838_21
  5266     0C60  2C62               	goto	u838_20
  5267     0C61                     u838_21:
  5268     0C61  2C69               	goto	i1l8533
  5269     0C62                     u838_20:
  5270     0C62                     i1l8531:
  5271                           
  5272                           ;handler.c: 73:                 count_t0++;
  5273     0C62  3001               	movlw	1
  5274     0C63  07CD               	addwf	handler@count_t0^(0+128),f
  5275     0C64  1803               	skipnc
  5276     0C65  0ACE               	incf	(handler@count_t0+1)^(0+128),f
  5277     0C66  3000               	movlw	0
  5278     0C67  07CE               	addwf	(handler@count_t0+1)^(0+128),f
  5279                           
  5280                           ;handler.c: 82:             } else {
  5281     0C68  2C72               	goto	i1l8537
  5282     0C69                     i1l8533:
  5283                           
  5284                           ;handler.c: 83:                 adcon_captura_grava();
  5285     0C69  120A  158A  2557  120A  158A  	fcall	_adcon_captura_grava
  5286     0C6E                     i1l8535:
  5287                           
  5288                           ;handler.c: 98:                 count_t0 = 0;
  5289     0C6E  1683               	bsf	3,5	;RP0=1, select bank1
  5290     0C6F  1303               	bcf	3,6	;RP1=0, select bank1
  5291     0C70  01CD               	clrf	handler@count_t0^(0+128)
  5292     0C71  01CE               	clrf	(handler@count_t0+1)^(0+128)
  5293     0C72                     i1l8537:
  5294                           
  5295                           ;handler.c: 100:             TMR0 = 39;
  5296     0C72  3027               	movlw	39
  5297     0C73  1283               	bcf	3,5	;RP0=0, select bank0
  5298     0C74  1303               	bcf	3,6	;RP1=0, select bank0
  5299     0C75  0081               	movwf	1	;volatile
  5300     0C76                     i1l8539:
  5301                           
  5302                           ;handler.c: 101:             INTCONbits.T0IF = 0;
  5303     0C76  110B               	bcf	11,2	;volatile
  5304     0C77                     i1l8541:
  5305                           
  5306                           ;handler.c: 106:     if (RBIE) {
  5307     0C77  1D8B               	btfss	11,3	;volatile
  5308     0C78  2C7A               	goto	u839_21
  5309     0C79  2C7B               	goto	u839_20
  5310     0C7A                     u839_21:
  5311     0C7A  2C93               	goto	i1l187
  5312     0C7B                     u839_20:
  5313     0C7B                     i1l8543:
  5314                           
  5315                           ;handler.c: 108:         if (RBIF) {
  5316     0C7B  1C0B               	btfss	11,0	;volatile
  5317     0C7C  2C7E               	goto	u840_21
  5318     0C7D  2C7F               	goto	u840_20
  5319     0C7E                     u840_21:
  5320     0C7E  2C93               	goto	i1l187
  5321     0C7F                     u840_20:
  5322     0C7F                     i1l8545:
  5323                           
  5324                           ;handler.c: 112:             option = btns_testa();
  5325     0C7F  160A  118A  23E4  120A  158A  	fcall	_btns_testa
  5326     0C84  1683               	bsf	3,5	;RP0=1, select bank1
  5327     0C85  1303               	bcf	3,6	;RP1=0, select bank1
  5328     0C86  00AC               	movwf	handler@option^(0+128)
  5329     0C87                     i1l8547:
  5330                           
  5331                           ;handler.c: 114:             if (option != 0) {
  5332     0C87  082C               	movf	handler@option^(0+128),w
  5333     0C88  1903               	btfsc	3,2
  5334     0C89  2C8B               	goto	u841_21
  5335     0C8A  2C8C               	goto	u841_20
  5336     0C8B                     u841_21:
  5337     0C8B  2C92               	goto	i1l8551
  5338     0C8C                     u841_20:
  5339     0C8C                     i1l8549:
  5340                           
  5341                           ;handler.c: 115:                 estado_maquina(option);
  5342     0C8C  082C               	movf	handler@option^(0+128),w
  5343     0C8D  120A  158A  21CB  120A  158A  	fcall	_estado_maquina
  5344     0C92                     i1l8551:
  5345                           
  5346                           ;handler.c: 119:             RBIF = 0;
  5347     0C92  100B               	bcf	11,0	;volatile
  5348     0C93                     i1l187:
  5349     0C93  1683               	bsf	3,5	;RP0=1, select bank1
  5350     0C94  1303               	bcf	3,6	;RP1=0, select bank1
  5351     0C95  0827               	movf	(??_handler+4)^(0+128),w
  5352     0C96  00FF               	movwf	btemp+1
  5353     0C97  0826               	movf	(??_handler+3)^(0+128),w
  5354     0C98  008A               	movwf	10
  5355     0C99  0825               	movf	(??_handler+2)^(0+128),w
  5356     0C9A  0084               	movwf	4
  5357     0C9B  0E24               	swapf	(??_handler+1)^(0+128),w
  5358     0C9C  0083               	movwf	3
  5359     0C9D  0EFE               	swapf	btemp,f
  5360     0C9E  0E7E               	swapf	btemp,w
  5361     0C9F  0009               	retfie
  5362     0CA0                     __end_of_handler:
  5363                           
  5364                           	psect	intentry
  5365     0004                     __pintentry:	
  5366                           ;incstack = 0
  5367 ;; hardware stack exceeded
  5368                           ; Regs used in _handler: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5369                           
  5370     0004                     interrupt_function:
  5371     007E                     saved_w	set	btemp
  5372     0004  00FE               	movwf	btemp
  5373     0005  0E03               	swapf	3,w
  5374     0006  1683               	bsf	3,5	;RP0=1, select bank1
  5375     0007  1303               	bcf	3,6	;RP1=0, select bank1
  5376     0008  00A4               	movwf	(??_handler+1)^(0+128)
  5377     0009  0804               	movf	4,w
  5378     000A  00A5               	movwf	(??_handler+2)^(0+128)
  5379     000B  080A               	movf	10,w
  5380     000C  00A6               	movwf	(??_handler+3)^(0+128)
  5381     000D  087F               	movf	btemp+1,w
  5382     000E  00A7               	movwf	(??_handler+4)^(0+128)
  5383     000F  120A  158A  2C0A   	ljmp	_handler
  5384                           
  5385                           	psect	text18
  5386     0A9D                     __ptext18:	
  5387 ;; *************** function _rs232_transmite *****************
  5388 ;; Defined at:
  5389 ;;		line 26 in file "rs232.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;		None
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;  i               1    9[COMMON] unsigned char 
  5394 ;;  x               1    8[COMMON] unsigned char 
  5395 ;;  qtd_bytes       1    7[COMMON] unsigned char 
  5396 ;;  qtd_sens        1    6[COMMON] unsigned char 
  5397 ;;  qtd_val         1    5[COMMON] unsigned char 
  5398 ;; Return value:  Size  Location     Type
  5399 ;;                  1    wreg      unsigned char 
  5400 ;; Registers used:
  5401 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5402 ;; Tracked objects:
  5403 ;;		On entry : 0/0
  5404 ;;		On exit  : 0/0
  5405 ;;		Unchanged: 0/0
  5406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5407 ;;      Params:         0       0       0       0       0
  5408 ;;      Locals:         5       0       0       0       0
  5409 ;;      Temps:          2       0       0       0       0
  5410 ;;      Totals:         7       0       0       0       0
  5411 ;;Total ram usage:        7 bytes
  5412 ;; Hardware stack levels used: 1
  5413 ;; Hardware stack levels required when called: 1
  5414 ;; This function calls:
  5415 ;;		___bmul
  5416 ;;		i1_eeprom_read
  5417 ;; This function is called by:
  5418 ;;		_handler
  5419 ;; This function uses a non-reentrant model
  5420 ;;
  5421                           
  5422     0A9D                     _rs232_transmite:	
  5423                           ;psect for function _rs232_transmite
  5424                           
  5425     0A9D                     i1l8361:	
  5426                           ;incstack = 0
  5427                           ; Regs used in _rs232_transmite: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5428                           
  5429                           
  5430                           ;rs232.c: 27:     uint8_t qtd_val, x;;rs232.c: 29:     uint8_t qtd_sens, qtd_bytes;;rs23
      +                          2.c: 30:     uint8_t i = 0;
  5431     0A9D  01F9               	clrf	rs232_transmite@i
  5432     0A9E                     i1l8363:
  5433                           
  5434                           ;rs232.c: 32:     qtd_val = eeprom_read(0x08);
  5435     0A9E  3008               	movlw	8
  5436     0A9F  160A  118A  22F8  120A  158A  	fcall	i1_eeprom_read
  5437     0AA4  00F5               	movwf	rs232_transmite@qtd_val
  5438     0AA5                     i1l8365:
  5439                           
  5440                           ;rs232.c: 33:     qtd_bytes = qtd_val * 2;
  5441     0AA5  0875               	movf	rs232_transmite@qtd_val,w
  5442     0AA6  00F3               	movwf	??_rs232_transmite
  5443     0AA7  0773               	addwf	??_rs232_transmite,w
  5444     0AA8  00F7               	movwf	rs232_transmite@qtd_bytes
  5445     0AA9                     i1l8367:
  5446                           
  5447                           ;rs232.c: 46:     qtd_sens = eeprom_read(0x00);
  5448     0AA9  3000               	movlw	0
  5449     0AAA  160A  118A  22F8  120A  158A  	fcall	i1_eeprom_read
  5450     0AAF  00F6               	movwf	rs232_transmite@qtd_sens
  5451     0AB0                     i1l8369:
  5452                           
  5453                           ;rs232.c: 47:     TXREG = menu_quant_sensores[qtd_sens].i_quant_sensores;
  5454     0AB0  3003               	movlw	3
  5455     0AB1  00F0               	movwf	___bmul@multiplicand
  5456     0AB2  0876               	movf	rs232_transmite@qtd_sens,w
  5457     0AB3  160A  118A  22E3  120A  158A  	fcall	___bmul
  5458     0AB8  3E02               	addlw	2
  5459     0AB9  3E2E               	addlw	low (_menu_quant_sensores| (0+32768))
  5460     0ABA  0084               	movwf	4
  5461     0ABB  3087               	movlw	high (_menu_quant_sensores| (0+32768))
  5462     0ABC  1803               	skipnc
  5463     0ABD  3E01               	addlw	1
  5464     0ABE  1283               	bcf	3,5	;RP0=0, select bank0
  5465     0ABF  1303               	bcf	3,6	;RP1=0, select bank0
  5466     0AC0  00FF               	movwf	btemp+1
  5467     0AC1  120A  118A  2700  120A  158A  	fcall	stringtab
  5468     0AC6  0099               	movwf	25	;volatile
  5469     0AC7                     i1l8371:
  5470                           
  5471                           ;rs232.c: 49:     _delay((unsigned long)((5)*(4000000/4000.0)));
  5472     0AC7  3007               	movlw	7
  5473     0AC8  00F4               	movwf	??_rs232_transmite+1
  5474     0AC9  307D               	movlw	125
  5475     0ACA  00F3               	movwf	??_rs232_transmite
  5476     0ACB                     u850_27:
  5477     0ACB  0BF3               	decfsz	??_rs232_transmite,f
  5478     0ACC  2ACB               	goto	u850_27
  5479     0ACD  0BF4               	decfsz	??_rs232_transmite+1,f
  5480     0ACE  2ACB               	goto	u850_27
  5481     0ACF                     i1l8373:
  5482                           
  5483                           ;rs232.c: 50:     TXREG = 0;
  5484     0ACF  1283               	bcf	3,5	;RP0=0, select bank0
  5485     0AD0  1303               	bcf	3,6	;RP1=0, select bank0
  5486     0AD1  0199               	clrf	25	;volatile
  5487     0AD2                     i1l8375:
  5488                           
  5489                           ;rs232.c: 51:     _delay((unsigned long)((5)*(4000000/4000.0)));
  5490     0AD2  3007               	movlw	7
  5491     0AD3  00F4               	movwf	??_rs232_transmite+1
  5492     0AD4  307D               	movlw	125
  5493     0AD5  00F3               	movwf	??_rs232_transmite
  5494     0AD6                     u851_27:
  5495     0AD6  0BF3               	decfsz	??_rs232_transmite,f
  5496     0AD7  2AD6               	goto	u851_27
  5497     0AD8  0BF4               	decfsz	??_rs232_transmite+1,f
  5498     0AD9  2AD6               	goto	u851_27
  5499                           
  5500                           ;rs232.c: 53:     for (; i < qtd_bytes; i = i + 2) {
  5501     0ADA  2B06               	goto	i1l8389
  5502     0ADB                     i1l8377:
  5503                           
  5504                           ;rs232.c: 54:         x = eeprom_read(0x0e + i + 1);
  5505     0ADB  0879               	movf	rs232_transmite@i,w
  5506     0ADC  3E0F               	addlw	15
  5507     0ADD  160A  118A  22F8  120A  158A  	fcall	i1_eeprom_read
  5508     0AE2  00F8               	movwf	rs232_transmite@x
  5509     0AE3                     i1l8379:
  5510                           
  5511                           ;rs232.c: 55:         TXREG = x;
  5512     0AE3  0878               	movf	rs232_transmite@x,w
  5513     0AE4  1283               	bcf	3,5	;RP0=0, select bank0
  5514     0AE5  1303               	bcf	3,6	;RP1=0, select bank0
  5515     0AE6  0099               	movwf	25	;volatile
  5516     0AE7                     i1l8381:
  5517                           
  5518                           ;rs232.c: 56:         _delay((unsigned long)((5)*(4000000/4000.0)));
  5519     0AE7  3007               	movlw	7
  5520     0AE8  00F4               	movwf	??_rs232_transmite+1
  5521     0AE9  307D               	movlw	125
  5522     0AEA  00F3               	movwf	??_rs232_transmite
  5523     0AEB                     u852_27:
  5524     0AEB  0BF3               	decfsz	??_rs232_transmite,f
  5525     0AEC  2AEB               	goto	u852_27
  5526     0AED  0BF4               	decfsz	??_rs232_transmite+1,f
  5527     0AEE  2AEB               	goto	u852_27
  5528                           
  5529                           ;rs232.c: 58:         x = eeprom_read(0x0e + i);
  5530     0AEF  0879               	movf	rs232_transmite@i,w
  5531     0AF0  3E0E               	addlw	14
  5532     0AF1  160A  118A  22F8  120A  158A  	fcall	i1_eeprom_read
  5533     0AF6  00F8               	movwf	rs232_transmite@x
  5534     0AF7                     i1l8383:
  5535                           
  5536                           ;rs232.c: 59:         TXREG = x;
  5537     0AF7  0878               	movf	rs232_transmite@x,w
  5538     0AF8  1283               	bcf	3,5	;RP0=0, select bank0
  5539     0AF9  1303               	bcf	3,6	;RP1=0, select bank0
  5540     0AFA  0099               	movwf	25	;volatile
  5541     0AFB                     i1l8385:
  5542                           
  5543                           ;rs232.c: 60:         _delay((unsigned long)((5)*(4000000/4000.0)));
  5544     0AFB  3007               	movlw	7
  5545     0AFC  00F4               	movwf	??_rs232_transmite+1
  5546     0AFD  307D               	movlw	125
  5547     0AFE  00F3               	movwf	??_rs232_transmite
  5548     0AFF                     u853_27:
  5549     0AFF  0BF3               	decfsz	??_rs232_transmite,f
  5550     0B00  2AFF               	goto	u853_27
  5551     0B01  0BF4               	decfsz	??_rs232_transmite+1,f
  5552     0B02  2AFF               	goto	u853_27
  5553     0B03                     i1l8387:
  5554                           
  5555                           ;rs232.c: 61:     }
  5556     0B03  0879               	movf	rs232_transmite@i,w
  5557     0B04  3E02               	addlw	2
  5558     0B05  00F9               	movwf	rs232_transmite@i
  5559     0B06                     i1l8389:
  5560     0B06  0877               	movf	rs232_transmite@qtd_bytes,w
  5561     0B07  0279               	subwf	rs232_transmite@i,w
  5562     0B08  1C03               	skipc
  5563     0B09  2B0B               	goto	u822_21
  5564     0B0A  2B0C               	goto	u822_20
  5565     0B0B                     u822_21:
  5566     0B0B  2ADB               	goto	i1l8377
  5567     0B0C                     u822_20:
  5568     0B0C                     i1l327:
  5569     0B0C  0008               	return
  5570     0B0D                     __end_of_rs232_transmite:
  5571                           
  5572                           	psect	text19
  5573     09CB                     __ptext19:	
  5574 ;; *************** function _estado_maquina *****************
  5575 ;; Defined at:
  5576 ;;		line 41 in file "estados.c"
  5577 ;; Parameters:    Size  Location     Type
  5578 ;;  op              1    wreg     unsigned char 
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;  op              1    2[BANK1 ] unsigned char 
  5581 ;; Return value:  Size  Location     Type
  5582 ;;                  1    wreg      void 
  5583 ;; Registers used:
  5584 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5585 ;; Tracked objects:
  5586 ;;		On entry : 0/0
  5587 ;;		On exit  : 0/0
  5588 ;;		Unchanged: 0/0
  5589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5590 ;;      Params:         0       0       0       0       0
  5591 ;;      Locals:         0       0       1       0       0
  5592 ;;      Temps:          0       0       2       0       0
  5593 ;;      Totals:         0       0       3       0       0
  5594 ;;Total ram usage:        3 bytes
  5595 ;; Hardware stack levels used: 1
  5596 ;; Hardware stack levels required when called: 5
  5597 ;; This function calls:
  5598 ;;		_estado_captura_mostra
  5599 ;;		_estado_inicial
  5600 ;;		_estado_max_min
  5601 ;;		_estado_menu_conf_quant_sensores
  5602 ;;		_estado_menu_conf_tempo_amostra
  5603 ;;		_estado_menu_limpar
  5604 ;;		_estado_menu_principal
  5605 ;;		_estado_ver_todos
  5606 ;; This function is called by:
  5607 ;;		_handler
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611     09CB                     _estado_maquina:	
  5612                           ;psect for function _estado_maquina
  5613                           
  5614                           
  5615                           ;incstack = 0
  5616 ;; hardware stack exceeded
  5617                           ; Regs used in _estado_maquina: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5618                           ;estado_maquina@op stored from wreg
  5619     09CB  1683               	bsf	3,5	;RP0=1, select bank1
  5620     09CC  1303               	bcf	3,6	;RP1=0, select bank1
  5621     09CD  00A2               	movwf	estado_maquina@op^(0+128)
  5622     09CE                     i1l8447:
  5623                           
  5624                           ;estados.c: 43:     switch (gl_estado) {
  5625     09CE  2A0E               	goto	i1l8469
  5626     09CF                     i1l8449:
  5627                           
  5628                           ;estados.c: 46:             estado_inicial(op);
  5629     09CF  0822               	movf	estado_maquina@op^(0+128),w
  5630     09D0  160A  118A  2268  120A  158A  	fcall	_estado_inicial
  5631                           
  5632                           ;estados.c: 47:         break;
  5633     09D5  2A33               	goto	i1l433
  5634     09D6                     i1l8451:
  5635                           
  5636                           ;estados.c: 50:             estado_menu_principal(op);
  5637     09D6  0822               	movf	estado_maquina@op^(0+128),w
  5638     09D7  120A  158A  265A  120A  158A  	fcall	_estado_menu_principal
  5639                           
  5640                           ;estados.c: 51:         break;
  5641     09DC  2A33               	goto	i1l433
  5642     09DD                     i1l8453:
  5643                           
  5644                           ;estados.c: 54:             estado_captura_mostra(op);
  5645     09DD  0822               	movf	estado_maquina@op^(0+128),w
  5646     09DE  160A  118A  22AE  120A  158A  	fcall	_estado_captura_mostra
  5647                           
  5648                           ;estados.c: 55:         break;
  5649     09E3  2A33               	goto	i1l433
  5650     09E4                     i1l8455:
  5651                           
  5652                           ;estados.c: 64:             estado_captura_mostra(op);
  5653     09E4  0822               	movf	estado_maquina@op^(0+128),w
  5654     09E5  160A  118A  22AE  120A  158A  	fcall	_estado_captura_mostra
  5655                           
  5656                           ;estados.c: 65:         break;
  5657     09EA  2A33               	goto	i1l433
  5658     09EB                     i1l8457:
  5659                           
  5660                           ;estados.c: 68:             estado_ver_todos(op);
  5661     09EB  0822               	movf	estado_maquina@op^(0+128),w
  5662     09EC  120A  158A  20AF  120A  158A  	fcall	_estado_ver_todos
  5663                           
  5664                           ;estados.c: 69:         break;
  5665     09F1  2A33               	goto	i1l433
  5666     09F2                     i1l8459:
  5667                           
  5668                           ;estados.c: 72:             estado_max_min(op);
  5669     09F2  0822               	movf	estado_maquina@op^(0+128),w
  5670     09F3  160A  118A  2284  120A  158A  	fcall	_estado_max_min
  5671                           
  5672                           ;estados.c: 73:         break;
  5673     09F8  2A33               	goto	i1l433
  5674     09F9                     i1l8461:
  5675                           
  5676                           ;estados.c: 76:             estado_menu_limpar(op);
  5677     09F9  0822               	movf	estado_maquina@op^(0+128),w
  5678     09FA  160A  118A  2292  120A  158A  	fcall	_estado_menu_limpar
  5679                           
  5680                           ;estados.c: 77:         break;
  5681     09FF  2A33               	goto	i1l433
  5682     0A00                     i1l8463:
  5683                           
  5684                           ;estados.c: 80:             estado_menu_conf_tempo_amostra(op);
  5685     0A00  0822               	movf	estado_maquina@op^(0+128),w
  5686     0A01  120A  158A  2102  120A  158A  	fcall	_estado_menu_conf_tempo_amostra
  5687                           
  5688                           ;estados.c: 81:         break;
  5689     0A06  2A33               	goto	i1l433
  5690     0A07                     i1l8465:
  5691                           
  5692                           ;estados.c: 89:             estado_menu_conf_quant_sensores(op);
  5693     0A07  0822               	movf	estado_maquina@op^(0+128),w
  5694     0A08  160A  118A  2751  120A  158A  	fcall	_estado_menu_conf_quant_sensores
  5695                           
  5696                           ;estados.c: 90:         break;
  5697     0A0D  2A33               	goto	i1l433
  5698     0A0E                     i1l8469:
  5699     0A0E  0852               	movf	_gl_estado^(0+128),w
  5700     0A0F  00A0               	movwf	??_estado_maquina^(0+128)
  5701     0A10  01A1               	clrf	(??_estado_maquina^(0+128)+1)
  5702                           
  5703                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5704                           ; Switch size 1, requested type "simple"
  5705                           ; Number of cases is 1, Range of values is 0 to 0
  5706                           ; switch strategies available:
  5707                           ; Name         Instructions Cycles
  5708                           ; simple_byte            4     3 (average)
  5709                           ; direct_byte           11     8 (fixed)
  5710                           ; jumptable            260     6 (fixed)
  5711                           ;	Chosen strategy is simple_byte
  5712     0A11  0821               	movf	(??_estado_maquina+1)^(0+128),w
  5713     0A12  3A00               	xorlw	0	; case 0
  5714     0A13  1903               	skipnz
  5715     0A14  2A16               	goto	i1l8883
  5716     0A15  2A33               	goto	i1l433
  5717     0A16                     i1l8883:
  5718                           
  5719                           ; Switch size 1, requested type "simple"
  5720                           ; Number of cases is 9, Range of values is 0 to 8
  5721                           ; switch strategies available:
  5722                           ; Name         Instructions Cycles
  5723                           ; simple_byte           28    15 (average)
  5724                           ; direct_byte           35     8 (fixed)
  5725                           ; jumptable            260     6 (fixed)
  5726                           ;	Chosen strategy is simple_byte
  5727     0A16  0820               	movf	??_estado_maquina^(0+128),w
  5728     0A17  3A00               	xorlw	0	; case 0
  5729     0A18  1903               	skipnz
  5730     0A19  29CF               	goto	i1l8449
  5731     0A1A  3A01               	xorlw	1	; case 1
  5732     0A1B  1903               	skipnz
  5733     0A1C  29D6               	goto	i1l8451
  5734     0A1D  3A03               	xorlw	3	; case 2
  5735     0A1E  1903               	skipnz
  5736     0A1F  29DD               	goto	i1l8453
  5737     0A20  3A01               	xorlw	1	; case 3
  5738     0A21  1903               	skipnz
  5739     0A22  29E4               	goto	i1l8455
  5740     0A23  3A07               	xorlw	7	; case 4
  5741     0A24  1903               	skipnz
  5742     0A25  29EB               	goto	i1l8457
  5743     0A26  3A01               	xorlw	1	; case 5
  5744     0A27  1903               	skipnz
  5745     0A28  29F2               	goto	i1l8459
  5746     0A29  3A03               	xorlw	3	; case 6
  5747     0A2A  1903               	skipnz
  5748     0A2B  29F9               	goto	i1l8461
  5749     0A2C  3A01               	xorlw	1	; case 7
  5750     0A2D  1903               	skipnz
  5751     0A2E  2A00               	goto	i1l8463
  5752     0A2F  3A0F               	xorlw	15	; case 8
  5753     0A30  1903               	skipnz
  5754     0A31  2A07               	goto	i1l8465
  5755     0A32  2A33               	goto	i1l433
  5756     0A33                     i1l433:
  5757     0A33  0008               	return
  5758     0A34                     __end_of_estado_maquina:
  5759                           
  5760                           	psect	text20
  5761     08AF                     __ptext20:	
  5762 ;; *************** function _estado_ver_todos *****************
  5763 ;; Defined at:
  5764 ;;		line 254 in file "estados.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;  opt             1    wreg     unsigned char 
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;  opt             1   66[BANK0 ] unsigned char 
  5769 ;; Return value:  Size  Location     Type
  5770 ;;                  1    wreg      void 
  5771 ;; Registers used:
  5772 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5778 ;;      Params:         0       0       0       0       0
  5779 ;;      Locals:         0       1       0       0       0
  5780 ;;      Temps:          2       0       0       0       0
  5781 ;;      Totals:         2       1       0       0       0
  5782 ;;Total ram usage:        3 bytes
  5783 ;; Hardware stack levels used: 1
  5784 ;; Hardware stack levels required when called: 4
  5785 ;; This function calls:
  5786 ;;		___lbdiv
  5787 ;;		_estado_executa_muda
  5788 ;;		i1_eeprom_read
  5789 ;; This function is called by:
  5790 ;;		_estado_maquina
  5791 ;; This function uses a non-reentrant model
  5792 ;;
  5793                           
  5794     08AF                     _estado_ver_todos:	
  5795                           ;psect for function _estado_ver_todos
  5796                           
  5797                           
  5798                           ;incstack = 0
  5799 ;; hardware stack exceeded
  5800                           ; Regs used in _estado_ver_todos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5801                           ;estado_ver_todos@opt stored from wreg
  5802     08AF  1283               	bcf	3,5	;RP0=0, select bank0
  5803     08B0  1303               	bcf	3,6	;RP1=0, select bank0
  5804     08B1  00E2               	movwf	estado_ver_todos@opt
  5805     08B2                     i1l8181:
  5806                           
  5807                           ;estados.c: 255:     switch (opt) {
  5808     08B2  28EE               	goto	i1l8199
  5809     08B3                     i1l8183:
  5810                           
  5811                           ;estados.c: 257:             if (gl_item_menu_ver_todos > 0) {
  5812     08B3  1683               	bsf	3,5	;RP0=1, select bank1
  5813     08B4  1303               	bcf	3,6	;RP1=0, select bank1
  5814     08B5  0850               	movf	_gl_item_menu_ver_todos^(0+128),w
  5815     08B6  1903               	btfsc	3,2
  5816     08B7  28B9               	goto	u803_21
  5817     08B8  28BA               	goto	u803_20
  5818     08B9                     u803_21:
  5819     08B9  2901               	goto	i1l483
  5820     08BA                     u803_20:
  5821     08BA                     i1l8185:
  5822                           
  5823                           ;estados.c: 258:                 gl_item_menu_ver_todos--;
  5824     08BA  3001               	movlw	1
  5825     08BB  02D0               	subwf	_gl_item_menu_ver_todos^(0+128),f
  5826     08BC                     i1l8187:
  5827                           
  5828                           ;estados.c: 259:                 estado_executa_muda(EST_MOSTRA_TODOS);
  5829     08BC  3004               	movlw	4
  5830     08BD  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  5831     08C2  2901               	goto	i1l483
  5832     08C3                     i1l8189:
  5833                           
  5834                           ;estados.c: 265:             if (gl_item_menu_ver_todos < (eeprom_read(0x08) / eeprom_re
      +                          ad(0x00))) {
  5835     08C3  3000               	movlw	0
  5836     08C4  160A  118A  22F8  120A  158A  	fcall	i1_eeprom_read
  5837     08C9  00F1               	movwf	___lbdiv@divisor
  5838     08CA  3008               	movlw	8
  5839     08CB  160A  118A  22F8  120A  158A  	fcall	i1_eeprom_read
  5840     08D0  160A  118A  240D  120A  158A  	fcall	___lbdiv
  5841     08D5  1683               	bsf	3,5	;RP0=1, select bank1
  5842     08D6  1303               	bcf	3,6	;RP1=0, select bank1
  5843     08D7  0250               	subwf	_gl_item_menu_ver_todos^(0+128),w
  5844     08D8  1803               	skipnc
  5845     08D9  28DB               	goto	u804_21
  5846     08DA  28DC               	goto	u804_20
  5847     08DB                     u804_21:
  5848     08DB  2901               	goto	i1l483
  5849     08DC                     u804_20:
  5850     08DC                     i1l8191:
  5851                           
  5852                           ;estados.c: 266:                 gl_item_menu_ver_todos++;
  5853     08DC  3001               	movlw	1
  5854     08DD  00FF               	movwf	btemp+1
  5855     08DE  087F               	movf	btemp+1,w
  5856     08DF  07D0               	addwf	_gl_item_menu_ver_todos^(0+128),f
  5857     08E0                     i1l8193:
  5858                           
  5859                           ;estados.c: 267:                 estado_executa_muda(EST_MOSTRA_TODOS);
  5860     08E0  3004               	movlw	4
  5861     08E1  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  5862     08E6  2901               	goto	i1l483
  5863     08E7                     i1l8195:
  5864                           
  5865                           ;estados.c: 271:             estado_executa_muda(EST_MENU_PRINCIPAL);
  5866     08E7  3001               	movlw	1
  5867     08E8  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  5868                           
  5869                           ;estados.c: 272:             break;
  5870     08ED  2901               	goto	i1l483
  5871     08EE                     i1l8199:
  5872     08EE  0862               	movf	estado_ver_todos@opt,w
  5873     08EF  00FC               	movwf	??_estado_ver_todos
  5874     08F0  01FD               	clrf	??_estado_ver_todos+1
  5875                           
  5876                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5877                           ; Switch size 1, requested type "simple"
  5878                           ; Number of cases is 1, Range of values is 0 to 0
  5879                           ; switch strategies available:
  5880                           ; Name         Instructions Cycles
  5881                           ; simple_byte            4     3 (average)
  5882                           ; direct_byte           11     8 (fixed)
  5883                           ; jumptable            260     6 (fixed)
  5884                           ;	Chosen strategy is simple_byte
  5885     08F1  087D               	movf	??_estado_ver_todos+1,w
  5886     08F2  3A00               	xorlw	0	; case 0
  5887     08F3  1903               	skipnz
  5888     08F4  28F6               	goto	i1l8885
  5889     08F5  2901               	goto	i1l483
  5890     08F6                     i1l8885:
  5891                           
  5892                           ; Switch size 1, requested type "simple"
  5893                           ; Number of cases is 3, Range of values is 2 to 4
  5894                           ; switch strategies available:
  5895                           ; Name         Instructions Cycles
  5896                           ; simple_byte           10     6 (average)
  5897                           ; direct_byte           20    11 (fixed)
  5898                           ; jumptable            263     9 (fixed)
  5899                           ;	Chosen strategy is simple_byte
  5900     08F6  087C               	movf	??_estado_ver_todos,w
  5901     08F7  3A02               	xorlw	2	; case 2
  5902     08F8  1903               	skipnz
  5903     08F9  28E7               	goto	i1l8195
  5904     08FA  3A01               	xorlw	1	; case 3
  5905     08FB  1903               	skipnz
  5906     08FC  28B3               	goto	i1l8183
  5907     08FD  3A07               	xorlw	7	; case 4
  5908     08FE  1903               	skipnz
  5909     08FF  28C3               	goto	i1l8189
  5910     0900  2901               	goto	i1l483
  5911     0901                     i1l483:
  5912     0901  0008               	return
  5913     0902                     __end_of_estado_ver_todos:
  5914                           
  5915                           	psect	text21
  5916     140D                     __ptext21:	
  5917 ;; *************** function ___lbdiv *****************
  5918 ;; Defined at:
  5919 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbdiv.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;  dividend        1    wreg     unsigned char 
  5922 ;;  divisor         1    1[COMMON] unsigned char 
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;  dividend        1    2[COMMON] unsigned char 
  5925 ;;  quotient        1    4[COMMON] unsigned char 
  5926 ;;  counter         1    3[COMMON] unsigned char 
  5927 ;; Return value:  Size  Location     Type
  5928 ;;                  1    wreg      unsigned char 
  5929 ;; Registers used:
  5930 ;;		wreg, status,2, status,0, btemp+1
  5931 ;; Tracked objects:
  5932 ;;		On entry : 0/0
  5933 ;;		On exit  : 0/0
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5936 ;;      Params:         1       0       0       0       0
  5937 ;;      Locals:         3       0       0       0       0
  5938 ;;      Temps:          0       0       0       0       0
  5939 ;;      Totals:         4       0       0       0       0
  5940 ;;Total ram usage:        4 bytes
  5941 ;; Hardware stack levels used: 1
  5942 ;; This function calls:
  5943 ;;		Nothing
  5944 ;; This function is called by:
  5945 ;;		_estado_ver_todos
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           
  5949     140D                     ___lbdiv:	
  5950                           ;psect for function ___lbdiv
  5951                           
  5952                           
  5953                           ;incstack = 0
  5954                           ; Regs used in ___lbdiv: [wreg+status,2+status,0+btemp+1]
  5955                           ;___lbdiv@dividend stored from wreg
  5956     140D  00F2               	movwf	___lbdiv@dividend
  5957     140E                     i1l8041:
  5958     140E  01F4               	clrf	___lbdiv@quotient
  5959     140F                     i1l8043:
  5960     140F  0871               	movf	___lbdiv@divisor,w
  5961     1410  1903               	btfsc	3,2
  5962     1411  2C13               	goto	u791_21
  5963     1412  2C14               	goto	u791_20
  5964     1413                     u791_21:
  5965     1413  2C34               	goto	i1l8063
  5966     1414                     u791_20:
  5967     1414                     i1l8045:
  5968     1414  01F3               	clrf	___lbdiv@counter
  5969     1415  0AF3               	incf	___lbdiv@counter,f
  5970     1416  2C1D               	goto	i1l8051
  5971     1417                     i1l8047:
  5972     1417  1003               	clrc
  5973     1418  0DF1               	rlf	___lbdiv@divisor,f
  5974     1419                     i1l8049:
  5975     1419  3001               	movlw	1
  5976     141A  00FF               	movwf	btemp+1
  5977     141B  087F               	movf	btemp+1,w
  5978     141C  07F3               	addwf	___lbdiv@counter,f
  5979     141D                     i1l8051:
  5980     141D  1FF1               	btfss	___lbdiv@divisor,7
  5981     141E  2C20               	goto	u792_21
  5982     141F  2C21               	goto	u792_20
  5983     1420                     u792_21:
  5984     1420  2C17               	goto	i1l8047
  5985     1421                     u792_20:
  5986     1421                     i1l8053:
  5987     1421  1003               	clrc
  5988     1422  0DF4               	rlf	___lbdiv@quotient,f
  5989     1423  0871               	movf	___lbdiv@divisor,w
  5990     1424  0272               	subwf	___lbdiv@dividend,w
  5991     1425  1C03               	skipc
  5992     1426  2C28               	goto	u793_21
  5993     1427  2C29               	goto	u793_20
  5994     1428                     u793_21:
  5995     1428  2C2C               	goto	i1l8059
  5996     1429                     u793_20:
  5997     1429                     i1l8055:
  5998     1429  0871               	movf	___lbdiv@divisor,w
  5999     142A  02F2               	subwf	___lbdiv@dividend,f
  6000     142B                     i1l8057:
  6001     142B  1474               	bsf	___lbdiv@quotient,0
  6002     142C                     i1l8059:
  6003     142C  1003               	clrc
  6004     142D  0CF1               	rrf	___lbdiv@divisor,f
  6005     142E                     i1l8061:
  6006     142E  3001               	movlw	1
  6007     142F  02F3               	subwf	___lbdiv@counter,f
  6008     1430  1D03               	btfss	3,2
  6009     1431  2C33               	goto	u794_21
  6010     1432  2C34               	goto	u794_20
  6011     1433                     u794_21:
  6012     1433  2C21               	goto	i1l8053
  6013     1434                     u794_20:
  6014     1434                     i1l8063:
  6015     1434  0874               	movf	___lbdiv@quotient,w
  6016     1435                     i1l867:
  6017     1435  0008               	return
  6018     1436                     __end_of___lbdiv:
  6019                           
  6020                           	psect	text22
  6021     0E5A                     __ptext22:	
  6022 ;; *************** function _estado_menu_principal *****************
  6023 ;; Defined at:
  6024 ;;		line 127 in file "estados.c"
  6025 ;; Parameters:    Size  Location     Type
  6026 ;;  opt             1    wreg     unsigned char 
  6027 ;; Auto vars:     Size  Location     Type
  6028 ;;  opt             1   68[BANK0 ] unsigned char 
  6029 ;;  i               1   77[BANK0 ] unsigned char 
  6030 ;;  i               1   76[BANK0 ] unsigned char 
  6031 ;;  t_int           2   78[BANK0 ] unsigned int 
  6032 ;;  menor           2   71[BANK0 ] unsigned int 
  6033 ;;  maior           2   69[BANK0 ] unsigned int 
  6034 ;;  qtd_val         1   75[BANK0 ] unsigned char 
  6035 ;;  qtd_sens        1   74[BANK0 ] unsigned char 
  6036 ;;  posicao         1   73[BANK0 ] unsigned char 
  6037 ;; Return value:  Size  Location     Type
  6038 ;;                  1    wreg      void 
  6039 ;; Registers used:
  6040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6041 ;; Tracked objects:
  6042 ;;		On entry : 0/0
  6043 ;;		On exit  : 0/0
  6044 ;;		Unchanged: 0/0
  6045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6046 ;;      Params:         0       0       0       0       0
  6047 ;;      Locals:         0      12       0       0       0
  6048 ;;      Temps:          0       2       0       0       0
  6049 ;;      Totals:         0      14       0       0       0
  6050 ;;Total ram usage:       14 bytes
  6051 ;; Hardware stack levels used: 1
  6052 ;; Hardware stack levels required when called: 4
  6053 ;; This function calls:
  6054 ;;		___bmul
  6055 ;;		_adcon_ler_canal
  6056 ;;		_adcon_mostra
  6057 ;;		_eeprom_ler_word
  6058 ;;		_estado_executa_muda
  6059 ;;		_lcd_clear
  6060 ;;		i1_eeprom_gravar_word
  6061 ;;		i1_eeprom_read
  6062 ;;		i1_eeprom_write
  6063 ;;		i1_lcd_puts
  6064 ;; This function is called by:
  6065 ;;		_estado_maquina
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           
  6069     0E5A                     _estado_menu_principal:	
  6070                           ;psect for function _estado_menu_principal
  6071                           
  6072                           
  6073                           ;incstack = 0
  6074 ;; hardware stack exceeded
  6075                           ; Regs used in _estado_menu_principal: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  6076                           ;estado_menu_principal@opt stored from wreg
  6077     0E5A  1283               	bcf	3,5	;RP0=0, select bank0
  6078     0E5B  1303               	bcf	3,6	;RP1=0, select bank0
  6079     0E5C  00E4               	movwf	estado_menu_principal@opt
  6080     0E5D                     i1l8069:
  6081                           
  6082                           ;estados.c: 128:     uint8_t qtd_val;;estados.c: 129:     uint8_t qtd_sens;;estados.c: 1
      +                          30:     uint16_t t_int;;estados.c: 131:     uint16_t maior, menor;;estados.c: 132:     u
      +                          int8_t posicao;;estados.c: 134:     switch (opt) {
  6083     0E5D  2FEC               	goto	i1l8161
  6084     0E5E                     i1l8071:
  6085                           
  6086                           ;estados.c: 136:             if (gl_item_menu_principal > 0) {
  6087     0E5E  1683               	bsf	3,5	;RP0=1, select bank1
  6088     0E5F  1303               	bcf	3,6	;RP1=0, select bank1
  6089     0E60  0851               	movf	_gl_item_menu_principal^(0+128),w
  6090     0E61  1903               	btfsc	3,2
  6091     0E62  2E64               	goto	u795_21
  6092     0E63  2E65               	goto	u795_20
  6093     0E64                     u795_21:
  6094     0E64  2FFF               	goto	i1l473
  6095     0E65                     u795_20:
  6096     0E65                     i1l8073:
  6097                           
  6098                           ;estados.c: 137:                 gl_item_menu_principal--;
  6099     0E65  3001               	movlw	1
  6100     0E66  02D1               	subwf	_gl_item_menu_principal^(0+128),f
  6101     0E67                     i1l8075:
  6102                           
  6103                           ;estados.c: 138:                 estado_executa_muda(EST_MENU_PRINCIPAL);
  6104     0E67  3001               	movlw	1
  6105     0E68  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6106     0E6D  2FFF               	goto	i1l473
  6107     0E6E                     i1l8077:
  6108                           
  6109                           ;estados.c: 143:             if (gl_item_menu_principal < 7 - 1) {
  6110     0E6E  3006               	movlw	6
  6111     0E6F  1683               	bsf	3,5	;RP0=1, select bank1
  6112     0E70  1303               	bcf	3,6	;RP1=0, select bank1
  6113     0E71  0251               	subwf	_gl_item_menu_principal^(0+128),w
  6114     0E72  1803               	skipnc
  6115     0E73  2E75               	goto	u796_21
  6116     0E74  2E76               	goto	u796_20
  6117     0E75                     u796_21:
  6118     0E75  2FFF               	goto	i1l473
  6119     0E76                     u796_20:
  6120     0E76                     i1l8079:
  6121                           
  6122                           ;estados.c: 144:                 gl_item_menu_principal++;
  6123     0E76  3001               	movlw	1
  6124     0E77  00FF               	movwf	btemp+1
  6125     0E78  087F               	movf	btemp+1,w
  6126     0E79  07D1               	addwf	_gl_item_menu_principal^(0+128),f
  6127     0E7A                     i1l8081:
  6128                           
  6129                           ;estados.c: 145:                 estado_executa_muda(EST_MENU_PRINCIPAL);
  6130     0E7A  3001               	movlw	1
  6131     0E7B  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6132     0E80  2FFF               	goto	i1l473
  6133     0E81                     i1l8083:
  6134                           
  6135                           ;estados.c: 156:                     lcd_clear();
  6136     0E81  160A  118A  230F  120A  158A  	fcall	_lcd_clear
  6137     0E86                     i1l8085:
  6138                           
  6139                           ;estados.c: 160:                     posicao = eeprom_read(0x00);
  6140     0E86  3000               	movlw	0
  6141     0E87  160A  118A  22F8  120A  158A  	fcall	i1_eeprom_read
  6142     0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  6143     0E8D  1303               	bcf	3,6	;RP1=0, select bank0
  6144     0E8E  00E9               	movwf	estado_menu_principal@posicao
  6145     0E8F                     i1l8087:
  6146                           
  6147                           ;estados.c: 161:                     qtd_sens = menu_quant_sensores[posicao].i_quant_sen
      +                          sores;
  6148     0E8F  3003               	movlw	3
  6149     0E90  00F0               	movwf	___bmul@multiplicand
  6150     0E91  0869               	movf	estado_menu_principal@posicao,w
  6151     0E92  160A  118A  22E3  120A  158A  	fcall	___bmul
  6152     0E97  3E02               	addlw	2
  6153     0E98  3E2E               	addlw	low (_menu_quant_sensores| (0+32768))
  6154     0E99  0084               	movwf	4
  6155     0E9A  3087               	movlw	high (_menu_quant_sensores| (0+32768))
  6156     0E9B  1803               	skipnc
  6157     0E9C  3E01               	addlw	1
  6158     0E9D  1283               	bcf	3,5	;RP0=0, select bank0
  6159     0E9E  1303               	bcf	3,6	;RP1=0, select bank0
  6160     0E9F  00FF               	movwf	btemp+1
  6161     0EA0  120A  118A  2700  120A  158A  	fcall	stringtab
  6162     0EA5  00EA               	movwf	estado_menu_principal@qtd_sens
  6163     0EA6                     i1l8089:
  6164                           
  6165                           ;estados.c: 163:                     for (uint8_t i = 0; i < qtd_sens; i++) {
  6166     0EA6  01EC               	clrf	estado_menu_principal@i
  6167     0EA7  2EC5               	goto	i1l8095
  6168     0EA8                     i1l8091:
  6169                           
  6170                           ;estados.c: 164:                         t_int = adcon_ler_canal(i);
  6171     0EA8  086C               	movf	estado_menu_principal@i,w
  6172     0EA9  120A  158A  230D  120A  158A  	fcall	_adcon_ler_canal
  6173     0EAE  0871               	movf	?_adcon_ler_canal+1,w
  6174     0EAF  1283               	bcf	3,5	;RP0=0, select bank0
  6175     0EB0  1303               	bcf	3,6	;RP1=0, select bank0
  6176     0EB1  00EF               	movwf	estado_menu_principal@t_int+1
  6177     0EB2  0870               	movf	?_adcon_ler_canal,w
  6178     0EB3  00EE               	movwf	estado_menu_principal@t_int
  6179                           
  6180                           ;estados.c: 166:                             adcon_mostra(t_int, i);
  6181     0EB4  086F               	movf	estado_menu_principal@t_int+1,w
  6182     0EB5  00BD               	movwf	adcon_mostra@t_int+1
  6183     0EB6  086E               	movf	estado_menu_principal@t_int,w
  6184     0EB7  00BC               	movwf	adcon_mostra@t_int
  6185     0EB8  086C               	movf	estado_menu_principal@i,w
  6186     0EB9  00BE               	movwf	adcon_mostra@i
  6187     0EBA  120A  158A  2383  120A  158A  	fcall	_adcon_mostra
  6188     0EBF                     i1l8093:
  6189                           
  6190                           ;estados.c: 174:                     }
  6191     0EBF  3001               	movlw	1
  6192     0EC0  00FF               	movwf	btemp+1
  6193     0EC1  087F               	movf	btemp+1,w
  6194     0EC2  1283               	bcf	3,5	;RP0=0, select bank0
  6195     0EC3  1303               	bcf	3,6	;RP1=0, select bank0
  6196     0EC4  07EC               	addwf	estado_menu_principal@i,f
  6197     0EC5                     i1l8095:
  6198     0EC5  086A               	movf	estado_menu_principal@qtd_sens,w
  6199     0EC6  026C               	subwf	estado_menu_principal@i,w
  6200     0EC7  1C03               	skipc
  6201     0EC8  2ECA               	goto	u797_21
  6202     0EC9  2ECB               	goto	u797_20
  6203     0ECA                     u797_21:
  6204     0ECA  2EA8               	goto	i1l8091
  6205     0ECB                     u797_20:
  6206     0ECB                     i1l8097:
  6207                           
  6208                           ;estados.c: 175:                     estado_executa_muda(EST_CAPTURA_E_MOSTRA);
  6209     0ECB  3002               	movlw	2
  6210     0ECC  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6211                           
  6212                           ;estados.c: 176:                     break;
  6213     0ED1  2FFF               	goto	i1l473
  6214     0ED2                     i1l8099:
  6215                           
  6216                           ;estados.c: 179:                     lcd_clear();
  6217     0ED2  160A  118A  230F  120A  158A  	fcall	_lcd_clear
  6218     0ED7                     i1l8101:
  6219                           
  6220                           ;estados.c: 184:                     qtd_val = eeprom_read(0x08);
  6221     0ED7  3008               	movlw	8
  6222     0ED8  160A  118A  22F8  120A  158A  	fcall	i1_eeprom_read
  6223     0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  6224     0EDE  1303               	bcf	3,6	;RP1=0, select bank0
  6225     0EDF  00EB               	movwf	estado_menu_principal@qtd_val
  6226     0EE0                     i1l8103:
  6227                           
  6228                           ;estados.c: 185:                     maior = eeprom_ler_word(0x06);
  6229     0EE0  3006               	movlw	6
  6230     0EE1  160A  118A  23BE  120A  158A  	fcall	_eeprom_ler_word
  6231     0EE6  0872               	movf	?_eeprom_ler_word+1,w
  6232     0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  6233     0EE8  1303               	bcf	3,6	;RP1=0, select bank0
  6234     0EE9  00E6               	movwf	estado_menu_principal@maior+1
  6235     0EEA  0871               	movf	?_eeprom_ler_word,w
  6236     0EEB  00E5               	movwf	estado_menu_principal@maior
  6237     0EEC                     i1l8105:
  6238                           
  6239                           ;estados.c: 186:                     menor = eeprom_ler_word(0x04);
  6240     0EEC  3004               	movlw	4
  6241     0EED  160A  118A  23BE  120A  158A  	fcall	_eeprom_ler_word
  6242     0EF2  0872               	movf	?_eeprom_ler_word+1,w
  6243     0EF3  1283               	bcf	3,5	;RP0=0, select bank0
  6244     0EF4  1303               	bcf	3,6	;RP1=0, select bank0
  6245     0EF5  00E8               	movwf	estado_menu_principal@menor+1
  6246     0EF6  0871               	movf	?_eeprom_ler_word,w
  6247     0EF7  00E7               	movwf	estado_menu_principal@menor
  6248     0EF8                     i1l8107:
  6249                           
  6250                           ;estados.c: 188:                     for (uint8_t i = 0; i < qtd_sens; i++) {
  6251     0EF8  01ED               	clrf	estado_menu_principal@i_916
  6252     0EF9  2F84               	goto	i1l8137
  6253     0EFA                     i1l8109:
  6254                           
  6255                           ;estados.c: 189:                         if ((qtd_val + i) >= 100) {
  6256     0EFA  086B               	movf	estado_menu_principal@qtd_val,w
  6257     0EFB  076D               	addwf	estado_menu_principal@i_916,w
  6258     0EFC  00E2               	movwf	??_estado_menu_principal
  6259     0EFD  01E3               	clrf	??_estado_menu_principal+1
  6260     0EFE  0DE3               	rlf	??_estado_menu_principal+1,f
  6261     0EFF  0863               	movf	??_estado_menu_principal+1,w
  6262     0F00  3A80               	xorlw	128
  6263     0F01  00FF               	movwf	btemp+1
  6264     0F02  3080               	movlw	128
  6265     0F03  027F               	subwf	btemp+1,w
  6266     0F04  1D03               	skipz
  6267     0F05  2F08               	goto	u798_25
  6268     0F06  3064               	movlw	100
  6269     0F07  0262               	subwf	??_estado_menu_principal,w
  6270     0F08                     u798_25:
  6271     0F08  1C03               	skipc
  6272     0F09  2F0B               	goto	u798_21
  6273     0F0A  2F0C               	goto	u798_20
  6274     0F0B                     u798_21:
  6275     0F0B  2F1C               	goto	i1l8119
  6276     0F0C                     u798_20:
  6277     0F0C                     i1l8111:
  6278                           
  6279                           ;estados.c: 190:                             INTCONbits.T0IE = 0;
  6280     0F0C  128B               	bcf	11,5	;volatile
  6281     0F0D                     i1l8113:
  6282                           
  6283                           ;estados.c: 191:                             lcd_clear();
  6284     0F0D  160A  118A  230F  120A  158A  	fcall	_lcd_clear
  6285     0F12                     i1l8115:
  6286                           
  6287                           ;estados.c: 192:                             lcd_puts("Memoria Cheia");
  6288     0F12  30CA               	movlw	low (STR_16| (0+32768))
  6289     0F13  00F3               	movwf	i1lcd_puts@str
  6290     0F14  3087               	movlw	high (STR_16| (0+32768))
  6291     0F15  00F4               	movwf	i1lcd_puts@str+1
  6292     0F16  160A  118A  2706  120A  158A  	fcall	i1_lcd_puts
  6293                           
  6294                           ;estados.c: 193:                             break;
  6295     0F1B  2F8A               	goto	i1l8139
  6296     0F1C                     i1l8119:
  6297                           
  6298                           ;estados.c: 196:                             t_int = adcon_ler_canal(i);
  6299     0F1C  1283               	bcf	3,5	;RP0=0, select bank0
  6300     0F1D  1303               	bcf	3,6	;RP1=0, select bank0
  6301     0F1E  086D               	movf	estado_menu_principal@i_916,w
  6302     0F1F  120A  158A  230D  120A  158A  	fcall	_adcon_ler_canal
  6303     0F24  0871               	movf	?_adcon_ler_canal+1,w
  6304     0F25  1283               	bcf	3,5	;RP0=0, select bank0
  6305     0F26  1303               	bcf	3,6	;RP1=0, select bank0
  6306     0F27  00EF               	movwf	estado_menu_principal@t_int+1
  6307     0F28  0870               	movf	?_adcon_ler_canal,w
  6308     0F29  00EE               	movwf	estado_menu_principal@t_int
  6309     0F2A                     i1l8121:
  6310                           
  6311                           ;estados.c: 197:                             if (t_int < menor) {
  6312     0F2A  0868               	movf	estado_menu_principal@menor+1,w
  6313     0F2B  026F               	subwf	estado_menu_principal@t_int+1,w
  6314     0F2C  1D03               	skipz
  6315     0F2D  2F30               	goto	u799_25
  6316     0F2E  0867               	movf	estado_menu_principal@menor,w
  6317     0F2F  026E               	subwf	estado_menu_principal@t_int,w
  6318     0F30                     u799_25:
  6319     0F30  1803               	skipnc
  6320     0F31  2F33               	goto	u799_21
  6321     0F32  2F34               	goto	u799_20
  6322     0F33                     u799_21:
  6323     0F33  2F3E               	goto	i1l8125
  6324     0F34                     u799_20:
  6325     0F34                     i1l8123:
  6326                           
  6327                           ;estados.c: 198:                                 eeprom_gravar_word(0x04, t_int);
  6328     0F34  086F               	movf	estado_menu_principal@t_int+1,w
  6329     0F35  00F3               	movwf	i1eeprom_gravar_word@dado+1
  6330     0F36  086E               	movf	estado_menu_principal@t_int,w
  6331     0F37  00F2               	movwf	i1eeprom_gravar_word@dado
  6332     0F38  3004               	movlw	4
  6333     0F39  160A  118A  22BD  120A  158A  	fcall	i1_eeprom_gravar_word
  6334     0F3E                     i1l8125:
  6335                           
  6336                           ;estados.c: 200:                             if (t_int > maior) {
  6337     0F3E  1283               	bcf	3,5	;RP0=0, select bank0
  6338     0F3F  1303               	bcf	3,6	;RP1=0, select bank0
  6339     0F40  086F               	movf	estado_menu_principal@t_int+1,w
  6340     0F41  0266               	subwf	estado_menu_principal@maior+1,w
  6341     0F42  1D03               	skipz
  6342     0F43  2F46               	goto	u800_25
  6343     0F44  086E               	movf	estado_menu_principal@t_int,w
  6344     0F45  0265               	subwf	estado_menu_principal@maior,w
  6345     0F46                     u800_25:
  6346     0F46  1803               	skipnc
  6347     0F47  2F49               	goto	u800_21
  6348     0F48  2F4A               	goto	u800_20
  6349     0F49                     u800_21:
  6350     0F49  2F54               	goto	i1l467
  6351     0F4A                     u800_20:
  6352     0F4A                     i1l8127:
  6353                           
  6354                           ;estados.c: 201:                                 eeprom_gravar_word(0x06, t_int);
  6355     0F4A  086F               	movf	estado_menu_principal@t_int+1,w
  6356     0F4B  00F3               	movwf	i1eeprom_gravar_word@dado+1
  6357     0F4C  086E               	movf	estado_menu_principal@t_int,w
  6358     0F4D  00F2               	movwf	i1eeprom_gravar_word@dado
  6359     0F4E  3006               	movlw	6
  6360     0F4F  160A  118A  22BD  120A  158A  	fcall	i1_eeprom_gravar_word
  6361     0F54                     i1l467:	
  6362                           ;estados.c: 202:                             }
  6363                           
  6364                           
  6365                           ;estados.c: 203:                             eeprom_gravar_word(0x0e + (qtd_val * 2), t_
      +                          int);
  6366     0F54  1283               	bcf	3,5	;RP0=0, select bank0
  6367     0F55  1303               	bcf	3,6	;RP1=0, select bank0
  6368     0F56  086F               	movf	estado_menu_principal@t_int+1,w
  6369     0F57  00F3               	movwf	i1eeprom_gravar_word@dado+1
  6370     0F58  086E               	movf	estado_menu_principal@t_int,w
  6371     0F59  00F2               	movwf	i1eeprom_gravar_word@dado
  6372     0F5A  086B               	movf	estado_menu_principal@qtd_val,w
  6373     0F5B  00E2               	movwf	??_estado_menu_principal
  6374     0F5C  0762               	addwf	??_estado_menu_principal,w
  6375     0F5D  3E0E               	addlw	14
  6376     0F5E  160A  118A  22BD  120A  158A  	fcall	i1_eeprom_gravar_word
  6377     0F63                     i1l8129:
  6378                           
  6379                           ;estados.c: 204:                             qtd_val++;
  6380     0F63  3001               	movlw	1
  6381     0F64  00FF               	movwf	btemp+1
  6382     0F65  087F               	movf	btemp+1,w
  6383     0F66  1283               	bcf	3,5	;RP0=0, select bank0
  6384     0F67  1303               	bcf	3,6	;RP1=0, select bank0
  6385     0F68  07EB               	addwf	estado_menu_principal@qtd_val,f
  6386     0F69                     i1l8131:
  6387                           
  6388                           ;estados.c: 205:                             eeprom_write(0x08, qtd_val);
  6389     0F69  086B               	movf	estado_menu_principal@qtd_val,w
  6390     0F6A  00F0               	movwf	i1eeprom_write@value
  6391     0F6B  3008               	movlw	8
  6392     0F6C  160A  118A  2460  120A  158A  	fcall	i1_eeprom_write
  6393     0F71                     i1l8133:
  6394                           
  6395                           ;estados.c: 207:                             adcon_mostra(t_int, i);
  6396     0F71  1283               	bcf	3,5	;RP0=0, select bank0
  6397     0F72  1303               	bcf	3,6	;RP1=0, select bank0
  6398     0F73  086F               	movf	estado_menu_principal@t_int+1,w
  6399     0F74  00BD               	movwf	adcon_mostra@t_int+1
  6400     0F75  086E               	movf	estado_menu_principal@t_int,w
  6401     0F76  00BC               	movwf	adcon_mostra@t_int
  6402     0F77  086D               	movf	estado_menu_principal@i_916,w
  6403     0F78  00BE               	movwf	adcon_mostra@i
  6404     0F79  120A  158A  2383  120A  158A  	fcall	_adcon_mostra
  6405     0F7E                     i1l8135:
  6406                           
  6407                           ;estados.c: 214:                     }
  6408     0F7E  3001               	movlw	1
  6409     0F7F  00FF               	movwf	btemp+1
  6410     0F80  087F               	movf	btemp+1,w
  6411     0F81  1283               	bcf	3,5	;RP0=0, select bank0
  6412     0F82  1303               	bcf	3,6	;RP1=0, select bank0
  6413     0F83  07ED               	addwf	estado_menu_principal@i_916,f
  6414     0F84                     i1l8137:
  6415     0F84  086A               	movf	estado_menu_principal@qtd_sens,w
  6416     0F85  026D               	subwf	estado_menu_principal@i_916,w
  6417     0F86  1C03               	skipc
  6418     0F87  2F89               	goto	u801_21
  6419     0F88  2F8A               	goto	u801_20
  6420     0F89                     u801_21:
  6421     0F89  2EFA               	goto	i1l8109
  6422     0F8A                     u801_20:
  6423     0F8A                     i1l8139:
  6424                           
  6425                           ;estados.c: 216:                     estado_executa_muda(EST_CAPTURA_E_GRAVA);
  6426     0F8A  3003               	movlw	3
  6427     0F8B  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6428                           
  6429                           ;estados.c: 217:                     break;
  6430     0F90  2FFF               	goto	i1l473
  6431     0F91                     i1l8141:
  6432                           
  6433                           ;estados.c: 220:                     estado_executa_muda(EST_MOSTRA_TODOS);
  6434     0F91  3004               	movlw	4
  6435     0F92  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6436                           
  6437                           ;estados.c: 221:                     break;
  6438     0F97  2FFF               	goto	i1l473
  6439     0F98                     i1l8143:
  6440                           
  6441                           ;estados.c: 224:                     estado_executa_muda(EST_MOSTRA_MAX_MIN);
  6442     0F98  3005               	movlw	5
  6443     0F99  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6444                           
  6445                           ;estados.c: 225:                     break;
  6446     0F9E  2FFF               	goto	i1l473
  6447     0F9F                     i1l8145:
  6448                           
  6449                           ;estados.c: 228:                     estado_executa_muda(EST_LIMPAR);
  6450     0F9F  3006               	movlw	6
  6451     0FA0  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6452                           
  6453                           ;estados.c: 229:                     break;
  6454     0FA5  2FFF               	goto	i1l473
  6455     0FA6                     i1l8147:
  6456                           
  6457                           ;estados.c: 232:                     gl_item_menu_config_amostra = eeprom_ler_word(0x02)
      +                          ;
  6458     0FA6  3002               	movlw	2
  6459     0FA7  160A  118A  23BE  120A  158A  	fcall	_eeprom_ler_word
  6460     0FAC  0872               	movf	?_eeprom_ler_word+1,w
  6461     0FAD  1683               	bsf	3,5	;RP0=1, select bank1
  6462     0FAE  1303               	bcf	3,6	;RP1=0, select bank1
  6463     0FAF  00CC               	movwf	(_gl_item_menu_config_amostra+1)^(0+128)
  6464     0FB0  0871               	movf	?_eeprom_ler_word,w
  6465     0FB1  00CB               	movwf	_gl_item_menu_config_amostra^(0+128)
  6466     0FB2                     i1l8149:
  6467                           
  6468                           ;estados.c: 233:                     estado_executa_muda(EST_MENU_CONF_TEMPO_AMOSTRA);
  6469     0FB2  3007               	movlw	7
  6470     0FB3  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6471                           
  6472                           ;estados.c: 234:                     break;
  6473     0FB8  2FFF               	goto	i1l473
  6474     0FB9                     i1l8151:
  6475                           
  6476                           ;estados.c: 237:                     gl_item_menu_config_sensores = eeprom_read(0x00);
  6477     0FB9  3000               	movlw	0
  6478     0FBA  160A  118A  22F8  120A  158A  	fcall	i1_eeprom_read
  6479     0FBF  1683               	bsf	3,5	;RP0=1, select bank1
  6480     0FC0  1303               	bcf	3,6	;RP1=0, select bank1
  6481     0FC1  00CF               	movwf	_gl_item_menu_config_sensores^(0+128)
  6482     0FC2                     i1l8153:
  6483                           
  6484                           ;estados.c: 238:                     estado_executa_muda(EST_MENU_CONF_QUANT_SENSORES);
  6485     0FC2  3008               	movlw	8
  6486     0FC3  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6487                           
  6488                           ;estados.c: 239:                     break;
  6489     0FC8  2FFF               	goto	i1l473
  6490     0FC9                     i1l8157:
  6491     0FC9  1683               	bsf	3,5	;RP0=1, select bank1
  6492     0FCA  1303               	bcf	3,6	;RP1=0, select bank1
  6493     0FCB  0851               	movf	_gl_item_menu_principal^(0+128),w
  6494     0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  6495     0FCD  1303               	bcf	3,6	;RP1=0, select bank0
  6496     0FCE  00E2               	movwf	??_estado_menu_principal
  6497     0FCF  01E3               	clrf	??_estado_menu_principal+1
  6498                           
  6499                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6500                           ; Switch size 1, requested type "simple"
  6501                           ; Number of cases is 1, Range of values is 0 to 0
  6502                           ; switch strategies available:
  6503                           ; Name         Instructions Cycles
  6504                           ; simple_byte            4     3 (average)
  6505                           ; direct_byte           11     8 (fixed)
  6506                           ; jumptable            260     6 (fixed)
  6507                           ;	Chosen strategy is simple_byte
  6508     0FD0  0863               	movf	??_estado_menu_principal+1,w
  6509     0FD1  3A00               	xorlw	0	; case 0
  6510     0FD2  1903               	skipnz
  6511     0FD3  2FD5               	goto	i1l8887
  6512     0FD4  2FFF               	goto	i1l473
  6513     0FD5                     i1l8887:
  6514                           
  6515                           ; Switch size 1, requested type "simple"
  6516                           ; Number of cases is 7, Range of values is 0 to 6
  6517                           ; switch strategies available:
  6518                           ; Name         Instructions Cycles
  6519                           ; simple_byte           22    12 (average)
  6520                           ; direct_byte           29     8 (fixed)
  6521                           ; jumptable            260     6 (fixed)
  6522                           ;	Chosen strategy is simple_byte
  6523     0FD5  0862               	movf	??_estado_menu_principal,w
  6524     0FD6  3A00               	xorlw	0	; case 0
  6525     0FD7  1903               	skipnz
  6526     0FD8  2E81               	goto	i1l8083
  6527     0FD9  3A01               	xorlw	1	; case 1
  6528     0FDA  1903               	skipnz
  6529     0FDB  2ED2               	goto	i1l8099
  6530     0FDC  3A03               	xorlw	3	; case 2
  6531     0FDD  1903               	skipnz
  6532     0FDE  2F91               	goto	i1l8141
  6533     0FDF  3A01               	xorlw	1	; case 3
  6534     0FE0  1903               	skipnz
  6535     0FE1  2F98               	goto	i1l8143
  6536     0FE2  3A07               	xorlw	7	; case 4
  6537     0FE3  1903               	skipnz
  6538     0FE4  2F9F               	goto	i1l8145
  6539     0FE5  3A01               	xorlw	1	; case 5
  6540     0FE6  1903               	skipnz
  6541     0FE7  2FA6               	goto	i1l8147
  6542     0FE8  3A03               	xorlw	3	; case 6
  6543     0FE9  1903               	skipnz
  6544     0FEA  2FB9               	goto	i1l8151
  6545     0FEB  2FFF               	goto	i1l473
  6546     0FEC                     i1l8161:
  6547     0FEC  0864               	movf	estado_menu_principal@opt,w
  6548     0FED  00E2               	movwf	??_estado_menu_principal
  6549     0FEE  01E3               	clrf	??_estado_menu_principal+1
  6550                           
  6551                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6552                           ; Switch size 1, requested type "simple"
  6553                           ; Number of cases is 1, Range of values is 0 to 0
  6554                           ; switch strategies available:
  6555                           ; Name         Instructions Cycles
  6556                           ; simple_byte            4     3 (average)
  6557                           ; direct_byte           11     8 (fixed)
  6558                           ; jumptable            260     6 (fixed)
  6559                           ;	Chosen strategy is simple_byte
  6560     0FEF  0863               	movf	??_estado_menu_principal+1,w
  6561     0FF0  3A00               	xorlw	0	; case 0
  6562     0FF1  1903               	skipnz
  6563     0FF2  2FF4               	goto	i1l8889
  6564     0FF3  2FFF               	goto	i1l473
  6565     0FF4                     i1l8889:
  6566                           
  6567                           ; Switch size 1, requested type "simple"
  6568                           ; Number of cases is 3, Range of values is 1 to 4
  6569                           ; switch strategies available:
  6570                           ; Name         Instructions Cycles
  6571                           ; simple_byte           10     6 (average)
  6572                           ; direct_byte           23    11 (fixed)
  6573                           ; jumptable            263     9 (fixed)
  6574                           ;	Chosen strategy is simple_byte
  6575     0FF4  0862               	movf	??_estado_menu_principal,w
  6576     0FF5  3A01               	xorlw	1	; case 1
  6577     0FF6  1903               	skipnz
  6578     0FF7  2FC9               	goto	i1l8157
  6579     0FF8  3A02               	xorlw	2	; case 3
  6580     0FF9  1903               	skipnz
  6581     0FFA  2E5E               	goto	i1l8071
  6582     0FFB  3A07               	xorlw	7	; case 4
  6583     0FFC  1903               	skipnz
  6584     0FFD  2E6E               	goto	i1l8077
  6585     0FFE  2FFF               	goto	i1l473
  6586     0FFF                     i1l473:
  6587     0FFF  0008               	return
  6588     1000                     __end_of_estado_menu_principal:
  6589                           
  6590                           	psect	text23
  6591     1292                     __ptext23:	
  6592 ;; *************** function _estado_menu_limpar *****************
  6593 ;; Defined at:
  6594 ;;		line 106 in file "estados.c"
  6595 ;; Parameters:    Size  Location     Type
  6596 ;;  opt             1    wreg     unsigned char 
  6597 ;; Auto vars:     Size  Location     Type
  6598 ;;  opt             1   12[COMMON] unsigned char 
  6599 ;; Return value:  Size  Location     Type
  6600 ;;                  1    wreg      void 
  6601 ;; Registers used:
  6602 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6603 ;; Tracked objects:
  6604 ;;		On entry : 0/0
  6605 ;;		On exit  : 0/0
  6606 ;;		Unchanged: 0/0
  6607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6608 ;;      Params:         0       0       0       0       0
  6609 ;;      Locals:         1       0       0       0       0
  6610 ;;      Temps:          0       0       0       0       0
  6611 ;;      Totals:         1       0       0       0       0
  6612 ;;Total ram usage:        1 bytes
  6613 ;; Hardware stack levels used: 1
  6614 ;; Hardware stack levels required when called: 4
  6615 ;; This function calls:
  6616 ;;		_estado_executa_muda
  6617 ;; This function is called by:
  6618 ;;		_estado_maquina
  6619 ;; This function uses a non-reentrant model
  6620 ;;
  6621                           
  6622     1292                     _estado_menu_limpar:	
  6623                           ;psect for function _estado_menu_limpar
  6624                           
  6625                           
  6626                           ;incstack = 0
  6627 ;; hardware stack exceeded
  6628                           ; Regs used in _estado_menu_limpar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6629                           ;estado_menu_limpar@opt stored from wreg
  6630     1292  00FC               	movwf	estado_menu_limpar@opt
  6631     1293                     i1l8211:
  6632                           
  6633                           ;estados.c: 107:     if (opt == 2) {
  6634     1293  3002               	movlw	2
  6635     1294  067C               	xorwf	estado_menu_limpar@opt,w
  6636     1295  1D03               	btfss	3,2
  6637     1296  2A98               	goto	u806_21
  6638     1297  2A99               	goto	u806_20
  6639     1298                     u806_21:
  6640     1298  2A9F               	goto	i1l440
  6641     1299                     u806_20:
  6642     1299                     i1l8213:
  6643                           
  6644                           ;estados.c: 108:         estado_executa_muda(EST_MENU_PRINCIPAL);
  6645     1299  3001               	movlw	1
  6646     129A  120A  118A  204B  160A  118A  	fcall	_estado_executa_muda
  6647     129F                     i1l440:
  6648     129F  0008               	return
  6649     12A0                     __end_of_estado_menu_limpar:
  6650                           
  6651                           	psect	text24
  6652     0902                     __ptext24:	
  6653 ;; *************** function _estado_menu_conf_tempo_amostra *****************
  6654 ;; Defined at:
  6655 ;;		line 290 in file "estados.c"
  6656 ;; Parameters:    Size  Location     Type
  6657 ;;  opt             1    wreg     unsigned char 
  6658 ;; Auto vars:     Size  Location     Type
  6659 ;;  opt             1   66[BANK0 ] unsigned char 
  6660 ;; Return value:  Size  Location     Type
  6661 ;;                  1    wreg      void 
  6662 ;; Registers used:
  6663 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6664 ;; Tracked objects:
  6665 ;;		On entry : 0/0
  6666 ;;		On exit  : 0/0
  6667 ;;		Unchanged: 0/0
  6668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6669 ;;      Params:         0       0       0       0       0
  6670 ;;      Locals:         0       1       0       0       0
  6671 ;;      Temps:          2       0       0       0       0
  6672 ;;      Totals:         2       1       0       0       0
  6673 ;;Total ram usage:        3 bytes
  6674 ;; Hardware stack levels used: 1
  6675 ;; Hardware stack levels required when called: 4
  6676 ;; This function calls:
  6677 ;;		_estado_executa_muda
  6678 ;;		i1_eeprom_gravar_word
  6679 ;; This function is called by:
  6680 ;;		_estado_maquina
  6681 ;; This function uses a non-reentrant model
  6682 ;;
  6683                           
  6684     0902                     _estado_menu_conf_tempo_amostra:	
  6685                           ;psect for function _estado_menu_conf_tempo_amostra
  6686                           
  6687                           
  6688                           ;incstack = 0
  6689 ;; hardware stack exceeded
  6690                           ; Regs used in _estado_menu_conf_tempo_amostra: [wreg-fsr0h+status,2+status,0+btemp+1+pc
      +                          lath+cstack]
  6691                           ;estado_menu_conf_tempo_amostra@opt stored from wreg
  6692     0902  1283               	bcf	3,5	;RP0=0, select bank0
  6693     0903  1303               	bcf	3,6	;RP1=0, select bank0
  6694     0904  00E2               	movwf	estado_menu_conf_tempo_amostra@opt
  6695     0905                     i1l8215:
  6696                           
  6697                           ;estados.c: 291:     switch (opt) {
  6698     0905  294D               	goto	i1l8237
  6699     0906                     i1l8217:
  6700                           
  6701                           ;estados.c: 293:             if (gl_item_menu_config_amostra >= 1) {
  6702     0906  1683               	bsf	3,5	;RP0=1, select bank1
  6703     0907  1303               	bcf	3,6	;RP1=0, select bank1
  6704     0908  084B               	movf	_gl_item_menu_config_amostra^(0+128),w
  6705     0909  044C               	iorwf	(_gl_item_menu_config_amostra+1)^(0+128),w
  6706     090A  1903               	btfsc	3,2
  6707     090B  290D               	goto	u807_21
  6708     090C  290E               	goto	u807_20
  6709     090D                     u807_21:
  6710     090D  2963               	goto	i1l498
  6711     090E                     u807_20:
  6712     090E                     i1l8219:
  6713                           
  6714                           ;estados.c: 294:                 gl_item_menu_config_amostra--;
  6715     090E  3001               	movlw	1
  6716     090F  02CB               	subwf	_gl_item_menu_config_amostra^(0+128),f
  6717     0910  3000               	movlw	0
  6718     0911  1C03               	skipc
  6719     0912  03CC               	decf	(_gl_item_menu_config_amostra+1)^(0+128),f
  6720     0913  02CC               	subwf	(_gl_item_menu_config_amostra+1)^(0+128),f
  6721     0914                     i1l8221:
  6722                           
  6723                           ;estados.c: 295:                 estado_executa_muda(EST_MENU_CONF_TEMPO_AMOSTRA);
  6724     0914  3007               	movlw	7
  6725     0915  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6726     091A  2963               	goto	i1l498
  6727     091B                     i1l8223:
  6728                           
  6729                           ;estados.c: 300:             if (gl_item_menu_config_amostra < ((sizeof(menu_tempo_amost
      +                          ra) / sizeof(menu_amostra)) - 1)) {
  6730     091B  3000               	movlw	0
  6731     091C  1683               	bsf	3,5	;RP0=1, select bank1
  6732     091D  1303               	bcf	3,6	;RP1=0, select bank1
  6733     091E  024C               	subwf	(_gl_item_menu_config_amostra+1)^(0+128),w
  6734     091F  3006               	movlw	6
  6735     0920  1903               	skipnz
  6736     0921  024B               	subwf	_gl_item_menu_config_amostra^(0+128),w
  6737     0922  1803               	skipnc
  6738     0923  2925               	goto	u808_21
  6739     0924  2926               	goto	u808_20
  6740     0925                     u808_21:
  6741     0925  2963               	goto	i1l498
  6742     0926                     u808_20:
  6743     0926                     i1l8225:
  6744                           
  6745                           ;estados.c: 301:                 gl_item_menu_config_amostra++;
  6746     0926  3001               	movlw	1
  6747     0927  07CB               	addwf	_gl_item_menu_config_amostra^(0+128),f
  6748     0928  1803               	skipnc
  6749     0929  0ACC               	incf	(_gl_item_menu_config_amostra+1)^(0+128),f
  6750     092A  3000               	movlw	0
  6751     092B  07CC               	addwf	(_gl_item_menu_config_amostra+1)^(0+128),f
  6752     092C                     i1l8227:
  6753                           
  6754                           ;estados.c: 302:                 estado_executa_muda(EST_MENU_CONF_TEMPO_AMOSTRA);
  6755     092C  3007               	movlw	7
  6756     092D  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6757     0932  2963               	goto	i1l498
  6758     0933                     i1l8229:
  6759                           
  6760                           ;estados.c: 306:             estado_executa_muda(EST_MENU_PRINCIPAL);
  6761     0933  3001               	movlw	1
  6762     0934  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6763                           
  6764                           ;estados.c: 307:             break;
  6765     0939  2963               	goto	i1l498
  6766     093A                     i1l8231:
  6767                           
  6768                           ;estados.c: 309:             eeprom_gravar_word(0x02, gl_item_menu_config_amostra);
  6769     093A  1683               	bsf	3,5	;RP0=1, select bank1
  6770     093B  1303               	bcf	3,6	;RP1=0, select bank1
  6771     093C  084C               	movf	(_gl_item_menu_config_amostra+1)^(0+128),w
  6772     093D  00F3               	movwf	i1eeprom_gravar_word@dado+1
  6773     093E  084B               	movf	_gl_item_menu_config_amostra^(0+128),w
  6774     093F  00F2               	movwf	i1eeprom_gravar_word@dado
  6775     0940  3002               	movlw	2
  6776     0941  160A  118A  22BD  120A  158A  	fcall	i1_eeprom_gravar_word
  6777     0946                     i1l8233:
  6778                           
  6779                           ;estados.c: 310:             estado_executa_muda(EST_MENU_PRINCIPAL);
  6780     0946  3001               	movlw	1
  6781     0947  120A  118A  204B  120A  158A  	fcall	_estado_executa_muda
  6782                           
  6783                           ;estados.c: 311:             break;
  6784     094C  2963               	goto	i1l498
  6785     094D                     i1l8237:
  6786     094D  0862               	movf	estado_menu_conf_tempo_amostra@opt,w
  6787     094E  00FC               	movwf	??_estado_menu_conf_tempo_amostra
  6788     094F  01FD               	clrf	??_estado_menu_conf_tempo_amostra+1
  6789                           
  6790                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6791                           ; Switch size 1, requested type "simple"
  6792                           ; Number of cases is 1, Range of values is 0 to 0
  6793                           ; switch strategies available:
  6794                           ; Name         Instructions Cycles
  6795                           ; simple_byte            4     3 (average)
  6796                           ; direct_byte           11     8 (fixed)
  6797                           ; jumptable            260     6 (fixed)
  6798                           ;	Chosen strategy is simple_byte
  6799     0950  087D               	movf	??_estado_menu_conf_tempo_amostra+1,w
  6800     0951  3A00               	xorlw	0	; case 0
  6801     0952  1903               	skipnz
  6802     0953  2955               	goto	i1l8891
  6803     0954  2963               	goto	i1l498
  6804     0955                     i1l8891:
  6805                           
  6806                           ; Switch size 1, requested type "simple"
  6807                           ; Number of cases is 4, Range of values is 1 to 4
  6808                           ; switch strategies available:
  6809                           ; Name         Instructions Cycles
  6810                           ; simple_byte           13     7 (average)
  6811                           ; direct_byte           23    11 (fixed)
  6812                           ; jumptable            263     9 (fixed)
  6813                           ;	Chosen strategy is simple_byte
  6814     0955  087C               	movf	??_estado_menu_conf_tempo_amostra,w
  6815     0956  3A01               	xorlw	1	; case 1
  6816     0957  1903               	skipnz
  6817     0958  293A               	goto	i1l8231
  6818     0959  3A03               	xorlw	3	; case 2
  6819     095A  1903               	skipnz
  6820     095B  2933               	goto	i1l8229
  6821     095C  3A01               	xorlw	1	; case 3
  6822     095D  1903               	skipnz
  6823     095E  2906               	goto	i1l8217
  6824     095F  3A07               	xorlw	7	; case 4
  6825     0960  1903               	skipnz
  6826     0961  291B               	goto	i1l8223
  6827     0962  2963               	goto	i1l498
  6828     0963                     i1l498:
  6829     0963  0008               	return
  6830     0964                     __end_of_estado_menu_conf_tempo_amostra:
  6831                           
  6832                           	psect	text25
  6833     1751                     __ptext25:	
  6834 ;; *************** function _estado_menu_conf_quant_sensores *****************
  6835 ;; Defined at:
  6836 ;;		line 329 in file "estados.c"
  6837 ;; Parameters:    Size  Location     Type
  6838 ;;  opt             1    wreg     unsigned char 
  6839 ;; Auto vars:     Size  Location     Type
  6840 ;;  opt             1   66[BANK0 ] unsigned char 
  6841 ;; Return value:  Size  Location     Type
  6842 ;;                  1    wreg      void 
  6843 ;; Registers used:
  6844 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6845 ;; Tracked objects:
  6846 ;;		On entry : 0/0
  6847 ;;		On exit  : 0/0
  6848 ;;		Unchanged: 0/0
  6849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6850 ;;      Params:         0       0       0       0       0
  6851 ;;      Locals:         0       1       0       0       0
  6852 ;;      Temps:          2       0       0       0       0
  6853 ;;      Totals:         2       1       0       0       0
  6854 ;;Total ram usage:        3 bytes
  6855 ;; Hardware stack levels used: 1
  6856 ;; Hardware stack levels required when called: 4
  6857 ;; This function calls:
  6858 ;;		_estado_executa_muda
  6859 ;;		i1_eeprom_write
  6860 ;; This function is called by:
  6861 ;;		_estado_maquina
  6862 ;; This function uses a non-reentrant model
  6863 ;;
  6864                           
  6865     1751                     _estado_menu_conf_quant_sensores:	
  6866                           ;psect for function _estado_menu_conf_quant_sensores
  6867                           
  6868                           
  6869                           ;incstack = 0
  6870 ;; hardware stack exceeded
  6871                           ; Regs used in _estado_menu_conf_quant_sensores: [wreg-fsr0h+status,2+status,0+btemp+1+p
      +                          clath+cstack]
  6872                           ;estado_menu_conf_quant_sensores@opt stored from wreg
  6873     1751  1283               	bcf	3,5	;RP0=0, select bank0
  6874     1752  1303               	bcf	3,6	;RP1=0, select bank0
  6875     1753  00E2               	movwf	estado_menu_conf_quant_sensores@opt
  6876     1754                     i1l8245:
  6877                           
  6878                           ;estados.c: 330:     switch (opt) {
  6879     1754  2F90               	goto	i1l8267
  6880     1755                     i1l8247:
  6881                           
  6882                           ;estados.c: 333:             if (gl_item_menu_config_sensores >= 1) {
  6883     1755  1683               	bsf	3,5	;RP0=1, select bank1
  6884     1756  1303               	bcf	3,6	;RP1=0, select bank1
  6885     1757  084F               	movf	_gl_item_menu_config_sensores^(0+128),w
  6886     1758  1903               	btfsc	3,2
  6887     1759  2F5B               	goto	u809_21
  6888     175A  2F5C               	goto	u809_20
  6889     175B                     u809_21:
  6890     175B  2FA6               	goto	i1l513
  6891     175C                     u809_20:
  6892     175C                     i1l8249:
  6893                           
  6894                           ;estados.c: 334:                 gl_item_menu_config_sensores--;
  6895     175C  3001               	movlw	1
  6896     175D  02CF               	subwf	_gl_item_menu_config_sensores^(0+128),f
  6897     175E                     i1l8251:
  6898                           
  6899                           ;estados.c: 335:                 estado_executa_muda(EST_MENU_CONF_QUANT_SENSORES);
  6900     175E  3008               	movlw	8
  6901     175F  120A  118A  204B  160A  118A  	fcall	_estado_executa_muda
  6902     1764  2FA6               	goto	i1l513
  6903     1765                     i1l8253:
  6904                           
  6905                           ;estados.c: 340:             if (gl_item_menu_config_sensores < 4 - 1) {
  6906     1765  3003               	movlw	3
  6907     1766  1683               	bsf	3,5	;RP0=1, select bank1
  6908     1767  1303               	bcf	3,6	;RP1=0, select bank1
  6909     1768  024F               	subwf	_gl_item_menu_config_sensores^(0+128),w
  6910     1769  1803               	skipnc
  6911     176A  2F6C               	goto	u810_21
  6912     176B  2F6D               	goto	u810_20
  6913     176C                     u810_21:
  6914     176C  2FA6               	goto	i1l513
  6915     176D                     u810_20:
  6916     176D                     i1l8255:
  6917                           
  6918                           ;estados.c: 341:                 gl_item_menu_config_sensores++;
  6919     176D  3001               	movlw	1
  6920     176E  00FF               	movwf	btemp+1
  6921     176F  087F               	movf	btemp+1,w
  6922     1770  07CF               	addwf	_gl_item_menu_config_sensores^(0+128),f
  6923     1771                     i1l8257:
  6924                           
  6925                           ;estados.c: 342:                 estado_executa_muda(EST_MENU_CONF_QUANT_SENSORES);
  6926     1771  3008               	movlw	8
  6927     1772  120A  118A  204B  160A  118A  	fcall	_estado_executa_muda
  6928     1777  2FA6               	goto	i1l513
  6929     1778                     i1l8259:
  6930                           
  6931                           ;estados.c: 346:             estado_executa_muda(EST_MENU_PRINCIPAL);
  6932     1778  3001               	movlw	1
  6933     1779  120A  118A  204B  160A  118A  	fcall	_estado_executa_muda
  6934                           
  6935                           ;estados.c: 347:             break;
  6936     177E  2FA6               	goto	i1l513
  6937     177F                     i1l8261:
  6938                           
  6939                           ;estados.c: 349:             eeprom_write(0x00, gl_item_menu_config_sensores);
  6940     177F  1683               	bsf	3,5	;RP0=1, select bank1
  6941     1780  1303               	bcf	3,6	;RP1=0, select bank1
  6942     1781  084F               	movf	_gl_item_menu_config_sensores^(0+128),w
  6943     1782  00F0               	movwf	i1eeprom_write@value
  6944     1783  3000               	movlw	0
  6945     1784  160A  118A  2460  160A  118A  	fcall	i1_eeprom_write
  6946     1789                     i1l8263:
  6947                           
  6948                           ;estados.c: 350:             estado_executa_muda(EST_MENU_PRINCIPAL);
  6949     1789  3001               	movlw	1
  6950     178A  120A  118A  204B  160A  118A  	fcall	_estado_executa_muda
  6951                           
  6952                           ;estados.c: 351:             break;
  6953     178F  2FA6               	goto	i1l513
  6954     1790                     i1l8267:
  6955     1790  0862               	movf	estado_menu_conf_quant_sensores@opt,w
  6956     1791  00FC               	movwf	??_estado_menu_conf_quant_sensores
  6957     1792  01FD               	clrf	??_estado_menu_conf_quant_sensores+1
  6958                           
  6959                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6960                           ; Switch size 1, requested type "simple"
  6961                           ; Number of cases is 1, Range of values is 0 to 0
  6962                           ; switch strategies available:
  6963                           ; Name         Instructions Cycles
  6964                           ; simple_byte            4     3 (average)
  6965                           ; direct_byte           11     8 (fixed)
  6966                           ; jumptable            260     6 (fixed)
  6967                           ;	Chosen strategy is simple_byte
  6968     1793  087D               	movf	??_estado_menu_conf_quant_sensores+1,w
  6969     1794  3A00               	xorlw	0	; case 0
  6970     1795  1903               	skipnz
  6971     1796  2F98               	goto	i1l8893
  6972     1797  2FA6               	goto	i1l513
  6973     1798                     i1l8893:
  6974                           
  6975                           ; Switch size 1, requested type "simple"
  6976                           ; Number of cases is 4, Range of values is 1 to 4
  6977                           ; switch strategies available:
  6978                           ; Name         Instructions Cycles
  6979                           ; simple_byte           13     7 (average)
  6980                           ; direct_byte           23    11 (fixed)
  6981                           ; jumptable            263     9 (fixed)
  6982                           ;	Chosen strategy is simple_byte
  6983     1798  087C               	movf	??_estado_menu_conf_quant_sensores,w
  6984     1799  3A01               	xorlw	1	; case 1
  6985     179A  1903               	skipnz
  6986     179B  2F7F               	goto	i1l8261
  6987     179C  3A03               	xorlw	3	; case 2
  6988     179D  1903               	skipnz
  6989     179E  2F78               	goto	i1l8259
  6990     179F  3A01               	xorlw	1	; case 3
  6991     17A0  1903               	skipnz
  6992     17A1  2F55               	goto	i1l8247
  6993     17A2  3A07               	xorlw	7	; case 4
  6994     17A3  1903               	skipnz
  6995     17A4  2F65               	goto	i1l8253
  6996     17A5  2FA6               	goto	i1l513
  6997     17A6                     i1l513:
  6998     17A6  0008               	return
  6999     17A7                     __end_of_estado_menu_conf_quant_sensores:
  7000                           
  7001                           	psect	text26
  7002     1284                     __ptext26:	
  7003 ;; *************** function _estado_max_min *****************
  7004 ;; Defined at:
  7005 ;;		line 280 in file "estados.c"
  7006 ;; Parameters:    Size  Location     Type
  7007 ;;  opt             1    wreg     unsigned char 
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;  opt             1   12[COMMON] unsigned char 
  7010 ;; Return value:  Size  Location     Type
  7011 ;;                  1    wreg      void 
  7012 ;; Registers used:
  7013 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7014 ;; Tracked objects:
  7015 ;;		On entry : 0/0
  7016 ;;		On exit  : 0/0
  7017 ;;		Unchanged: 0/0
  7018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7019 ;;      Params:         0       0       0       0       0
  7020 ;;      Locals:         1       0       0       0       0
  7021 ;;      Temps:          0       0       0       0       0
  7022 ;;      Totals:         1       0       0       0       0
  7023 ;;Total ram usage:        1 bytes
  7024 ;; Hardware stack levels used: 1
  7025 ;; Hardware stack levels required when called: 4
  7026 ;; This function calls:
  7027 ;;		_estado_executa_muda
  7028 ;; This function is called by:
  7029 ;;		_estado_maquina
  7030 ;; This function uses a non-reentrant model
  7031 ;;
  7032                           
  7033     1284                     _estado_max_min:	
  7034                           ;psect for function _estado_max_min
  7035                           
  7036                           
  7037                           ;incstack = 0
  7038 ;; hardware stack exceeded
  7039                           ; Regs used in _estado_max_min: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7040                           ;estado_max_min@opt stored from wreg
  7041     1284  00FC               	movwf	estado_max_min@opt
  7042     1285                     i1l8207:
  7043                           
  7044                           ;estados.c: 281:     if (opt == 2) {
  7045     1285  3002               	movlw	2
  7046     1286  067C               	xorwf	estado_max_min@opt,w
  7047     1287  1D03               	btfss	3,2
  7048     1288  2A8A               	goto	u805_21
  7049     1289  2A8B               	goto	u805_20
  7050     128A                     u805_21:
  7051     128A  2A91               	goto	i1l487
  7052     128B                     u805_20:
  7053     128B                     i1l8209:
  7054                           
  7055                           ;estados.c: 282:         estado_executa_muda(EST_MENU_PRINCIPAL);
  7056     128B  3001               	movlw	1
  7057     128C  120A  118A  204B  160A  118A  	fcall	_estado_executa_muda
  7058     1291                     i1l487:
  7059     1291  0008               	return
  7060     1292                     __end_of_estado_max_min:
  7061                           
  7062                           	psect	text27
  7063     1268                     __ptext27:	
  7064 ;; *************** function _estado_inicial *****************
  7065 ;; Defined at:
  7066 ;;		line 98 in file "estados.c"
  7067 ;; Parameters:    Size  Location     Type
  7068 ;;  opt             1    wreg     unsigned char 
  7069 ;; Auto vars:     Size  Location     Type
  7070 ;;  opt             1    0[COMMON] unsigned char 
  7071 ;; Return value:  Size  Location     Type
  7072 ;;                  1    wreg      void 
  7073 ;; Registers used:
  7074 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7075 ;; Tracked objects:
  7076 ;;		On entry : 0/0
  7077 ;;		On exit  : 0/0
  7078 ;;		Unchanged: 0/0
  7079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7080 ;;      Params:         0       0       0       0       0
  7081 ;;      Locals:         0       0       0       0       0
  7082 ;;      Temps:          0       0       0       0       0
  7083 ;;      Totals:         0       0       0       0       0
  7084 ;;Total ram usage:        0 bytes
  7085 ;; Hardware stack levels used: 1
  7086 ;; Hardware stack levels required when called: 4
  7087 ;; This function calls:
  7088 ;;		_estado_executa_muda
  7089 ;; This function is called by:
  7090 ;;		_estado_maquina
  7091 ;; This function uses a non-reentrant model
  7092 ;;
  7093                           
  7094     1268                     _estado_inicial:	
  7095                           ;psect for function _estado_inicial
  7096                           
  7097     1268                     i1l8067:	
  7098                           ;incstack = 0
  7099 ;; hardware stack exceeded
  7100                           ; Regs used in _estado_inicial: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7101                           
  7102                           
  7103                           ;estados.c: 99:     estado_executa_muda(EST_MENU_PRINCIPAL);
  7104     1268  3001               	movlw	1
  7105     1269  120A  118A  204B  160A  118A  	fcall	_estado_executa_muda
  7106     126E                     i1l436:
  7107     126E  0008               	return
  7108     126F                     __end_of_estado_inicial:
  7109                           
  7110                           	psect	text28
  7111     12AE                     __ptext28:	
  7112 ;; *************** function _estado_captura_mostra *****************
  7113 ;; Defined at:
  7114 ;;		line 116 in file "estados.c"
  7115 ;; Parameters:    Size  Location     Type
  7116 ;;  opt             1    wreg     unsigned char 
  7117 ;; Auto vars:     Size  Location     Type
  7118 ;;  opt             1   12[COMMON] unsigned char 
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  1    wreg      void 
  7121 ;; Registers used:
  7122 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 0/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7128 ;;      Params:         0       0       0       0       0
  7129 ;;      Locals:         1       0       0       0       0
  7130 ;;      Temps:          0       0       0       0       0
  7131 ;;      Totals:         1       0       0       0       0
  7132 ;;Total ram usage:        1 bytes
  7133 ;; Hardware stack levels used: 1
  7134 ;; Hardware stack levels required when called: 4
  7135 ;; This function calls:
  7136 ;;		_estado_executa_muda
  7137 ;; This function is called by:
  7138 ;;		_estado_maquina
  7139 ;; This function uses a non-reentrant model
  7140 ;;
  7141                           
  7142     12AE                     _estado_captura_mostra:	
  7143                           ;psect for function _estado_captura_mostra
  7144                           
  7145                           
  7146                           ;incstack = 0
  7147 ;; hardware stack exceeded
  7148                           ; Regs used in _estado_captura_mostra: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  7149                           ;estado_captura_mostra@opt stored from wreg
  7150     12AE  00FC               	movwf	estado_captura_mostra@opt
  7151     12AF                     i1l8175:
  7152                           
  7153                           ;estados.c: 117:     if (opt == 2) {
  7154     12AF  3002               	movlw	2
  7155     12B0  067C               	xorwf	estado_captura_mostra@opt,w
  7156     12B1  1D03               	btfss	3,2
  7157     12B2  2AB4               	goto	u802_21
  7158     12B3  2AB5               	goto	u802_20
  7159     12B4                     u802_21:
  7160     12B4  2ABC               	goto	i1l444
  7161     12B5                     u802_20:
  7162     12B5                     i1l8177:
  7163                           
  7164                           ;estados.c: 118:         INTCONbits.T0IE = 0;
  7165     12B5  128B               	bcf	11,5	;volatile
  7166     12B6                     i1l8179:
  7167                           
  7168                           ;estados.c: 119:         estado_executa_muda(EST_MENU_PRINCIPAL);
  7169     12B6  3001               	movlw	1
  7170     12B7  120A  118A  204B  160A  118A  	fcall	_estado_executa_muda
  7171     12BC                     i1l444:
  7172     12BC  0008               	return
  7173     12BD                     __end_of_estado_captura_mostra:
  7174                           
  7175                           	psect	text29
  7176     004B                     __ptext29:	
  7177 ;; *************** function _estado_executa_muda *****************
  7178 ;; Defined at:
  7179 ;;		line 360 in file "estados.c"
  7180 ;; Parameters:    Size  Location     Type
  7181 ;;  novo_estado     1    wreg     enum E1327
  7182 ;; Auto vars:     Size  Location     Type
  7183 ;;  novo_estado     1   51[BANK0 ] enum E1327
  7184 ;;  i               1   65[BANK0 ] unsigned char 
  7185 ;;  i               1   60[BANK0 ] unsigned char 
  7186 ;;  tmp            17   32[BANK0 ] unsigned char [17]
  7187 ;;  menor           2   58[BANK0 ] unsigned int 
  7188 ;;  maior           2   56[BANK0 ] unsigned int 
  7189 ;;  temp_int        2   52[BANK0 ] unsigned int 
  7190 ;;  endereco        1   55[BANK0 ] unsigned char 
  7191 ;;  qtd_sens        1   54[BANK0 ] unsigned char 
  7192 ;;  posicao         1   50[BANK0 ] unsigned char 
  7193 ;;  qtd_val         1   49[BANK0 ] unsigned char 
  7194 ;; Return value:  Size  Location     Type
  7195 ;;                  1    wreg      void 
  7196 ;; Registers used:
  7197 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7198 ;; Tracked objects:
  7199 ;;		On entry : 0/0
  7200 ;;		On exit  : 0/0
  7201 ;;		Unchanged: 0/0
  7202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7203 ;;      Params:         0       0       0       0       0
  7204 ;;      Locals:         0      34       0       0       0
  7205 ;;      Temps:          0       4       0       0       0
  7206 ;;      Totals:         0      38       0       0       0
  7207 ;;Total ram usage:       38 bytes
  7208 ;; Hardware stack levels used: 1
  7209 ;; Hardware stack levels required when called: 3
  7210 ;; This function calls:
  7211 ;;		___bmul
  7212 ;;		_eeprom_ler_word
  7213 ;;		_lcd_clear
  7214 ;;		_sprintf
  7215 ;;		i1___lwdiv
  7216 ;;		i1___lwmod
  7217 ;;		i1_eeprom_gravar_word
  7218 ;;		i1_eeprom_read
  7219 ;;		i1_eeprom_write
  7220 ;;		i1_lcd_goto
  7221 ;;		i1_lcd_puts
  7222 ;; This function is called by:
  7223 ;;		_estado_inicial
  7224 ;;		_estado_menu_limpar
  7225 ;;		_estado_captura_mostra
  7226 ;;		_estado_menu_principal
  7227 ;;		_estado_ver_todos
  7228 ;;		_estado_max_min
  7229 ;;		_estado_menu_conf_tempo_amostra
  7230 ;;		_estado_menu_conf_quant_sensores
  7231 ;;		_estado_enviar_dados
  7232 ;; This function uses a non-reentrant model
  7233 ;;
  7234                           
  7235     004B                     _estado_executa_muda:	
  7236                           ;psect for function _estado_executa_muda
  7237                           
  7238                           
  7239                           ;incstack = 0
  7240 ;; hardware stack exceeded
  7241                           ; Regs used in _estado_executa_muda: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  7242                           ;estado_executa_muda@novo_estado stored from wreg
  7243     004B  1283               	bcf	3,5	;RP0=0, select bank0
  7244     004C  1303               	bcf	3,6	;RP1=0, select bank0
  7245     004D  00D3               	movwf	estado_executa_muda@novo_estado
  7246     004E                     i1l7939:
  7247                           
  7248                           ;estados.c: 362:     uint16_t maior, menor, temp_int;;estados.c: 363:     uint8_t endere
      +                          co, qtd_val, qtd_sens;;estados.c: 364:     uint8_t posicao;;estados.c: 368:     char tmp
      +                          [17] = {0};
  7249     004E  3040               	movlw	estado_executa_muda@tmp& (0+255)
  7250     004F  0084               	movwf	4
  7251     0050  3090               	movlw	low estado_executa_muda@F1404
  7252     0051  00BC               	movwf	??_estado_executa_muda
  7253     0052  0804               	movf	4,w
  7254     0053  00BD               	movwf	??_estado_executa_muda+1
  7255     0054  3011               	movlw	17
  7256     0055  00BE               	movwf	??_estado_executa_muda+2
  7257     0056                     u784_20:
  7258     0056  083C               	movf	??_estado_executa_muda,w
  7259     0057  0084               	movwf	4
  7260     0058  1783               	bsf	3,7	;select IRP bank3
  7261     0059  0800               	movf	0,w
  7262     005A  00BF               	movwf	??_estado_executa_muda+3
  7263     005B  0ABC               	incf	??_estado_executa_muda,f
  7264     005C  083D               	movf	??_estado_executa_muda+1,w
  7265     005D  0084               	movwf	4
  7266     005E  1383               	bcf	3,7	;select IRP bank0
  7267     005F  083F               	movf	??_estado_executa_muda+3,w
  7268     0060  0080               	movwf	0
  7269     0061  0ABD               	incf	??_estado_executa_muda+1,f
  7270     0062  0BBE               	decfsz	??_estado_executa_muda+2,f
  7271     0063  2856               	goto	u784_20
  7272                           
  7273                           ;estados.c: 371:     switch (novo_estado) {
  7274     0064  2AC7               	goto	i1l8031
  7275     0065                     i1l7941:
  7276                           
  7277                           ;estados.c: 373:             lcd_clear();
  7278     0065  160A  118A  230F  120A  118A  	fcall	_lcd_clear
  7279     006A                     i1l7943:
  7280                           
  7281                           ;estados.c: 374:             lcd_puts(menu_inicial[gl_item_menu_principal]);
  7282     006A  1683               	bsf	3,5	;RP0=1, select bank1
  7283     006B  1303               	bcf	3,6	;RP1=0, select bank1
  7284     006C  0851               	movf	_gl_item_menu_principal^(0+128),w
  7285     006D  1283               	bcf	3,5	;RP0=0, select bank0
  7286     006E  1303               	bcf	3,6	;RP1=0, select bank0
  7287     006F  00BC               	movwf	??_estado_executa_muda
  7288     0070  073C               	addwf	??_estado_executa_muda,w
  7289     0071  3ED3               	addlw	(low (_menu_inicial| 0))& (0+255)
  7290     0072  0084               	movwf	4
  7291     0073  1383               	bcf	3,7	;select IRP bank1
  7292     0074  0800               	movf	0,w
  7293     0075  00F3               	movwf	i1lcd_puts@str
  7294     0076  0A84               	incf	4,f
  7295     0077  0800               	movf	0,w
  7296     0078  0384               	decf	4,f
  7297     0079  00F4               	movwf	i1lcd_puts@str+1
  7298     007A  160A  118A  2706  120A  118A  	fcall	i1_lcd_puts
  7299                           
  7300                           ;estados.c: 375:             break;
  7301     007F  2AE9               	goto	i1l8033
  7302     0080                     i1l521:	
  7303                           ;estados.c: 376:         case EST_CAPTURA_E_MOSTRA:
  7304                           
  7305                           
  7306                           ;estados.c: 377:             INTCONbits.T0IE = 1;
  7307     0080  168B               	bsf	11,5	;volatile
  7308                           
  7309                           ;estados.c: 378:             break;
  7310     0081  2AE9               	goto	i1l8033
  7311     0082                     i1l522:	
  7312                           ;estados.c: 379:         case EST_CAPTURA_E_GRAVA:
  7313                           
  7314                           
  7315                           ;estados.c: 380:             INTCONbits.T0IE = 1;
  7316     0082  168B               	bsf	11,5	;volatile
  7317                           
  7318                           ;estados.c: 381:             break;
  7319     0083  2AE9               	goto	i1l8033
  7320     0084                     i1l7945:
  7321                           
  7322                           ;estados.c: 383:             lcd_clear();
  7323     0084  160A  118A  230F  120A  118A  	fcall	_lcd_clear
  7324     0089                     i1l7947:
  7325                           
  7326                           ;estados.c: 384:             qtd_val = eeprom_read(0x08);
  7327     0089  3008               	movlw	8
  7328     008A  160A  118A  22F8  120A  118A  	fcall	i1_eeprom_read
  7329     008F  1283               	bcf	3,5	;RP0=0, select bank0
  7330     0090  1303               	bcf	3,6	;RP1=0, select bank0
  7331     0091  00D1               	movwf	estado_executa_muda@qtd_val
  7332     0092                     i1l7949:
  7333                           
  7334                           ;estados.c: 385:             if (qtd_val == 0) {
  7335     0092  0851               	movf	estado_executa_muda@qtd_val,w
  7336     0093  1D03               	btfss	3,2
  7337     0094  2896               	goto	u785_21
  7338     0095  2897               	goto	u785_20
  7339     0096                     u785_21:
  7340     0096  28A1               	goto	i1l7953
  7341     0097                     u785_20:
  7342     0097                     i1l7951:
  7343                           
  7344                           ;estados.c: 386:                 lcd_puts("Nenhum Dado");
  7345     0097  30E6               	movlw	low (STR_42| (0+32768))
  7346     0098  00F3               	movwf	i1lcd_puts@str
  7347     0099  3087               	movlw	high (STR_42| (0+32768))
  7348     009A  00F4               	movwf	i1lcd_puts@str+1
  7349     009B  160A  118A  2706  120A  118A  	fcall	i1_lcd_puts
  7350                           
  7351                           ;estados.c: 387:             } else {
  7352     00A0  2AE9               	goto	i1l8033
  7353     00A1                     i1l7953:
  7354                           
  7355                           ;estados.c: 391:                 posicao = eeprom_read(0x00);
  7356     00A1  3000               	movlw	0
  7357     00A2  160A  118A  22F8  120A  118A  	fcall	i1_eeprom_read
  7358     00A7  1283               	bcf	3,5	;RP0=0, select bank0
  7359     00A8  1303               	bcf	3,6	;RP1=0, select bank0
  7360     00A9  00D2               	movwf	estado_executa_muda@posicao
  7361     00AA                     i1l7955:
  7362                           
  7363                           ;estados.c: 392:                 qtd_sens = menu_quant_sensores[posicao].i_quant_sensore
      +                          s;
  7364     00AA  3003               	movlw	3
  7365     00AB  00F0               	movwf	___bmul@multiplicand
  7366     00AC  0852               	movf	estado_executa_muda@posicao,w
  7367     00AD  160A  118A  22E3  120A  118A  	fcall	___bmul
  7368     00B2  3E02               	addlw	2
  7369     00B3  3E2E               	addlw	low (_menu_quant_sensores| (0+32768))
  7370     00B4  0084               	movwf	4
  7371     00B5  3087               	movlw	high (_menu_quant_sensores| (0+32768))
  7372     00B6  1803               	skipnc
  7373     00B7  3E01               	addlw	1
  7374     00B8  1283               	bcf	3,5	;RP0=0, select bank0
  7375     00B9  1303               	bcf	3,6	;RP1=0, select bank0
  7376     00BA  00FF               	movwf	btemp+1
  7377     00BB  120A  118A  2700  120A  118A  	fcall	stringtab
  7378     00C0  00D6               	movwf	estado_executa_muda@qtd_sens
  7379     00C1                     i1l7957:
  7380                           
  7381                           ;estados.c: 395:                 endereco = 0x0e + (gl_item_menu_ver_todos * qtd_sens * 
      +                          2);
  7382     00C1  0856               	movf	estado_executa_muda@qtd_sens,w
  7383     00C2  00F0               	movwf	___bmul@multiplicand
  7384     00C3  1683               	bsf	3,5	;RP0=1, select bank1
  7385     00C4  1303               	bcf	3,6	;RP1=0, select bank1
  7386     00C5  0850               	movf	_gl_item_menu_ver_todos^(0+128),w
  7387     00C6  160A  118A  22E3  120A  118A  	fcall	___bmul
  7388     00CB  1283               	bcf	3,5	;RP0=0, select bank0
  7389     00CC  1303               	bcf	3,6	;RP1=0, select bank0
  7390     00CD  00BC               	movwf	??_estado_executa_muda
  7391     00CE  073C               	addwf	??_estado_executa_muda,w
  7392     00CF  3E0E               	addlw	14
  7393     00D0  00D7               	movwf	estado_executa_muda@endereco
  7394     00D1                     i1l7959:
  7395                           
  7396                           ;estados.c: 398:                 for (uint8_t i = 0; i < qtd_sens; i++) {
  7397     00D1  01E1               	clrf	estado_executa_muda@i
  7398     00D2  2953               	goto	i1l7973
  7399     00D3                     i1l7961:
  7400                           
  7401                           ;estados.c: 400:                     temp_int = eeprom_ler_word(endereco);
  7402     00D3  0857               	movf	estado_executa_muda@endereco,w
  7403     00D4  160A  118A  23BE  120A  118A  	fcall	_eeprom_ler_word
  7404     00D9  0872               	movf	?_eeprom_ler_word+1,w
  7405     00DA  1283               	bcf	3,5	;RP0=0, select bank0
  7406     00DB  1303               	bcf	3,6	;RP1=0, select bank0
  7407     00DC  00D5               	movwf	estado_executa_muda@temp_int+1
  7408     00DD  0871               	movf	?_eeprom_ler_word,w
  7409     00DE  00D4               	movwf	estado_executa_muda@temp_int
  7410                           
  7411                           ;estados.c: 402:                     sprintf(tmp, "%d=%d.%d", i + 1, temp_int / 10, temp
      +                          _int % 10);
  7412     00DF  300A               	movlw	10
  7413     00E0  00F0               	movwf	i1___lwdiv@divisor
  7414     00E1  3000               	movlw	0
  7415     00E2  00F1               	movwf	i1___lwdiv@divisor+1
  7416     00E3  0855               	movf	estado_executa_muda@temp_int+1,w
  7417     00E4  00F3               	movwf	i1___lwdiv@dividend+1
  7418     00E5  0854               	movf	estado_executa_muda@temp_int,w
  7419     00E6  00F2               	movwf	i1___lwdiv@dividend
  7420     00E7  160A  118A  267C  120A  118A  	fcall	i1___lwdiv
  7421     00EC  0871               	movf	?i1___lwdiv+1,w
  7422     00ED  1283               	bcf	3,5	;RP0=0, select bank0
  7423     00EE  1303               	bcf	3,6	;RP1=0, select bank0
  7424     00EF  00DE               	movwf	_estado_executa_muda$1885+1
  7425     00F0  0870               	movf	?i1___lwdiv,w
  7426     00F1  00DD               	movwf	_estado_executa_muda$1885
  7427                           
  7428                           ;estados.c: 402:                     sprintf(tmp, "%d=%d.%d", i + 1, temp_int / 10, temp
      +                          _int % 10);
  7429     00F2  300A               	movlw	10
  7430     00F3  00F7               	movwf	i1___lwmod@divisor
  7431     00F4  3000               	movlw	0
  7432     00F5  00F8               	movwf	i1___lwmod@divisor+1
  7433     00F6  0855               	movf	estado_executa_muda@temp_int+1,w
  7434     00F7  00FA               	movwf	i1___lwmod@dividend+1
  7435     00F8  0854               	movf	estado_executa_muda@temp_int,w
  7436     00F9  00F9               	movwf	i1___lwmod@dividend
  7437     00FA  160A  118A  258A  120A  118A  	fcall	i1___lwmod
  7438     00FF  0878               	movf	?i1___lwmod+1,w
  7439     0100  1283               	bcf	3,5	;RP0=0, select bank0
  7440     0101  1303               	bcf	3,6	;RP1=0, select bank0
  7441     0102  00E0               	movwf	_estado_executa_muda$1886+1
  7442     0103  0877               	movf	?i1___lwmod,w
  7443     0104  00DF               	movwf	_estado_executa_muda$1886
  7444     0105                     i1l7963:
  7445                           
  7446                           ;estados.c: 402:                     sprintf(tmp, "%d=%d.%d", i + 1, temp_int / 10, temp
      +                          _int % 10);
  7447     0105  3050               	movlw	low (STR_17| (0+32768))
  7448     0106  00AF               	movwf	sprintf@f
  7449     0107  3088               	movlw	high (STR_17| (0+32768))
  7450     0108  00B0               	movwf	sprintf@f+1
  7451     0109  0861               	movf	estado_executa_muda@i,w
  7452     010A  3E01               	addlw	1
  7453     010B  00B1               	movwf	?_sprintf+2
  7454     010C  3000               	movlw	0
  7455     010D  1803               	skipnc
  7456     010E  3001               	movlw	1
  7457     010F  00B2               	movwf	?_sprintf+3
  7458     0110  085E               	movf	_estado_executa_muda$1885+1,w
  7459     0111  00B4               	movwf	?_sprintf+5
  7460     0112  085D               	movf	_estado_executa_muda$1885,w
  7461     0113  00B3               	movwf	?_sprintf+4
  7462     0114  0860               	movf	_estado_executa_muda$1886+1,w
  7463     0115  00B6               	movwf	?_sprintf+7
  7464     0116  085F               	movf	_estado_executa_muda$1886,w
  7465     0117  00B5               	movwf	?_sprintf+6
  7466     0118  3040               	movlw	(low (estado_executa_muda@tmp| 0))& (0+255)
  7467     0119  160A  118A  2377  120A  118A  	fcall	_sprintf
  7468     011E                     i1l7965:
  7469                           
  7470                           ;estados.c: 403:                     lcd_goto(LCD_POSICAO[i].y, LCD_POSICAO[i].x);
  7471     011E  1403               	setc
  7472     011F  1283               	bcf	3,5	;RP0=0, select bank0
  7473     0120  1303               	bcf	3,6	;RP1=0, select bank0
  7474     0121  0D61               	rlf	estado_executa_muda@i,w
  7475     0122  3E44               	addlw	low (_LCD_POSICAO| (0+32768))
  7476     0123  0084               	movwf	4
  7477     0124  3087               	movlw	high (_LCD_POSICAO| (0+32768))
  7478     0125  1803               	skipnc
  7479     0126  3E01               	addlw	1
  7480     0127  00FF               	movwf	btemp+1
  7481     0128  120A  118A  2700  120A  118A  	fcall	stringtab
  7482     012D  00F2               	movwf	i1lcd_goto@x
  7483     012E  0861               	movf	estado_executa_muda@i,w
  7484     012F  00BC               	movwf	??_estado_executa_muda
  7485     0130  073C               	addwf	??_estado_executa_muda,w
  7486     0131  3E44               	addlw	low (_LCD_POSICAO| (0+32768))
  7487     0132  0084               	movwf	4
  7488     0133  3087               	movlw	high (_LCD_POSICAO| (0+32768))
  7489     0134  1803               	skipnc
  7490     0135  3E01               	addlw	1
  7491     0136  00FF               	movwf	btemp+1
  7492     0137  120A  118A  2700  120A  118A  	fcall	stringtab
  7493     013C  160A  118A  248D  120A  118A  	fcall	i1_lcd_goto
  7494     0141                     i1l7967:
  7495                           
  7496                           ;estados.c: 404:                     lcd_puts(tmp);
  7497     0141  3040               	movlw	(low (estado_executa_muda@tmp| 0))& (0+255)
  7498     0142  00F3               	movwf	i1lcd_puts@str
  7499     0143  3000               	movlw	0
  7500     0144  00F4               	movwf	i1lcd_puts@str+1
  7501     0145  160A  118A  2706  120A  118A  	fcall	i1_lcd_puts
  7502     014A                     i1l7969:
  7503                           
  7504                           ;estados.c: 405:                     endereco = endereco + 2;
  7505     014A  1283               	bcf	3,5	;RP0=0, select bank0
  7506     014B  1303               	bcf	3,6	;RP1=0, select bank0
  7507     014C  0857               	movf	estado_executa_muda@endereco,w
  7508     014D  3E02               	addlw	2
  7509     014E  00D7               	movwf	estado_executa_muda@endereco
  7510     014F                     i1l7971:
  7511                           
  7512                           ;estados.c: 406:                 }
  7513     014F  3001               	movlw	1
  7514     0150  00FF               	movwf	btemp+1
  7515     0151  087F               	movf	btemp+1,w
  7516     0152  07E1               	addwf	estado_executa_muda@i,f
  7517     0153                     i1l7973:
  7518     0153  0856               	movf	estado_executa_muda@qtd_sens,w
  7519     0154  0261               	subwf	estado_executa_muda@i,w
  7520     0155  1C03               	skipc
  7521     0156  2958               	goto	u786_21
  7522     0157  2959               	goto	u786_20
  7523     0158                     u786_21:
  7524     0158  28D3               	goto	i1l7961
  7525     0159                     u786_20:
  7526     0159  2AE9               	goto	i1l8033
  7527     015A                     i1l7975:
  7528                           
  7529                           ;estados.c: 410:             lcd_clear();
  7530     015A  160A  118A  230F  120A  118A  	fcall	_lcd_clear
  7531     015F                     i1l7977:
  7532                           
  7533                           ;estados.c: 411:             maior = eeprom_ler_word(0x06);
  7534     015F  3006               	movlw	6
  7535     0160  160A  118A  23BE  120A  118A  	fcall	_eeprom_ler_word
  7536     0165  0872               	movf	?_eeprom_ler_word+1,w
  7537     0166  1283               	bcf	3,5	;RP0=0, select bank0
  7538     0167  1303               	bcf	3,6	;RP1=0, select bank0
  7539     0168  00D9               	movwf	estado_executa_muda@maior+1
  7540     0169  0871               	movf	?_eeprom_ler_word,w
  7541     016A  00D8               	movwf	estado_executa_muda@maior
  7542     016B                     i1l7979:
  7543                           
  7544                           ;estados.c: 412:             menor = eeprom_ler_word(0x04);
  7545     016B  3004               	movlw	4
  7546     016C  160A  118A  23BE  120A  118A  	fcall	_eeprom_ler_word
  7547     0171  0872               	movf	?_eeprom_ler_word+1,w
  7548     0172  1283               	bcf	3,5	;RP0=0, select bank0
  7549     0173  1303               	bcf	3,6	;RP1=0, select bank0
  7550     0174  00DB               	movwf	estado_executa_muda@menor+1
  7551     0175  0871               	movf	?_eeprom_ler_word,w
  7552     0176  00DA               	movwf	estado_executa_muda@menor
  7553     0177                     i1l7981:
  7554                           
  7555                           ;estados.c: 414:             if (maior == 0) {
  7556     0177  0858               	movf	estado_executa_muda@maior,w
  7557     0178  0459               	iorwf	estado_executa_muda@maior+1,w
  7558     0179  1D03               	btfss	3,2
  7559     017A  297C               	goto	u787_21
  7560     017B  297D               	goto	u787_20
  7561     017C                     u787_21:
  7562     017C  298F               	goto	i1l7987
  7563     017D                     u787_20:
  7564     017D                     i1l7983:
  7565                           
  7566                           ;estados.c: 415:                 if (menor == 0xffff) {
  7567     017D  0A5A               	incf	estado_executa_muda@menor,w
  7568     017E  1D03               	skipz
  7569     017F  2984               	goto	u788_21
  7570     0180  0A5B               	incf	estado_executa_muda@menor+1,w
  7571     0181  1D03               	btfss	3,2
  7572     0182  2984               	goto	u788_21
  7573     0183  2985               	goto	u788_20
  7574     0184                     u788_21:
  7575     0184  2AE9               	goto	i1l8033
  7576     0185                     u788_20:
  7577     0185                     i1l7985:
  7578                           
  7579                           ;estados.c: 416:                     lcd_puts("Nenhum Dado");
  7580     0185  30E6               	movlw	low (STR_42| (0+32768))
  7581     0186  00F3               	movwf	i1lcd_puts@str
  7582     0187  3087               	movlw	high (STR_42| (0+32768))
  7583     0188  00F4               	movwf	i1lcd_puts@str+1
  7584     0189  160A  118A  2706  120A  118A  	fcall	i1_lcd_puts
  7585     018E  2AE9               	goto	i1l8033
  7586     018F                     i1l7987:
  7587                           
  7588                           ;estados.c: 419:                 sprintf(tmp, "Max=%d.%d", maior / 10, maior % 10);
  7589     018F  300A               	movlw	10
  7590     0190  00F0               	movwf	i1___lwdiv@divisor
  7591     0191  3000               	movlw	0
  7592     0192  00F1               	movwf	i1___lwdiv@divisor+1
  7593     0193  0859               	movf	estado_executa_muda@maior+1,w
  7594     0194  00F3               	movwf	i1___lwdiv@dividend+1
  7595     0195  0858               	movf	estado_executa_muda@maior,w
  7596     0196  00F2               	movwf	i1___lwdiv@dividend
  7597     0197  160A  118A  267C  120A  118A  	fcall	i1___lwdiv
  7598     019C  0871               	movf	?i1___lwdiv+1,w
  7599     019D  1283               	bcf	3,5	;RP0=0, select bank0
  7600     019E  1303               	bcf	3,6	;RP1=0, select bank0
  7601     019F  00DE               	movwf	_estado_executa_muda$1885+1
  7602     01A0  0870               	movf	?i1___lwdiv,w
  7603     01A1  00DD               	movwf	_estado_executa_muda$1885
  7604                           
  7605                           ;estados.c: 419:                 sprintf(tmp, "Max=%d.%d", maior / 10, maior % 10);
  7606     01A2  300A               	movlw	10
  7607     01A3  00F7               	movwf	i1___lwmod@divisor
  7608     01A4  3000               	movlw	0
  7609     01A5  00F8               	movwf	i1___lwmod@divisor+1
  7610     01A6  0859               	movf	estado_executa_muda@maior+1,w
  7611     01A7  00FA               	movwf	i1___lwmod@dividend+1
  7612     01A8  0858               	movf	estado_executa_muda@maior,w
  7613     01A9  00F9               	movwf	i1___lwmod@dividend
  7614     01AA  160A  118A  258A  120A  118A  	fcall	i1___lwmod
  7615     01AF  0878               	movf	?i1___lwmod+1,w
  7616     01B0  1283               	bcf	3,5	;RP0=0, select bank0
  7617     01B1  1303               	bcf	3,6	;RP1=0, select bank0
  7618     01B2  00E0               	movwf	_estado_executa_muda$1886+1
  7619     01B3  0877               	movf	?i1___lwmod,w
  7620     01B4  00DF               	movwf	_estado_executa_muda$1886
  7621     01B5                     i1l7989:
  7622                           
  7623                           ;estados.c: 419:                 sprintf(tmp, "Max=%d.%d", maior / 10, maior % 10);
  7624     01B5  3033               	movlw	low (STR_45| (0+32768))
  7625     01B6  00AF               	movwf	sprintf@f
  7626     01B7  3088               	movlw	high (STR_45| (0+32768))
  7627     01B8  00B0               	movwf	sprintf@f+1
  7628     01B9  085E               	movf	_estado_executa_muda$1885+1,w
  7629     01BA  00B2               	movwf	?_sprintf+3
  7630     01BB  085D               	movf	_estado_executa_muda$1885,w
  7631     01BC  00B1               	movwf	?_sprintf+2
  7632     01BD  0860               	movf	_estado_executa_muda$1886+1,w
  7633     01BE  00B4               	movwf	?_sprintf+5
  7634     01BF  085F               	movf	_estado_executa_muda$1886,w
  7635     01C0  00B3               	movwf	?_sprintf+4
  7636     01C1  3040               	movlw	(low (estado_executa_muda@tmp| 0))& (0+255)
  7637     01C2  160A  118A  2377  120A  118A  	fcall	_sprintf
  7638     01C7                     i1l7991:
  7639                           
  7640                           ;estados.c: 420:                 lcd_puts(tmp);
  7641     01C7  3040               	movlw	(low (estado_executa_muda@tmp| 0))& (0+255)
  7642     01C8  00F3               	movwf	i1lcd_puts@str
  7643     01C9  3000               	movlw	0
  7644     01CA  00F4               	movwf	i1lcd_puts@str+1
  7645     01CB  160A  118A  2706  120A  118A  	fcall	i1_lcd_puts
  7646     01D0                     i1l7993:
  7647                           
  7648                           ;estados.c: 421:                 lcd_goto(2, 0);
  7649     01D0  01F2               	clrf	i1lcd_goto@x
  7650     01D1  3002               	movlw	2
  7651     01D2  160A  118A  248D  120A  118A  	fcall	i1_lcd_goto
  7652     01D7                     i1l7995:
  7653                           
  7654                           ;estados.c: 422:                 sprintf(tmp, "Min=%d.%d", menor / 10, menor % 10);
  7655     01D7  300A               	movlw	10
  7656     01D8  00F0               	movwf	i1___lwdiv@divisor
  7657     01D9  3000               	movlw	0
  7658     01DA  00F1               	movwf	i1___lwdiv@divisor+1
  7659     01DB  1283               	bcf	3,5	;RP0=0, select bank0
  7660     01DC  1303               	bcf	3,6	;RP1=0, select bank0
  7661     01DD  085B               	movf	estado_executa_muda@menor+1,w
  7662     01DE  00F3               	movwf	i1___lwdiv@dividend+1
  7663     01DF  085A               	movf	estado_executa_muda@menor,w
  7664     01E0  00F2               	movwf	i1___lwdiv@dividend
  7665     01E1  160A  118A  267C  120A  118A  	fcall	i1___lwdiv
  7666     01E6  0871               	movf	?i1___lwdiv+1,w
  7667     01E7  1283               	bcf	3,5	;RP0=0, select bank0
  7668     01E8  1303               	bcf	3,6	;RP1=0, select bank0
  7669     01E9  00DE               	movwf	_estado_executa_muda$1885+1
  7670     01EA  0870               	movf	?i1___lwdiv,w
  7671     01EB  00DD               	movwf	_estado_executa_muda$1885
  7672     01EC                     i1l7997:
  7673                           
  7674                           ;estados.c: 422:                 sprintf(tmp, "Min=%d.%d", menor / 10, menor % 10);
  7675     01EC  300A               	movlw	10
  7676     01ED  00F7               	movwf	i1___lwmod@divisor
  7677     01EE  3000               	movlw	0
  7678     01EF  00F8               	movwf	i1___lwmod@divisor+1
  7679     01F0  085B               	movf	estado_executa_muda@menor+1,w
  7680     01F1  00FA               	movwf	i1___lwmod@dividend+1
  7681     01F2  085A               	movf	estado_executa_muda@menor,w
  7682     01F3  00F9               	movwf	i1___lwmod@dividend
  7683     01F4  160A  118A  258A  120A  118A  	fcall	i1___lwmod
  7684     01F9  0878               	movf	?i1___lwmod+1,w
  7685     01FA  1283               	bcf	3,5	;RP0=0, select bank0
  7686     01FB  1303               	bcf	3,6	;RP1=0, select bank0
  7687     01FC  00E0               	movwf	_estado_executa_muda$1886+1
  7688     01FD  0877               	movf	?i1___lwmod,w
  7689     01FE  00DF               	movwf	_estado_executa_muda$1886
  7690     01FF                     i1l7999:
  7691                           
  7692                           ;estados.c: 422:                 sprintf(tmp, "Min=%d.%d", menor / 10, menor % 10);
  7693     01FF  3029               	movlw	low (STR_46| (0+32768))
  7694     0200  00AF               	movwf	sprintf@f
  7695     0201  3088               	movlw	high (STR_46| (0+32768))
  7696     0202  00B0               	movwf	sprintf@f+1
  7697     0203  085E               	movf	_estado_executa_muda$1885+1,w
  7698     0204  00B2               	movwf	?_sprintf+3
  7699     0205  085D               	movf	_estado_executa_muda$1885,w
  7700     0206  00B1               	movwf	?_sprintf+2
  7701     0207  0860               	movf	_estado_executa_muda$1886+1,w
  7702     0208  00B4               	movwf	?_sprintf+5
  7703     0209  085F               	movf	_estado_executa_muda$1886,w
  7704     020A  00B3               	movwf	?_sprintf+4
  7705     020B  3040               	movlw	(low (estado_executa_muda@tmp| 0))& (0+255)
  7706     020C  160A  118A  2377  120A  118A  	fcall	_sprintf
  7707     0211                     i1l8001:
  7708                           
  7709                           ;estados.c: 423:                 lcd_puts(tmp);
  7710     0211  3040               	movlw	(low (estado_executa_muda@tmp| 0))& (0+255)
  7711     0212  00F3               	movwf	i1lcd_puts@str
  7712     0213  3000               	movlw	0
  7713     0214  00F4               	movwf	i1lcd_puts@str+1
  7714     0215  160A  118A  2706  120A  118A  	fcall	i1_lcd_puts
  7715     021A  2AE9               	goto	i1l8033
  7716     021B                     i1l8003:
  7717                           
  7718                           ;estados.c: 427:             eeprom_write(0x08, 0);
  7719     021B  01F0               	clrf	i1eeprom_write@value
  7720     021C  3008               	movlw	8
  7721     021D  160A  118A  2460  120A  118A  	fcall	i1_eeprom_write
  7722                           
  7723                           ;estados.c: 428:             eeprom_write(0x00, 0);
  7724     0222  01F0               	clrf	i1eeprom_write@value
  7725     0223  3000               	movlw	0
  7726     0224  160A  118A  2460  120A  118A  	fcall	i1_eeprom_write
  7727                           
  7728                           ;estados.c: 429:             eeprom_gravar_word(0x02, 0);
  7729     0229  3000               	movlw	0
  7730     022A  00F2               	movwf	i1eeprom_gravar_word@dado
  7731     022B  00F3               	movwf	i1eeprom_gravar_word@dado+1
  7732     022C  3002               	movlw	2
  7733     022D  160A  118A  22BD  120A  118A  	fcall	i1_eeprom_gravar_word
  7734                           
  7735                           ;estados.c: 430:             eeprom_gravar_word(0x04, 0xffff);
  7736     0232  30FF               	movlw	255
  7737     0233  00F2               	movwf	i1eeprom_gravar_word@dado
  7738     0234  30FF               	movlw	255
  7739     0235  00F3               	movwf	i1eeprom_gravar_word@dado+1
  7740     0236  3004               	movlw	4
  7741     0237  160A  118A  22BD  120A  118A  	fcall	i1_eeprom_gravar_word
  7742                           
  7743                           ;estados.c: 431:             eeprom_gravar_word(0x06, 0);
  7744     023C  3000               	movlw	0
  7745     023D  00F2               	movwf	i1eeprom_gravar_word@dado
  7746     023E  00F3               	movwf	i1eeprom_gravar_word@dado+1
  7747     023F  3006               	movlw	6
  7748     0240  160A  118A  22BD  120A  118A  	fcall	i1_eeprom_gravar_word
  7749     0245                     i1l8005:
  7750                           
  7751                           ;estados.c: 432:             for (uint8_t i = 0; i < 100 * 2; i++) {
  7752     0245  1283               	bcf	3,5	;RP0=0, select bank0
  7753     0246  1303               	bcf	3,6	;RP1=0, select bank0
  7754     0247  01DC               	clrf	estado_executa_muda@i_945
  7755     0248                     i1l8011:
  7756                           
  7757                           ;estados.c: 433:                 eeprom_write(i + 0x0e, 0);
  7758     0248  01F0               	clrf	i1eeprom_write@value
  7759     0249  085C               	movf	estado_executa_muda@i_945,w
  7760     024A  3E0E               	addlw	14
  7761     024B  160A  118A  2460  120A  118A  	fcall	i1_eeprom_write
  7762     0250                     i1l8013:
  7763                           
  7764                           ;estados.c: 434:             }
  7765     0250  3001               	movlw	1
  7766     0251  00FF               	movwf	btemp+1
  7767     0252  087F               	movf	btemp+1,w
  7768     0253  1283               	bcf	3,5	;RP0=0, select bank0
  7769     0254  1303               	bcf	3,6	;RP1=0, select bank0
  7770     0255  07DC               	addwf	estado_executa_muda@i_945,f
  7771     0256                     i1l8015:
  7772     0256  30C8               	movlw	200
  7773     0257  025C               	subwf	estado_executa_muda@i_945,w
  7774     0258  1C03               	skipc
  7775     0259  2A5B               	goto	u789_21
  7776     025A  2A5C               	goto	u789_20
  7777     025B                     u789_21:
  7778     025B  2A48               	goto	i1l8011
  7779     025C                     u789_20:
  7780     025C                     i1l8017:
  7781                           
  7782                           ;estados.c: 435:             lcd_clear();
  7783     025C  160A  118A  230F  120A  118A  	fcall	_lcd_clear
  7784     0261                     i1l8019:
  7785                           
  7786                           ;estados.c: 436:             lcd_puts("Tudo Limpo");
  7787     0261  30F2               	movlw	low (STR_47| (0+32768))
  7788     0262  00F3               	movwf	i1lcd_puts@str
  7789     0263  3087               	movlw	high (STR_47| (0+32768))
  7790     0264  00F4               	movwf	i1lcd_puts@str+1
  7791     0265  160A  118A  2706  120A  118A  	fcall	i1_lcd_puts
  7792                           
  7793                           ;estados.c: 437:             break;
  7794     026A  2AE9               	goto	i1l8033
  7795     026B                     i1l8021:
  7796                           
  7797                           ;estados.c: 440:             lcd_clear();
  7798     026B  160A  118A  230F  120A  118A  	fcall	_lcd_clear
  7799     0270                     i1l8023:
  7800                           
  7801                           ;estados.c: 441:             lcd_puts(menu_tempo_amostra[gl_item_menu_config_amostra].st
      +                          r_tempo_amostra);
  7802     0270  1683               	bsf	3,5	;RP0=1, select bank1
  7803     0271  1303               	bcf	3,6	;RP1=0, select bank1
  7804     0272  084B               	movf	_gl_item_menu_config_amostra^(0+128),w
  7805     0273  1283               	bcf	3,5	;RP0=0, select bank0
  7806     0274  1303               	bcf	3,6	;RP1=0, select bank0
  7807     0275  00BC               	movwf	??_estado_executa_muda
  7808     0276  3001               	movlw	1
  7809     0277                     u790_25:
  7810     0277  1003               	clrc
  7811     0278  0DBC               	rlf	??_estado_executa_muda,f
  7812     0279  3EFF               	addlw	-1
  7813     027A  1D03               	skipz
  7814     027B  2A77               	goto	u790_25
  7815     027C  1003               	clrc
  7816     027D  0D3C               	rlf	??_estado_executa_muda,w
  7817     027E  3E12               	addlw	low (_menu_tempo_amostra| (0+32768))
  7818     027F  0084               	movwf	4
  7819     0280  3087               	movlw	high (_menu_tempo_amostra| (0+32768))
  7820     0281  1803               	skipnc
  7821     0282  3E01               	addlw	1
  7822     0283  00FF               	movwf	btemp+1
  7823     0284  120A  118A  2700  120A  118A  	fcall	stringtab
  7824     0289  00BD               	movwf	??_estado_executa_muda+1
  7825     028A  120A  118A  2700  120A  118A  	fcall	stringtab
  7826     028F  00BE               	movwf	??_estado_executa_muda+2
  7827     0290  083D               	movf	??_estado_executa_muda+1,w
  7828     0291  00F3               	movwf	i1lcd_puts@str
  7829     0292  083E               	movf	??_estado_executa_muda+2,w
  7830     0293  00F4               	movwf	i1lcd_puts@str+1
  7831     0294  160A  118A  2706  120A  118A  	fcall	i1_lcd_puts
  7832                           
  7833                           ;estados.c: 442:             break;
  7834     0299  2AE9               	goto	i1l8033
  7835     029A                     i1l8025:
  7836                           
  7837                           ;estados.c: 452:             lcd_clear();
  7838     029A  160A  118A  230F  120A  118A  	fcall	_lcd_clear
  7839     029F                     i1l8027:
  7840                           
  7841                           ;estados.c: 453:             lcd_puts(menu_quant_sensores[gl_item_menu_config_sensores].
      +                          str_quant_sensores);
  7842     029F  3003               	movlw	3
  7843     02A0  00F0               	movwf	___bmul@multiplicand
  7844     02A1  1683               	bsf	3,5	;RP0=1, select bank1
  7845     02A2  1303               	bcf	3,6	;RP1=0, select bank1
  7846     02A3  084F               	movf	_gl_item_menu_config_sensores^(0+128),w
  7847     02A4  160A  118A  22E3  120A  118A  	fcall	___bmul
  7848     02A9  3E2E               	addlw	low (_menu_quant_sensores| (0+32768))
  7849     02AA  0084               	movwf	4
  7850     02AB  3087               	movlw	high (_menu_quant_sensores| (0+32768))
  7851     02AC  1803               	skipnc
  7852     02AD  3E01               	addlw	1
  7853     02AE  1283               	bcf	3,5	;RP0=0, select bank0
  7854     02AF  1303               	bcf	3,6	;RP1=0, select bank0
  7855     02B0  00FF               	movwf	btemp+1
  7856     02B1  120A  118A  2700  120A  118A  	fcall	stringtab
  7857     02B6  00BC               	movwf	??_estado_executa_muda
  7858     02B7  120A  118A  2700  120A  118A  	fcall	stringtab
  7859     02BC  00BD               	movwf	??_estado_executa_muda+1
  7860     02BD  083C               	movf	??_estado_executa_muda,w
  7861     02BE  00F3               	movwf	i1lcd_puts@str
  7862     02BF  083D               	movf	??_estado_executa_muda+1,w
  7863     02C0  00F4               	movwf	i1lcd_puts@str+1
  7864     02C1  160A  118A  2706  120A  118A  	fcall	i1_lcd_puts
  7865                           
  7866                           ;estados.c: 454:             break;
  7867     02C6  2AE9               	goto	i1l8033
  7868     02C7                     i1l8031:
  7869     02C7  0853               	movf	estado_executa_muda@novo_estado,w
  7870     02C8  00BC               	movwf	??_estado_executa_muda
  7871     02C9  01BD               	clrf	??_estado_executa_muda+1
  7872                           
  7873                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7874                           ; Switch size 1, requested type "simple"
  7875                           ; Number of cases is 1, Range of values is 0 to 0
  7876                           ; switch strategies available:
  7877                           ; Name         Instructions Cycles
  7878                           ; simple_byte            4     3 (average)
  7879                           ; direct_byte           11     8 (fixed)
  7880                           ; jumptable            260     6 (fixed)
  7881                           ;	Chosen strategy is simple_byte
  7882     02CA  083D               	movf	??_estado_executa_muda+1,w
  7883     02CB  3A00               	xorlw	0	; case 0
  7884     02CC  1903               	skipnz
  7885     02CD  2ACF               	goto	i1l8895
  7886     02CE  2AE9               	goto	i1l8033
  7887     02CF                     i1l8895:
  7888                           
  7889                           ; Switch size 1, requested type "simple"
  7890                           ; Number of cases is 8, Range of values is 1 to 8
  7891                           ; switch strategies available:
  7892                           ; Name         Instructions Cycles
  7893                           ; simple_byte           25    13 (average)
  7894                           ; direct_byte           35    11 (fixed)
  7895                           ; jumptable            263     9 (fixed)
  7896                           ;	Chosen strategy is simple_byte
  7897     02CF  083C               	movf	??_estado_executa_muda,w
  7898     02D0  3A01               	xorlw	1	; case 1
  7899     02D1  1903               	skipnz
  7900     02D2  2865               	goto	i1l7941
  7901     02D3  3A03               	xorlw	3	; case 2
  7902     02D4  1903               	skipnz
  7903     02D5  2880               	goto	i1l521
  7904     02D6  3A01               	xorlw	1	; case 3
  7905     02D7  1903               	skipnz
  7906     02D8  2882               	goto	i1l522
  7907     02D9  3A07               	xorlw	7	; case 4
  7908     02DA  1903               	skipnz
  7909     02DB  2884               	goto	i1l7945
  7910     02DC  3A01               	xorlw	1	; case 5
  7911     02DD  1903               	skipnz
  7912     02DE  295A               	goto	i1l7975
  7913     02DF  3A03               	xorlw	3	; case 6
  7914     02E0  1903               	skipnz
  7915     02E1  2A1B               	goto	i1l8003
  7916     02E2  3A01               	xorlw	1	; case 7
  7917     02E3  1903               	skipnz
  7918     02E4  2A6B               	goto	i1l8021
  7919     02E5  3A0F               	xorlw	15	; case 8
  7920     02E6  1903               	skipnz
  7921     02E7  2A9A               	goto	i1l8025
  7922     02E8  2AE9               	goto	i1l8033
  7923     02E9                     i1l8033:
  7924                           
  7925                           ;estados.c: 456:     gl_estado = novo_estado;
  7926     02E9  1283               	bcf	3,5	;RP0=0, select bank0
  7927     02EA  1303               	bcf	3,6	;RP1=0, select bank0
  7928     02EB  0853               	movf	estado_executa_muda@novo_estado,w
  7929     02EC  1683               	bsf	3,5	;RP0=1, select bank1
  7930     02ED  1303               	bcf	3,6	;RP1=0, select bank1
  7931     02EE  00D2               	movwf	_gl_estado^(0+128)
  7932     02EF                     i1l538:
  7933     02EF  0008               	return
  7934     02F0                     __end_of_estado_executa_muda:
  7935                           
  7936                           	psect	text30
  7937     13E4                     __ptext30:	
  7938 ;; *************** function _btns_testa *****************
  7939 ;; Defined at:
  7940 ;;		line 7 in file "botoes.c"
  7941 ;; Parameters:    Size  Location     Type
  7942 ;;		None
  7943 ;; Auto vars:     Size  Location     Type
  7944 ;;		None
  7945 ;; Return value:  Size  Location     Type
  7946 ;;                  1    wreg      unsigned char 
  7947 ;; Registers used:
  7948 ;;		wreg
  7949 ;; Tracked objects:
  7950 ;;		On entry : 0/0
  7951 ;;		On exit  : 0/0
  7952 ;;		Unchanged: 0/0
  7953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7954 ;;      Params:         0       0       0       0       0
  7955 ;;      Locals:         0       0       0       0       0
  7956 ;;      Temps:          3       0       0       0       0
  7957 ;;      Totals:         3       0       0       0       0
  7958 ;;Total ram usage:        3 bytes
  7959 ;; Hardware stack levels used: 1
  7960 ;; This function calls:
  7961 ;;		Nothing
  7962 ;; This function is called by:
  7963 ;;		_handler
  7964 ;; This function uses a non-reentrant model
  7965 ;;
  7966                           
  7967     13E4                     _btns_testa:	
  7968                           ;psect for function _btns_testa
  7969                           
  7970     13E4                     i1l4187:	
  7971                           ;incstack = 0
  7972                           ; Regs used in _btns_testa: [wreg]
  7973                           
  7974                           
  7975                           ;botoes.c: 9:     _delay((unsigned long)((200)*(4000000/4000.0)));
  7976     13E4  3002               	movlw	2
  7977     13E5  00F2               	movwf	??_btns_testa+2
  7978     13E6  3004               	movlw	4
  7979     13E7  00F1               	movwf	??_btns_testa+1
  7980     13E8  30BA               	movlw	186
  7981     13E9  00F0               	movwf	??_btns_testa
  7982     13EA                     u854_27:
  7983     13EA  0BF0               	decfsz	??_btns_testa,f
  7984     13EB  2BEA               	goto	u854_27
  7985     13EC  0BF1               	decfsz	??_btns_testa+1,f
  7986     13ED  2BEA               	goto	u854_27
  7987     13EE  0BF2               	decfsz	??_btns_testa+2,f
  7988     13EF  2BEA               	goto	u854_27
  7989     13F0  0000               	nop
  7990     13F1                     i1l4189:
  7991                           
  7992                           ;botoes.c: 10:     if(RB4 == 0) {
  7993     13F1  1283               	bcf	3,5	;RP0=0, select bank0
  7994     13F2  1303               	bcf	3,6	;RP1=0, select bank0
  7995     13F3  1A06               	btfsc	6,4	;volatile
  7996     13F4  2BF6               	goto	u395_21
  7997     13F5  2BF7               	goto	u395_20
  7998     13F6                     u395_21:
  7999     13F6  2BF9               	goto	i1l133
  8000     13F7                     u395_20:
  8001     13F7                     i1l4191:
  8002                           
  8003                           ;botoes.c: 11:         return 1;
  8004     13F7  3001               	movlw	1
  8005     13F8  2C0C               	goto	i1l134
  8006     13F9                     i1l133:	
  8007                           ;botoes.c: 12:     }
  8008                           
  8009                           
  8010                           ;botoes.c: 13:     if(RB5 == 0) {
  8011     13F9  1A86               	btfsc	6,5	;volatile
  8012     13FA  2BFC               	goto	u396_21
  8013     13FB  2BFD               	goto	u396_20
  8014     13FC                     u396_21:
  8015     13FC  2BFF               	goto	i1l135
  8016     13FD                     u396_20:
  8017     13FD                     i1l4195:
  8018                           
  8019                           ;botoes.c: 14:         return 2;
  8020     13FD  3002               	movlw	2
  8021     13FE  2C0C               	goto	i1l134
  8022     13FF                     i1l135:	
  8023                           ;botoes.c: 15:     }
  8024                           
  8025                           
  8026                           ;botoes.c: 16:     if(RB6 == 0) {
  8027     13FF  1B06               	btfsc	6,6	;volatile
  8028     1400  2C02               	goto	u397_21
  8029     1401  2C03               	goto	u397_20
  8030     1402                     u397_21:
  8031     1402  2C05               	goto	i1l136
  8032     1403                     u397_20:
  8033     1403                     i1l4199:
  8034                           
  8035                           ;botoes.c: 17:         return 3;
  8036     1403  3003               	movlw	3
  8037     1404  2C0C               	goto	i1l134
  8038     1405                     i1l136:	
  8039                           ;botoes.c: 18:     }
  8040                           
  8041                           
  8042                           ;botoes.c: 19:     if(RB7 == 0) {
  8043     1405  1B86               	btfsc	6,7	;volatile
  8044     1406  2C08               	goto	u398_21
  8045     1407  2C09               	goto	u398_20
  8046     1408                     u398_21:
  8047     1408  2C0B               	goto	i1l4207
  8048     1409                     u398_20:
  8049     1409                     i1l4203:
  8050                           
  8051                           ;botoes.c: 20:         return 4;
  8052     1409  3004               	movlw	4
  8053     140A  2C0C               	goto	i1l134
  8054     140B                     i1l4207:
  8055                           
  8056                           ;botoes.c: 22:     return 0;
  8057     140B  3000               	movlw	0
  8058     140C                     i1l134:
  8059     140C  0008               	return
  8060     140D                     __end_of_btns_testa:
  8061                           
  8062                           	psect	text31
  8063     0D57                     __ptext31:	
  8064 ;; *************** function _adcon_captura_grava *****************
  8065 ;; Defined at:
  8066 ;;		line 19 in file "adcon.c"
  8067 ;; Parameters:    Size  Location     Type
  8068 ;;		None
  8069 ;; Auto vars:     Size  Location     Type
  8070 ;;  i               1   58[BANK0 ] unsigned char 
  8071 ;;  x               2   52[BANK0 ] unsigned int 
  8072 ;;  i               1   57[BANK0 ] unsigned char 
  8073 ;;  t_int           2   59[BANK0 ] unsigned int 
  8074 ;;  menor           2   50[BANK0 ] unsigned int 
  8075 ;;  maior           2   48[BANK0 ] unsigned int 
  8076 ;;  qtd_val         1   56[BANK0 ] unsigned char 
  8077 ;;  qtd_sens        1   55[BANK0 ] unsigned char 
  8078 ;;  posicao         1   54[BANK0 ] unsigned char 
  8079 ;; Return value:  Size  Location     Type
  8080 ;;                  1    wreg      void 
  8081 ;; Registers used:
  8082 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8083 ;; Tracked objects:
  8084 ;;		On entry : 0/0
  8085 ;;		On exit  : 0/0
  8086 ;;		Unchanged: 0/0
  8087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8088 ;;      Params:         0       0       0       0       0
  8089 ;;      Locals:         0      13       0       0       0
  8090 ;;      Temps:          1       0       0       0       0
  8091 ;;      Totals:         1      13       0       0       0
  8092 ;;Total ram usage:       14 bytes
  8093 ;; Hardware stack levels used: 1
  8094 ;; Hardware stack levels required when called: 4
  8095 ;; This function calls:
  8096 ;;		___bmul
  8097 ;;		_adcon_ler_canal
  8098 ;;		_adcon_mostra
  8099 ;;		_eeprom_ler_word
  8100 ;;		_lcd_clear
  8101 ;;		i1_eeprom_gravar_word
  8102 ;;		i1_eeprom_read
  8103 ;;		i1_eeprom_write
  8104 ;;		i1_lcd_puts
  8105 ;; This function is called by:
  8106 ;;		_handler
  8107 ;; This function uses a non-reentrant model
  8108 ;;
  8109                           
  8110     0D57                     _adcon_captura_grava:	
  8111                           ;psect for function _adcon_captura_grava
  8112                           
  8113     0D57                     i1l8391:	
  8114                           ;incstack = 0
  8115 ;; hardware stack exceeded
  8116                           ; Regs used in _adcon_captura_grava: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  8117                           
  8118                           
  8119                           ;adcon.c: 20:     uint16_t t_int;;adcon.c: 21:     uint16_t maior, menor;;adcon.c: 22:  
      +                             uint8_t qtd_val, qtd_sens;;adcon.c: 23:     uint8_t posicao;;adcon.c: 31:     posicao
      +                           = eeprom_read(0x00);
  8120     0D57  3000               	movlw	0
  8121     0D58  160A  118A  22F8  120A  158A  	fcall	i1_eeprom_read
  8122     0D5D  1283               	bcf	3,5	;RP0=0, select bank0
  8123     0D5E  1303               	bcf	3,6	;RP1=0, select bank0
  8124     0D5F  00D6               	movwf	adcon_captura_grava@posicao
  8125     0D60                     i1l8393:
  8126                           
  8127                           ;adcon.c: 32:     qtd_sens = menu_quant_sensores[posicao].i_quant_sensores;
  8128     0D60  3003               	movlw	3
  8129     0D61  00F0               	movwf	___bmul@multiplicand
  8130     0D62  0856               	movf	adcon_captura_grava@posicao,w
  8131     0D63  160A  118A  22E3  120A  158A  	fcall	___bmul
  8132     0D68  3E02               	addlw	2
  8133     0D69  3E2E               	addlw	low (_menu_quant_sensores| (0+32768))
  8134     0D6A  0084               	movwf	4
  8135     0D6B  3087               	movlw	high (_menu_quant_sensores| (0+32768))
  8136     0D6C  1803               	skipnc
  8137     0D6D  3E01               	addlw	1
  8138     0D6E  1283               	bcf	3,5	;RP0=0, select bank0
  8139     0D6F  1303               	bcf	3,6	;RP1=0, select bank0
  8140     0D70  00FF               	movwf	btemp+1
  8141     0D71  120A  118A  2700  120A  158A  	fcall	stringtab
  8142     0D76  00D7               	movwf	adcon_captura_grava@qtd_sens
  8143     0D77                     i1l8395:
  8144                           
  8145                           ;adcon.c: 34:     qtd_val = eeprom_read(0x08);
  8146     0D77  3008               	movlw	8
  8147     0D78  160A  118A  22F8  120A  158A  	fcall	i1_eeprom_read
  8148     0D7D  1283               	bcf	3,5	;RP0=0, select bank0
  8149     0D7E  1303               	bcf	3,6	;RP1=0, select bank0
  8150     0D7F  00D8               	movwf	adcon_captura_grava@qtd_val
  8151     0D80                     i1l8397:
  8152                           
  8153                           ;adcon.c: 35:     maior = eeprom_ler_word(0x06);
  8154     0D80  3006               	movlw	6
  8155     0D81  160A  118A  23BE  120A  158A  	fcall	_eeprom_ler_word
  8156     0D86  0872               	movf	?_eeprom_ler_word+1,w
  8157     0D87  1283               	bcf	3,5	;RP0=0, select bank0
  8158     0D88  1303               	bcf	3,6	;RP1=0, select bank0
  8159     0D89  00D1               	movwf	adcon_captura_grava@maior+1
  8160     0D8A  0871               	movf	?_eeprom_ler_word,w
  8161     0D8B  00D0               	movwf	adcon_captura_grava@maior
  8162     0D8C                     i1l8399:
  8163                           
  8164                           ;adcon.c: 36:     menor = eeprom_ler_word(0x04);
  8165     0D8C  3004               	movlw	4
  8166     0D8D  160A  118A  23BE  120A  158A  	fcall	_eeprom_ler_word
  8167     0D92  0872               	movf	?_eeprom_ler_word+1,w
  8168     0D93  1283               	bcf	3,5	;RP0=0, select bank0
  8169     0D94  1303               	bcf	3,6	;RP1=0, select bank0
  8170     0D95  00D3               	movwf	adcon_captura_grava@menor+1
  8171     0D96  0871               	movf	?_eeprom_ler_word,w
  8172     0D97  00D2               	movwf	adcon_captura_grava@menor
  8173     0D98                     i1l8401:
  8174                           
  8175                           ;adcon.c: 41:     lcd_clear();
  8176     0D98  160A  118A  230F  120A  158A  	fcall	_lcd_clear
  8177     0D9D                     i1l8403:
  8178                           
  8179                           ;adcon.c: 43:     if (gl_estado == EST_CAPTURA_E_MOSTRA) {
  8180     0D9D  3002               	movlw	2
  8181     0D9E  1683               	bsf	3,5	;RP0=1, select bank1
  8182     0D9F  1303               	bcf	3,6	;RP1=0, select bank1
  8183     0DA0  0652               	xorwf	_gl_estado^(0+128),w
  8184     0DA1  1D03               	btfss	3,2
  8185     0DA2  2DA4               	goto	u823_21
  8186     0DA3  2DA5               	goto	u823_20
  8187     0DA4                     u823_21:
  8188     0DA4  2DCD               	goto	i1l8413
  8189     0DA5                     u823_20:
  8190     0DA5                     i1l8405:
  8191                           
  8192                           ;adcon.c: 44:         for (uint8_t i = 0; i < qtd_sens; i++) {
  8193     0DA5  1283               	bcf	3,5	;RP0=0, select bank0
  8194     0DA6  1303               	bcf	3,6	;RP1=0, select bank0
  8195     0DA7  01D9               	clrf	adcon_captura_grava@i
  8196     0DA8  2DC6               	goto	i1l8411
  8197     0DA9                     i1l8407:
  8198                           
  8199                           ;adcon.c: 45:             uint16_t x = adcon_ler_canal(i);
  8200     0DA9  0859               	movf	adcon_captura_grava@i,w
  8201     0DAA  120A  158A  230D  120A  158A  	fcall	_adcon_ler_canal
  8202     0DAF  0871               	movf	?_adcon_ler_canal+1,w
  8203     0DB0  1283               	bcf	3,5	;RP0=0, select bank0
  8204     0DB1  1303               	bcf	3,6	;RP1=0, select bank0
  8205     0DB2  00D5               	movwf	adcon_captura_grava@x+1
  8206     0DB3  0870               	movf	?_adcon_ler_canal,w
  8207     0DB4  00D4               	movwf	adcon_captura_grava@x
  8208                           
  8209                           ;adcon.c: 46:             adcon_mostra(x, i);
  8210     0DB5  0855               	movf	adcon_captura_grava@x+1,w
  8211     0DB6  00BD               	movwf	adcon_mostra@t_int+1
  8212     0DB7  0854               	movf	adcon_captura_grava@x,w
  8213     0DB8  00BC               	movwf	adcon_mostra@t_int
  8214     0DB9  0859               	movf	adcon_captura_grava@i,w
  8215     0DBA  00BE               	movwf	adcon_mostra@i
  8216     0DBB  120A  158A  2383  120A  158A  	fcall	_adcon_mostra
  8217     0DC0                     i1l8409:
  8218                           
  8219                           ;adcon.c: 48:         }
  8220     0DC0  3001               	movlw	1
  8221     0DC1  00FF               	movwf	btemp+1
  8222     0DC2  087F               	movf	btemp+1,w
  8223     0DC3  1283               	bcf	3,5	;RP0=0, select bank0
  8224     0DC4  1303               	bcf	3,6	;RP1=0, select bank0
  8225     0DC5  07D9               	addwf	adcon_captura_grava@i,f
  8226     0DC6                     i1l8411:
  8227     0DC6  0857               	movf	adcon_captura_grava@qtd_sens,w
  8228     0DC7  0259               	subwf	adcon_captura_grava@i,w
  8229     0DC8  1C03               	skipc
  8230     0DC9  2DCB               	goto	u824_21
  8231     0DCA  2DCC               	goto	u824_20
  8232     0DCB                     u824_21:
  8233     0DCB  2DA9               	goto	i1l8407
  8234     0DCC                     u824_20:
  8235     0DCC  2E59               	goto	i1l258
  8236     0DCD                     i1l8413:
  8237                           
  8238                           ;adcon.c: 50:         if (gl_estado == EST_CAPTURA_E_GRAVA) {
  8239     0DCD  3003               	movlw	3
  8240     0DCE  0652               	xorwf	_gl_estado^(0+128),w
  8241     0DCF  1D03               	btfss	3,2
  8242     0DD0  2DD2               	goto	u825_21
  8243     0DD1  2DD3               	goto	u825_20
  8244     0DD2                     u825_21:
  8245     0DD2  2E59               	goto	i1l258
  8246     0DD3                     u825_20:
  8247     0DD3                     i1l8415:
  8248                           
  8249                           ;adcon.c: 51:             for (uint8_t i = 0; i < qtd_sens; i++) {
  8250     0DD3  1283               	bcf	3,5	;RP0=0, select bank0
  8251     0DD4  1303               	bcf	3,6	;RP1=0, select bank0
  8252     0DD5  01DA               	clrf	adcon_captura_grava@i_644
  8253     0DD6  2E53               	goto	i1l8445
  8254     0DD7                     i1l8417:
  8255                           
  8256                           ;adcon.c: 53:                 if (qtd_val >= 100) {
  8257     0DD7  3064               	movlw	100
  8258     0DD8  0258               	subwf	adcon_captura_grava@qtd_val,w
  8259     0DD9  1C03               	skipc
  8260     0DDA  2DDC               	goto	u826_21
  8261     0DDB  2DDD               	goto	u826_20
  8262     0DDC                     u826_21:
  8263     0DDC  2DED               	goto	i1l8427
  8264     0DDD                     u826_20:
  8265     0DDD                     i1l8419:
  8266                           
  8267                           ;adcon.c: 54:                     INTCONbits.T0IE = 0;
  8268     0DDD  128B               	bcf	11,5	;volatile
  8269     0DDE                     i1l8421:
  8270                           
  8271                           ;adcon.c: 55:                     lcd_clear();
  8272     0DDE  160A  118A  230F  120A  158A  	fcall	_lcd_clear
  8273     0DE3                     i1l8423:
  8274                           
  8275                           ;adcon.c: 56:                     lcd_puts("Memoria Cheia");
  8276     0DE3  30CA               	movlw	low (STR_16| (0+32768))
  8277     0DE4  00F3               	movwf	i1lcd_puts@str
  8278     0DE5  3087               	movlw	high (STR_16| (0+32768))
  8279     0DE6  00F4               	movwf	i1lcd_puts@str+1
  8280     0DE7  160A  118A  2706  120A  158A  	fcall	i1_lcd_puts
  8281                           
  8282                           ;adcon.c: 57:                     break;
  8283     0DEC  2E59               	goto	i1l258
  8284     0DED                     i1l8427:
  8285                           
  8286                           ;adcon.c: 60:                     t_int = adcon_ler_canal(i);
  8287     0DED  085A               	movf	adcon_captura_grava@i_644,w
  8288     0DEE  120A  158A  230D  120A  158A  	fcall	_adcon_ler_canal
  8289     0DF3  0871               	movf	?_adcon_ler_canal+1,w
  8290     0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  8291     0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  8292     0DF6  00DC               	movwf	adcon_captura_grava@t_int+1
  8293     0DF7  0870               	movf	?_adcon_ler_canal,w
  8294     0DF8  00DB               	movwf	adcon_captura_grava@t_int
  8295     0DF9                     i1l8429:
  8296                           
  8297                           ;adcon.c: 61:                     if (t_int < menor) {
  8298     0DF9  0853               	movf	adcon_captura_grava@menor+1,w
  8299     0DFA  025C               	subwf	adcon_captura_grava@t_int+1,w
  8300     0DFB  1D03               	skipz
  8301     0DFC  2DFF               	goto	u827_25
  8302     0DFD  0852               	movf	adcon_captura_grava@menor,w
  8303     0DFE  025B               	subwf	adcon_captura_grava@t_int,w
  8304     0DFF                     u827_25:
  8305     0DFF  1803               	skipnc
  8306     0E00  2E02               	goto	u827_21
  8307     0E01  2E03               	goto	u827_20
  8308     0E02                     u827_21:
  8309     0E02  2E0D               	goto	i1l8433
  8310     0E03                     u827_20:
  8311     0E03                     i1l8431:
  8312                           
  8313                           ;adcon.c: 62:                         eeprom_gravar_word(0x04, t_int);
  8314     0E03  085C               	movf	adcon_captura_grava@t_int+1,w
  8315     0E04  00F3               	movwf	i1eeprom_gravar_word@dado+1
  8316     0E05  085B               	movf	adcon_captura_grava@t_int,w
  8317     0E06  00F2               	movwf	i1eeprom_gravar_word@dado
  8318     0E07  3004               	movlw	4
  8319     0E08  160A  118A  22BD  120A  158A  	fcall	i1_eeprom_gravar_word
  8320     0E0D                     i1l8433:
  8321                           
  8322                           ;adcon.c: 64:                     if (t_int > maior) {
  8323     0E0D  1283               	bcf	3,5	;RP0=0, select bank0
  8324     0E0E  1303               	bcf	3,6	;RP1=0, select bank0
  8325     0E0F  085C               	movf	adcon_captura_grava@t_int+1,w
  8326     0E10  0251               	subwf	adcon_captura_grava@maior+1,w
  8327     0E11  1D03               	skipz
  8328     0E12  2E15               	goto	u828_25
  8329     0E13  085B               	movf	adcon_captura_grava@t_int,w
  8330     0E14  0250               	subwf	adcon_captura_grava@maior,w
  8331     0E15                     u828_25:
  8332     0E15  1803               	skipnc
  8333     0E16  2E18               	goto	u828_21
  8334     0E17  2E19               	goto	u828_20
  8335     0E18                     u828_21:
  8336     0E18  2E23               	goto	i1l257
  8337     0E19                     u828_20:
  8338     0E19                     i1l8435:
  8339                           
  8340                           ;adcon.c: 65:                         eeprom_gravar_word(0x06, t_int);
  8341     0E19  085C               	movf	adcon_captura_grava@t_int+1,w
  8342     0E1A  00F3               	movwf	i1eeprom_gravar_word@dado+1
  8343     0E1B  085B               	movf	adcon_captura_grava@t_int,w
  8344     0E1C  00F2               	movwf	i1eeprom_gravar_word@dado
  8345     0E1D  3006               	movlw	6
  8346     0E1E  160A  118A  22BD  120A  158A  	fcall	i1_eeprom_gravar_word
  8347     0E23                     i1l257:	
  8348                           ;adcon.c: 66:                     }
  8349                           
  8350                           
  8351                           ;adcon.c: 67:                     eeprom_gravar_word(0x0e + (qtd_val * 2), t_int);
  8352     0E23  1283               	bcf	3,5	;RP0=0, select bank0
  8353     0E24  1303               	bcf	3,6	;RP1=0, select bank0
  8354     0E25  085C               	movf	adcon_captura_grava@t_int+1,w
  8355     0E26  00F3               	movwf	i1eeprom_gravar_word@dado+1
  8356     0E27  085B               	movf	adcon_captura_grava@t_int,w
  8357     0E28  00F2               	movwf	i1eeprom_gravar_word@dado
  8358     0E29  0858               	movf	adcon_captura_grava@qtd_val,w
  8359     0E2A  00FD               	movwf	??_adcon_captura_grava
  8360     0E2B  077D               	addwf	??_adcon_captura_grava,w
  8361     0E2C  3E0E               	addlw	14
  8362     0E2D  160A  118A  22BD  120A  158A  	fcall	i1_eeprom_gravar_word
  8363     0E32                     i1l8437:
  8364                           
  8365                           ;adcon.c: 69:                     qtd_val++;
  8366     0E32  3001               	movlw	1
  8367     0E33  00FF               	movwf	btemp+1
  8368     0E34  087F               	movf	btemp+1,w
  8369     0E35  1283               	bcf	3,5	;RP0=0, select bank0
  8370     0E36  1303               	bcf	3,6	;RP1=0, select bank0
  8371     0E37  07D8               	addwf	adcon_captura_grava@qtd_val,f
  8372     0E38                     i1l8439:
  8373                           
  8374                           ;adcon.c: 70:                     eeprom_write(0x08, qtd_val);
  8375     0E38  0858               	movf	adcon_captura_grava@qtd_val,w
  8376     0E39  00F0               	movwf	i1eeprom_write@value
  8377     0E3A  3008               	movlw	8
  8378     0E3B  160A  118A  2460  120A  158A  	fcall	i1_eeprom_write
  8379     0E40                     i1l8441:
  8380                           
  8381                           ;adcon.c: 72:                     adcon_mostra(t_int, i);
  8382     0E40  1283               	bcf	3,5	;RP0=0, select bank0
  8383     0E41  1303               	bcf	3,6	;RP1=0, select bank0
  8384     0E42  085C               	movf	adcon_captura_grava@t_int+1,w
  8385     0E43  00BD               	movwf	adcon_mostra@t_int+1
  8386     0E44  085B               	movf	adcon_captura_grava@t_int,w
  8387     0E45  00BC               	movwf	adcon_mostra@t_int
  8388     0E46  085A               	movf	adcon_captura_grava@i_644,w
  8389     0E47  00BE               	movwf	adcon_mostra@i
  8390     0E48  120A  158A  2383  120A  158A  	fcall	_adcon_mostra
  8391     0E4D                     i1l8443:
  8392                           
  8393                           ;adcon.c: 76:             }
  8394     0E4D  3001               	movlw	1
  8395     0E4E  00FF               	movwf	btemp+1
  8396     0E4F  087F               	movf	btemp+1,w
  8397     0E50  1283               	bcf	3,5	;RP0=0, select bank0
  8398     0E51  1303               	bcf	3,6	;RP1=0, select bank0
  8399     0E52  07DA               	addwf	adcon_captura_grava@i_644,f
  8400     0E53                     i1l8445:
  8401     0E53  0857               	movf	adcon_captura_grava@qtd_sens,w
  8402     0E54  025A               	subwf	adcon_captura_grava@i_644,w
  8403     0E55  1C03               	skipc
  8404     0E56  2E58               	goto	u829_21
  8405     0E57  2E59               	goto	u829_20
  8406     0E58                     u829_21:
  8407     0E58  2DD7               	goto	i1l8417
  8408     0E59                     u829_20:
  8409     0E59                     i1l258:
  8410     0E59  0008               	return
  8411     0E5A                     __end_of_adcon_captura_grava:
  8412                           
  8413                           	psect	text32
  8414     12BD                     __ptext32:	
  8415 ;; *************** function i1_eeprom_gravar_word *****************
  8416 ;; Defined at:
  8417 ;;		line 23 in file "eeprom.c"
  8418 ;; Parameters:    Size  Location     Type
  8419 ;;  end             1    wreg     unsigned char 
  8420 ;;  dado            2    2[COMMON] unsigned int 
  8421 ;; Auto vars:     Size  Location     Type
  8422 ;;  end             1    4[COMMON] unsigned char 
  8423 ;; Return value:  Size  Location     Type
  8424 ;;                  1    wreg      void 
  8425 ;; Registers used:
  8426 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8427 ;; Tracked objects:
  8428 ;;		On entry : 0/0
  8429 ;;		On exit  : 0/0
  8430 ;;		Unchanged: 0/0
  8431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8432 ;;      Params:         2       0       0       0       0
  8433 ;;      Locals:         1       0       0       0       0
  8434 ;;      Temps:          0       0       0       0       0
  8435 ;;      Totals:         3       0       0       0       0
  8436 ;;Total ram usage:        3 bytes
  8437 ;; Hardware stack levels used: 1
  8438 ;; Hardware stack levels required when called: 1
  8439 ;; This function calls:
  8440 ;;		i1_eeprom_write
  8441 ;; This function is called by:
  8442 ;;		_adcon_captura_grava
  8443 ;;		_estado_menu_principal
  8444 ;;		_estado_menu_conf_tempo_amostra
  8445 ;;		_estado_executa_muda
  8446 ;; This function uses a non-reentrant model
  8447 ;;
  8448                           
  8449     12BD                     i1_eeprom_gravar_word:	
  8450                           ;psect for function i1_eeprom_gravar_word
  8451                           
  8452                           
  8453                           ;incstack = 0
  8454 ;; hardware stack exceeded
  8455                           ; Regs used in i1_eeprom_gravar_word: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8456                           ;i1eeprom_gravar_word@end stored from wreg
  8457     12BD  00F4               	movwf	i1eeprom_gravar_word@end
  8458     12BE                     i1l7909:
  8459                           
  8460                           ;eeprom.c: 30:     eeprom_write(end, dado >> 8);
  8461     12BE  0873               	movf	i1eeprom_gravar_word@dado+1,w
  8462     12BF  00F0               	movwf	i1eeprom_write@value
  8463     12C0  0874               	movf	i1eeprom_gravar_word@end,w
  8464     12C1  160A  118A  2460  160A  118A  	fcall	i1_eeprom_write
  8465                           
  8466                           ;eeprom.c: 32:     eeprom_write(end + 1, dado);
  8467     12C6  0872               	movf	i1eeprom_gravar_word@dado,w
  8468     12C7  00F0               	movwf	i1eeprom_write@value
  8469     12C8  0874               	movf	i1eeprom_gravar_word@end,w
  8470     12C9  3E01               	addlw	1
  8471     12CA  160A  118A  2460  160A  118A  	fcall	i1_eeprom_write
  8472     12CF                     i1l284:
  8473     12CF  0008               	return
  8474     12D0                     __end_ofi1_eeprom_gravar_word:
  8475                           
  8476                           	psect	text33
  8477     1460                     __ptext33:	
  8478 ;; *************** function i1_eeprom_write *****************
  8479 ;; Defined at:
  8480 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eewrite.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;  addr            1    wreg     unsigned char 
  8483 ;;  value           1    0[COMMON] unsigned char 
  8484 ;; Auto vars:     Size  Location     Type
  8485 ;;  addr            1    1[COMMON] unsigned char 
  8486 ;; Return value:  Size  Location     Type
  8487 ;;                  1    wreg      void 
  8488 ;; Registers used:
  8489 ;;		wreg, status,2, status,0, btemp+1
  8490 ;; Tracked objects:
  8491 ;;		On entry : 0/0
  8492 ;;		On exit  : 0/0
  8493 ;;		Unchanged: 0/0
  8494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8495 ;;      Params:         1       0       0       0       0
  8496 ;;      Locals:         1       0       0       0       0
  8497 ;;      Temps:          0       0       0       0       0
  8498 ;;      Totals:         2       0       0       0       0
  8499 ;;Total ram usage:        2 bytes
  8500 ;; Hardware stack levels used: 1
  8501 ;; This function calls:
  8502 ;;		Nothing
  8503 ;; This function is called by:
  8504 ;;		_adcon_captura_grava
  8505 ;;		_estado_menu_principal
  8506 ;;		_estado_menu_conf_quant_sensores
  8507 ;;		_estado_executa_muda
  8508 ;;		i1_eeprom_gravar_word
  8509 ;; This function uses a non-reentrant model
  8510 ;;
  8511                           
  8512     1460                     i1_eeprom_write:	
  8513                           ;psect for function i1_eeprom_write
  8514                           
  8515                           
  8516                           ;incstack = 0
  8517                           ; Regs used in i1_eeprom_write: [wreg+status,2+status,0+btemp+1]
  8518                           ;i1eeprom_write@addr stored from wreg
  8519     1460  00F1               	movwf	i1eeprom_write@addr
  8520     1461                     i1l650:	
  8521                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eewrite.c: 6: eeprom_write(u
      +                          nsigned char addr, unsigned char value);C:\Program Files\Microchip\xc8\v2.41\pic\sources
      +                          \c90\pic\__eewrite.c: 7: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__ee
      +                          write.c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value); E
      +                          ECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCO
      +                          Nbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1; EEC
      +                          ON1bits.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
  8522                           
  8523     1461                     i1l651:
  8524     1461  1683               	bsf	3,5	;RP0=1, select bank3
  8525     1462  1703               	bsf	3,6	;RP1=1, select bank3
  8526     1463  188C               	btfsc	12,1	;volsfr
  8527     1464  2C66               	goto	u761_21
  8528     1465  2C67               	goto	u761_20
  8529     1466                     u761_21:
  8530     1466  2C61               	goto	i1l651
  8531     1467                     u761_20:
  8532     1467                     i1l7733:
  8533     1467  0871               	movf	i1eeprom_write@addr,w
  8534     1468  1283               	bcf	3,5	;RP0=0, select bank2
  8535     1469  1703               	bsf	3,6	;RP1=1, select bank2
  8536     146A  008D               	movwf	13	;volatile
  8537     146B  0870               	movf	i1eeprom_write@value,w
  8538     146C  008C               	movwf	12	;volatile
  8539     146D                     i1l7735:
  8540     146D  303F               	movlw	63
  8541     146E  00FF               	movwf	btemp+1
  8542     146F  087F               	movf	btemp+1,w
  8543     1470  1683               	bsf	3,5	;RP0=1, select bank3
  8544     1471  1703               	bsf	3,6	;RP1=1, select bank3
  8545     1472  058C               	andwf	12,f	;volsfr
  8546     1473                     i1l7737:
  8547     1473  1283               	bcf	3,5	;RP0=0, select bank0
  8548     1474  1303               	bcf	3,6	;RP1=0, select bank0
  8549     1475  1003               	bcf	3,0	;volatile
  8550     1476                     i1l7739:
  8551     1476  1F8B               	btfss	11,7	;volatile
  8552     1477  2C79               	goto	u762_21
  8553     1478  2C7A               	goto	u762_20
  8554     1479                     u762_21:
  8555     1479  2C7B               	goto	i1l654
  8556     147A                     u762_20:
  8557     147A                     i1l7741:
  8558     147A  1403               	bsf	3,0	;volatile
  8559     147B                     i1l654:
  8560     147B  138B               	bcf	11,7	;volatile
  8561     147C  1683               	bsf	3,5	;RP0=1, select bank3
  8562     147D  1703               	bsf	3,6	;RP1=1, select bank3
  8563     147E  150C               	bsf	12,2	;volsfr
  8564     147F                     i1l7743:
  8565     147F  3055               	movlw	85
  8566     1480  008D               	movwf	13	;volsfr
  8567     1481  30AA               	movlw	170
  8568     1482  008D               	movwf	13	;volsfr
  8569     1483                     i1l7745:
  8570     1483  148C               	bsf	12,1	;volsfr
  8571     1484                     i1l7747:
  8572     1484  110C               	bcf	12,2	;volsfr
  8573     1485                     i1l7749:
  8574     1485  1283               	bcf	3,5	;RP0=0, select bank0
  8575     1486  1303               	bcf	3,6	;RP1=0, select bank0
  8576     1487  1C03               	btfss	3,0	;volatile
  8577     1488  2C8A               	goto	u763_21
  8578     1489  2C8B               	goto	u763_20
  8579     148A                     u763_21:
  8580     148A  2C8C               	goto	i1l657
  8581     148B                     u763_20:
  8582     148B                     i1l7751:
  8583     148B  178B               	bsf	11,7	;volatile
  8584     148C                     i1l657:
  8585     148C  0008               	return
  8586     148D                     __end_ofi1_eeprom_write:
  8587                           
  8588                           	psect	text34
  8589     130F                     __ptext34:	
  8590 ;; *************** function _lcd_clear *****************
  8591 ;; Defined at:
  8592 ;;		line 40 in file "lcd.c"
  8593 ;; Parameters:    Size  Location     Type
  8594 ;;		None
  8595 ;; Auto vars:     Size  Location     Type
  8596 ;;		None
  8597 ;; Return value:  Size  Location     Type
  8598 ;;                  1    wreg      void 
  8599 ;; Registers used:
  8600 ;;		wreg, status,2, status,0, pclath, cstack
  8601 ;; Tracked objects:
  8602 ;;		On entry : 0/0
  8603 ;;		On exit  : 0/0
  8604 ;;		Unchanged: 0/0
  8605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8606 ;;      Params:         0       0       0       0       0
  8607 ;;      Locals:         0       0       0       0       0
  8608 ;;      Temps:          2       0       0       0       0
  8609 ;;      Totals:         2       0       0       0       0
  8610 ;;Total ram usage:        2 bytes
  8611 ;; Hardware stack levels used: 1
  8612 ;; Hardware stack levels required when called: 1
  8613 ;; This function calls:
  8614 ;;		i1_lcd_write
  8615 ;; This function is called by:
  8616 ;;		_adcon_captura_grava
  8617 ;;		_estado_menu_principal
  8618 ;;		_estado_executa_muda
  8619 ;;		_mq_mostra
  8620 ;; This function uses a non-reentrant model
  8621 ;;
  8622                           
  8623     130F                     _lcd_clear:	
  8624                           ;psect for function _lcd_clear
  8625                           
  8626     130F                     i1l7825:	
  8627                           ;incstack = 0
  8628 ;; hardware stack exceeded
  8629                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  8630                           
  8631                           
  8632                           ;lcd.c: 41:     RC0 = 0;
  8633     130F  1283               	bcf	3,5	;RP0=0, select bank0
  8634     1310  1303               	bcf	3,6	;RP1=0, select bank0
  8635     1311  1007               	bcf	7,0	;volatile
  8636     1312                     i1l7827:
  8637                           
  8638                           ;lcd.c: 42:     lcd_write(0);
  8639     1312  3000               	movlw	0
  8640     1313  160A  118A  2436  160A  118A  	fcall	i1_lcd_write
  8641                           
  8642                           ;lcd.c: 43:     lcd_write(1);
  8643     1318  3001               	movlw	1
  8644     1319  160A  118A  2436  160A  118A  	fcall	i1_lcd_write
  8645     131E                     i1l7829:
  8646                           
  8647                           ;lcd.c: 44:     _delay((unsigned long)((2)*(4000000/4000.0)));
  8648     131E  3003               	movlw	3
  8649     131F  00F3               	movwf	??_lcd_clear+1
  8650     1320  3097               	movlw	151
  8651     1321  00F2               	movwf	??_lcd_clear
  8652     1322                     u855_27:
  8653     1322  0BF2               	decfsz	??_lcd_clear,f
  8654     1323  2B22               	goto	u855_27
  8655     1324  0BF3               	decfsz	??_lcd_clear+1,f
  8656     1325  2B22               	goto	u855_27
  8657     1326  2B27               	nop2
  8658     1327                     i1l86:
  8659     1327  0008               	return
  8660     1328                     __end_of_lcd_clear:
  8661                           
  8662                           	psect	text35
  8663     13BE                     __ptext35:	
  8664 ;; *************** function _eeprom_ler_word *****************
  8665 ;; Defined at:
  8666 ;;		line 4 in file "eeprom.c"
  8667 ;; Parameters:    Size  Location     Type
  8668 ;;  end             1    wreg     unsigned char 
  8669 ;; Auto vars:     Size  Location     Type
  8670 ;;  end             1    5[COMMON] unsigned char 
  8671 ;;  temp_int        2    6[COMMON] unsigned int 
  8672 ;; Return value:  Size  Location     Type
  8673 ;;                  2    1[COMMON] unsigned int 
  8674 ;; Registers used:
  8675 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8676 ;; Tracked objects:
  8677 ;;		On entry : 0/0
  8678 ;;		On exit  : 0/0
  8679 ;;		Unchanged: 0/0
  8680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8681 ;;      Params:         2       0       0       0       0
  8682 ;;      Locals:         3       0       0       0       0
  8683 ;;      Temps:          2       0       0       0       0
  8684 ;;      Totals:         7       0       0       0       0
  8685 ;;Total ram usage:        7 bytes
  8686 ;; Hardware stack levels used: 1
  8687 ;; Hardware stack levels required when called: 1
  8688 ;; This function calls:
  8689 ;;		i1_eeprom_read
  8690 ;; This function is called by:
  8691 ;;		_handler
  8692 ;;		_adcon_captura_grava
  8693 ;;		_estado_menu_principal
  8694 ;;		_estado_executa_muda
  8695 ;; This function uses a non-reentrant model
  8696 ;;
  8697                           
  8698     13BE                     _eeprom_ler_word:	
  8699                           ;psect for function _eeprom_ler_word
  8700                           
  8701                           
  8702                           ;incstack = 0
  8703 ;; hardware stack exceeded
  8704                           ; Regs used in _eeprom_ler_word: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8705                           ;eeprom_ler_word@end stored from wreg
  8706     13BE  00F5               	movwf	eeprom_ler_word@end
  8707     13BF                     i1l7831:
  8708     13BF                     i1l7833:
  8709                           
  8710                           ;eeprom.c: 14:     temp_int = eeprom_read(end+1);
  8711     13BF  0875               	movf	eeprom_ler_word@end,w
  8712     13C0  3E01               	addlw	1
  8713     13C1  160A  118A  22F8  160A  118A  	fcall	i1_eeprom_read
  8714     13C6  00F3               	movwf	??_eeprom_ler_word
  8715     13C7  01F4               	clrf	??_eeprom_ler_word+1
  8716     13C8  0873               	movf	??_eeprom_ler_word,w
  8717     13C9  00F6               	movwf	eeprom_ler_word@temp_int
  8718     13CA  0874               	movf	??_eeprom_ler_word+1,w
  8719     13CB  00F7               	movwf	eeprom_ler_word@temp_int+1
  8720     13CC                     i1l7835:
  8721                           
  8722                           ;eeprom.c: 17:     temp_int = temp_int + (eeprom_read(end) << 8);
  8723     13CC  0875               	movf	eeprom_ler_word@end,w
  8724     13CD  160A  118A  22F8  160A  118A  	fcall	i1_eeprom_read
  8725     13D2  00F3               	movwf	??_eeprom_ler_word
  8726     13D3  01F4               	clrf	??_eeprom_ler_word+1
  8727     13D4  0873               	movf	??_eeprom_ler_word,w
  8728     13D5  00F4               	movwf	??_eeprom_ler_word+1
  8729     13D6  01F3               	clrf	??_eeprom_ler_word
  8730     13D7  0876               	movf	eeprom_ler_word@temp_int,w
  8731     13D8  0773               	addwf	??_eeprom_ler_word,w
  8732     13D9  00F6               	movwf	eeprom_ler_word@temp_int
  8733     13DA  0877               	movf	eeprom_ler_word@temp_int+1,w
  8734     13DB  1803               	skipnc
  8735     13DC  0A77               	incf	eeprom_ler_word@temp_int+1,w
  8736     13DD  0774               	addwf	??_eeprom_ler_word+1,w
  8737     13DE  00F7               	movwf	eeprom_ler_word@temp_int+1
  8738     13DF                     i1l7837:
  8739                           
  8740                           ;eeprom.c: 20:     return temp_int;
  8741     13DF  0877               	movf	eeprom_ler_word@temp_int+1,w
  8742     13E0  00F2               	movwf	?_eeprom_ler_word+1
  8743     13E1  0876               	movf	eeprom_ler_word@temp_int,w
  8744     13E2  00F1               	movwf	?_eeprom_ler_word
  8745     13E3                     i1l281:
  8746     13E3  0008               	return
  8747     13E4                     __end_of_eeprom_ler_word:
  8748                           
  8749                           	psect	text36
  8750     12F8                     __ptext36:	
  8751 ;; *************** function i1_eeprom_read *****************
  8752 ;; Defined at:
  8753 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eeread.c"
  8754 ;; Parameters:    Size  Location     Type
  8755 ;;  addr            1    wreg     unsigned char 
  8756 ;; Auto vars:     Size  Location     Type
  8757 ;;  addr            1    0[COMMON] unsigned char 
  8758 ;; Return value:  Size  Location     Type
  8759 ;;                  1    wreg      unsigned char 
  8760 ;; Registers used:
  8761 ;;		wreg, status,2, status,0, btemp+1
  8762 ;; Tracked objects:
  8763 ;;		On entry : 0/0
  8764 ;;		On exit  : 0/0
  8765 ;;		Unchanged: 0/0
  8766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8767 ;;      Params:         0       0       0       0       0
  8768 ;;      Locals:         1       0       0       0       0
  8769 ;;      Temps:          0       0       0       0       0
  8770 ;;      Totals:         1       0       0       0       0
  8771 ;;Total ram usage:        1 bytes
  8772 ;; Hardware stack levels used: 1
  8773 ;; This function calls:
  8774 ;;		Nothing
  8775 ;; This function is called by:
  8776 ;;		_adcon_captura_grava
  8777 ;;		_eeprom_ler_word
  8778 ;;		_rs232_transmite
  8779 ;;		_estado_menu_principal
  8780 ;;		_estado_ver_todos
  8781 ;;		_estado_executa_muda
  8782 ;; This function uses a non-reentrant model
  8783 ;;
  8784                           
  8785     12F8                     i1_eeprom_read:	
  8786                           ;psect for function i1_eeprom_read
  8787                           
  8788                           
  8789                           ;incstack = 0
  8790                           ; Regs used in i1_eeprom_read: [wreg+status,2+status,0+btemp+1]
  8791                           ;i1eeprom_read@addr stored from wreg
  8792     12F8  00F0               	movwf	i1eeprom_read@addr
  8793     12F9                     i1l631:	
  8794                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eeread.c: 6: eeprom_read(uns
      +                          igned char addr);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eeread.c: 7:
      +                           {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eeread.c: 8:  do
  8795                           
  8796     12F9  0064               	clrwdt	;# 
  8797     12FA  1683               	bsf	3,5	;RP0=1, select bank3
  8798     12FB  1703               	bsf	3,6	;RP1=1, select bank3
  8799     12FC  188C               	btfsc	12,1	;volsfr
  8800     12FD  2AFF               	goto	u760_21
  8801     12FE  2B00               	goto	u760_20
  8802     12FF                     u760_21:
  8803     12FF  2AF9               	goto	i1l631
  8804     1300                     u760_20:
  8805     1300                     i1l7729:
  8806                           
  8807                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eeread.c: 18:  return ( EEAD
      +                          R = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  8808     1300  0870               	movf	i1eeprom_read@addr,w
  8809     1301  1283               	bcf	3,5	;RP0=0, select bank2
  8810     1302  1703               	bsf	3,6	;RP1=1, select bank2
  8811     1303  008D               	movwf	13	;volatile
  8812     1304  303F               	movlw	63
  8813     1305  00FF               	movwf	btemp+1
  8814     1306  087F               	movf	btemp+1,w
  8815     1307  1683               	bsf	3,5	;RP0=1, select bank3
  8816     1308  1703               	bsf	3,6	;RP1=1, select bank3
  8817     1309  058C               	andwf	12,f	;volsfr
  8818     130A  140C               	bsf	12,0	;volsfr
  8819     130B  1283               	bcf	3,5	;RP0=0, select bank2
  8820     130C  1703               	bsf	3,6	;RP1=1, select bank2
  8821     130D  080C               	movf	12,w	;volatile
  8822     130E                     i1l633:
  8823     130E  0008               	return
  8824     130F                     __end_ofi1_eeprom_read:
  8825                           
  8826                           	psect	text37
  8827     0B83                     __ptext37:	
  8828 ;; *************** function _adcon_mostra *****************
  8829 ;; Defined at:
  8830 ;;		line 110 in file "adcon.c"
  8831 ;; Parameters:    Size  Location     Type
  8832 ;;  t_int           2   28[BANK0 ] unsigned int 
  8833 ;;  i               1   30[BANK0 ] unsigned char 
  8834 ;; Auto vars:     Size  Location     Type
  8835 ;;  temp_str        9   35[BANK0 ] unsigned char [9]
  8836 ;;  temp_div        4   44[BANK0 ] struct .
  8837 ;; Return value:  Size  Location     Type
  8838 ;;                  1    wreg      void 
  8839 ;; Registers used:
  8840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8841 ;; Tracked objects:
  8842 ;;		On entry : 0/0
  8843 ;;		On exit  : 0/0
  8844 ;;		Unchanged: 0/0
  8845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8846 ;;      Params:         0       3       0       0       0
  8847 ;;      Locals:         0      13       0       0       0
  8848 ;;      Temps:          0       4       0       0       0
  8849 ;;      Totals:         0      20       0       0       0
  8850 ;;Total ram usage:       20 bytes
  8851 ;; Hardware stack levels used: 1
  8852 ;; Hardware stack levels required when called: 3
  8853 ;; This function calls:
  8854 ;;		___bmul
  8855 ;;		_div
  8856 ;;		_sprintf
  8857 ;;		i1_lcd_goto
  8858 ;;		i1_lcd_puts
  8859 ;; This function is called by:
  8860 ;;		_adcon_captura_grava
  8861 ;;		_estado_menu_principal
  8862 ;; This function uses a non-reentrant model
  8863 ;;
  8864                           
  8865     0B83                     _adcon_mostra:	
  8866                           ;psect for function _adcon_mostra
  8867                           
  8868     0B83                     i1l7929:	
  8869                           ;incstack = 0
  8870 ;; hardware stack exceeded
  8871                           ; Regs used in _adcon_mostra: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8872                           
  8873                           
  8874                           ;adcon.c: 114:     char temp_str[9] = {0};
  8875     0B83  3043               	movlw	adcon_mostra@temp_str& (0+255)
  8876     0B84  0084               	movwf	4
  8877     0B85  30C0               	movlw	low adcon_mostra@F1474
  8878     0B86  1283               	bcf	3,5	;RP0=0, select bank0
  8879     0B87  1303               	bcf	3,6	;RP1=0, select bank0
  8880     0B88  00BF               	movwf	??_adcon_mostra
  8881     0B89  0804               	movf	4,w
  8882     0B8A  00C0               	movwf	??_adcon_mostra+1
  8883     0B8B  3009               	movlw	9
  8884     0B8C  00C1               	movwf	??_adcon_mostra+2
  8885     0B8D                     u783_20:
  8886     0B8D  083F               	movf	??_adcon_mostra,w
  8887     0B8E  0084               	movwf	4
  8888     0B8F  1383               	bcf	3,7	;select IRP bank1
  8889     0B90  0800               	movf	0,w
  8890     0B91  00C2               	movwf	??_adcon_mostra+3
  8891     0B92  0ABF               	incf	??_adcon_mostra,f
  8892     0B93  0840               	movf	??_adcon_mostra+1,w
  8893     0B94  0084               	movwf	4
  8894     0B95  0842               	movf	??_adcon_mostra+3,w
  8895     0B96  0080               	movwf	0
  8896     0B97  0AC0               	incf	??_adcon_mostra+1,f
  8897     0B98  0BC1               	decfsz	??_adcon_mostra+2,f
  8898     0B99  2B8D               	goto	u783_20
  8899     0B9A                     i1l7931:
  8900                           
  8901                           ;adcon.c: 116:     div_t temp_div;;adcon.c: 118:     temp_div = div(t_int, 10);
  8902     0B9A  083D               	movf	adcon_mostra@t_int+1,w
  8903     0B9B  00F9               	movwf	div@number+1
  8904     0B9C  083C               	movf	adcon_mostra@t_int,w
  8905     0B9D  00F8               	movwf	div@number
  8906     0B9E  300A               	movlw	10
  8907     0B9F  00FA               	movwf	div@denom
  8908     0BA0  3000               	movlw	0
  8909     0BA1  00FB               	movwf	div@denom+1
  8910     0BA2  160A  118A  24BB  120A  158A  	fcall	_div
  8911     0BA7  087B               	movf	?_div+3,w
  8912     0BA8  1283               	bcf	3,5	;RP0=0, select bank0
  8913     0BA9  1303               	bcf	3,6	;RP1=0, select bank0
  8914     0BAA  00CF               	movwf	adcon_mostra@temp_div+3
  8915     0BAB  087A               	movf	?_div+2,w
  8916     0BAC  00CE               	movwf	adcon_mostra@temp_div+2
  8917     0BAD  0879               	movf	?_div+1,w
  8918     0BAE  00CD               	movwf	adcon_mostra@temp_div+1
  8919     0BAF  0878               	movf	?_div,w
  8920     0BB0  00CC               	movwf	adcon_mostra@temp_div
  8921     0BB1                     i1l7933:
  8922                           
  8923                           ;adcon.c: 122:     sprintf(temp_str, "%d=%d.%d", menu_quant_sensores[i].i_quant_sensores
      +                          , temp_div.quot, temp_div.rem);
  8924     0BB1  3050               	movlw	low (STR_17| (0+32768))
  8925     0BB2  00AF               	movwf	sprintf@f
  8926     0BB3  3088               	movlw	high (STR_17| (0+32768))
  8927     0BB4  00B0               	movwf	sprintf@f+1
  8928     0BB5  3003               	movlw	3
  8929     0BB6  00F0               	movwf	___bmul@multiplicand
  8930     0BB7  083E               	movf	adcon_mostra@i,w
  8931     0BB8  160A  118A  22E3  120A  158A  	fcall	___bmul
  8932     0BBD  3E02               	addlw	2
  8933     0BBE  3E2E               	addlw	low (_menu_quant_sensores| (0+32768))
  8934     0BBF  0084               	movwf	4
  8935     0BC0  3087               	movlw	high (_menu_quant_sensores| (0+32768))
  8936     0BC1  1803               	skipnc
  8937     0BC2  3E01               	addlw	1
  8938     0BC3  1283               	bcf	3,5	;RP0=0, select bank0
  8939     0BC4  1303               	bcf	3,6	;RP1=0, select bank0
  8940     0BC5  00FF               	movwf	btemp+1
  8941     0BC6  120A  118A  2700  120A  158A  	fcall	stringtab
  8942     0BCB  00B1               	movwf	?_sprintf+2
  8943     0BCC  01B2               	clrf	?_sprintf+3
  8944     0BCD  1BB1               	btfsc	?_sprintf+2,7
  8945     0BCE  03B2               	decf	?_sprintf+3,f
  8946     0BCF  084F               	movf	adcon_mostra@temp_div+3,w
  8947     0BD0  00B4               	movwf	?_sprintf+5
  8948     0BD1  084E               	movf	adcon_mostra@temp_div+2,w
  8949     0BD2  00B3               	movwf	?_sprintf+4
  8950     0BD3  084D               	movf	adcon_mostra@temp_div+1,w
  8951     0BD4  00B6               	movwf	?_sprintf+7
  8952     0BD5  084C               	movf	adcon_mostra@temp_div,w
  8953     0BD6  00B5               	movwf	?_sprintf+6
  8954     0BD7  3043               	movlw	(low (adcon_mostra@temp_str| 0))& (0+255)
  8955     0BD8  160A  118A  2377  120A  158A  	fcall	_sprintf
  8956     0BDD                     i1l7935:
  8957                           
  8958                           ;adcon.c: 135:     lcd_goto(LCD_POSICAO[i].y, LCD_POSICAO[i].x);
  8959     0BDD  1403               	setc
  8960     0BDE  1283               	bcf	3,5	;RP0=0, select bank0
  8961     0BDF  1303               	bcf	3,6	;RP1=0, select bank0
  8962     0BE0  0D3E               	rlf	adcon_mostra@i,w
  8963     0BE1  3E44               	addlw	low (_LCD_POSICAO| (0+32768))
  8964     0BE2  0084               	movwf	4
  8965     0BE3  3087               	movlw	high (_LCD_POSICAO| (0+32768))
  8966     0BE4  1803               	skipnc
  8967     0BE5  3E01               	addlw	1
  8968     0BE6  00FF               	movwf	btemp+1
  8969     0BE7  120A  118A  2700  120A  158A  	fcall	stringtab
  8970     0BEC  00F2               	movwf	i1lcd_goto@x
  8971     0BED  083E               	movf	adcon_mostra@i,w
  8972     0BEE  00BF               	movwf	??_adcon_mostra
  8973     0BEF  073F               	addwf	??_adcon_mostra,w
  8974     0BF0  3E44               	addlw	low (_LCD_POSICAO| (0+32768))
  8975     0BF1  0084               	movwf	4
  8976     0BF2  3087               	movlw	high (_LCD_POSICAO| (0+32768))
  8977     0BF3  1803               	skipnc
  8978     0BF4  3E01               	addlw	1
  8979     0BF5  00FF               	movwf	btemp+1
  8980     0BF6  120A  118A  2700  120A  158A  	fcall	stringtab
  8981     0BFB  160A  118A  248D  120A  158A  	fcall	i1_lcd_goto
  8982     0C00                     i1l7937:
  8983                           
  8984                           ;adcon.c: 136:     lcd_puts(temp_str);
  8985     0C00  3043               	movlw	(low (adcon_mostra@temp_str| 0))& (0+255)
  8986     0C01  00F3               	movwf	i1lcd_puts@str
  8987     0C02  3000               	movlw	0
  8988     0C03  00F4               	movwf	i1lcd_puts@str+1
  8989     0C04  160A  118A  2706  120A  158A  	fcall	i1_lcd_puts
  8990     0C09                     i1l271:
  8991     0C09  0008               	return
  8992     0C0A                     __end_of_adcon_mostra:
  8993                           
  8994                           	psect	text38
  8995     1706                     __ptext38:	
  8996 ;; *************** function i1_lcd_puts *****************
  8997 ;; Defined at:
  8998 ;;		line 65 in file "lcd.c"
  8999 ;; Parameters:    Size  Location     Type
  9000 ;;  str             2    3[COMMON] PTR const unsigned char 
  9001 ;;		 -> STR_47(11), STR_44(12), STR_42(12), estado_executa_muda@tmp(17), 
  9002 ;;		 -> STR_41(14), STR_40(7), STR_39(7), STR_38(7), 
  9003 ;;		 -> STR_37(6), STR_36(7), STR_35(7), STR_34(6), 
  9004 ;;		 -> STR_33(11), STR_32(11), STR_31(11), STR_30(9), 
  9005 ;;		 -> STR_29(15), STR_28(14), STR_27(7), STR_26(8), 
  9006 ;;		 -> STR_25(10), STR_24(15), STR_23(9), mq_mostra@temp_str(16), 
  9007 ;;		 -> STR_21(11), STR_20(11), STR_19(11), STR_18(9), 
  9008 ;;		 -> adcon_mostra@temp_str(9), STR_16(14), STR_15(11), STR_14(11), 
  9009 ;;		 -> STR_13(11), STR_12(9), STR_11(7), STR_10(7), 
  9010 ;;		 -> STR_9(7), STR_8(6), STR_7(7), STR_6(7), 
  9011 ;;		 -> STR_5(6), STR_4(11), STR_3(2), STR_2(14), 
  9012 ;; Auto vars:     Size  Location     Type
  9013 ;;  cmd             1    6[COMMON] unsigned char 
  9014 ;; Return value:  Size  Location     Type
  9015 ;;                  1    wreg      void 
  9016 ;; Registers used:
  9017 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9018 ;; Tracked objects:
  9019 ;;		On entry : 0/0
  9020 ;;		On exit  : 0/0
  9021 ;;		Unchanged: 0/0
  9022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9023 ;;      Params:         2       0       0       0       0
  9024 ;;      Locals:         1       0       0       0       0
  9025 ;;      Temps:          1       0       0       0       0
  9026 ;;      Totals:         4       0       0       0       0
  9027 ;;Total ram usage:        4 bytes
  9028 ;; Hardware stack levels used: 1
  9029 ;; Hardware stack levels required when called: 1
  9030 ;; This function calls:
  9031 ;;		i1_lcd_write
  9032 ;; This function is called by:
  9033 ;;		_adcon_captura_grava
  9034 ;;		_adcon_mostra
  9035 ;;		_estado_menu_principal
  9036 ;;		_estado_executa_muda
  9037 ;; This function uses a non-reentrant model
  9038 ;;
  9039                           
  9040     1706                     i1_lcd_puts:	
  9041                           ;psect for function i1_lcd_puts
  9042                           
  9043     1706                     i1l7893:	
  9044                           ;incstack = 0
  9045 ;; hardware stack exceeded
  9046                           ; Regs used in i1_lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9047                           
  9048                           
  9049                           ;lcd.c: 66:   uint8_t cmd;;lcd.c: 67:   RC0 = 1;
  9050     1706  1283               	bcf	3,5	;RP0=0, select bank0
  9051     1707  1303               	bcf	3,6	;RP1=0, select bank0
  9052     1708  1407               	bsf	7,0	;volatile
  9053                           
  9054                           ;lcd.c: 69:   while (*str) {
  9055     1709  2F40               	goto	i1l7907
  9056     170A                     i1l7895:
  9057                           
  9058                           ;lcd.c: 106:       cmd = *str >> 4;
  9059     170A  0874               	movf	i1lcd_puts@str+1,w
  9060     170B  00FF               	movwf	btemp+1
  9061     170C  0873               	movf	i1lcd_puts@str,w
  9062     170D  0084               	movwf	4
  9063     170E  120A  118A  2700  160A  118A  	fcall	stringtab
  9064     1713  00F5               	movwf	??i1_lcd_puts
  9065     1714  3004               	movlw	4
  9066     1715                     u777_25:
  9067     1715  1003               	clrc
  9068     1716  0CF5               	rrf	??i1_lcd_puts,f
  9069     1717  3EFF               	addlw	-1
  9070     1718  1D03               	skipz
  9071     1719  2F15               	goto	u777_25
  9072     171A  0875               	movf	??i1_lcd_puts,w
  9073     171B  00F6               	movwf	i1lcd_puts@cmd
  9074     171C                     i1l7897:
  9075                           
  9076                           ;lcd.c: 107:       lcd_write(cmd);
  9077     171C  0876               	movf	i1lcd_puts@cmd,w
  9078     171D  160A  118A  2436  160A  118A  	fcall	i1_lcd_write
  9079     1722                     i1l7899:
  9080                           
  9081                           ;lcd.c: 108:       _delay((unsigned long)((40)*(4000000/4000000.0)));
  9082     1722  300D               	movlw	13
  9083     1723  00F5               	movwf	??i1_lcd_puts
  9084     1724                     u856_27:
  9085     1724  0BF5               	decfsz	??i1_lcd_puts,f
  9086     1725  2F24               	goto	u856_27
  9087     1726                     i1l7901:
  9088                           
  9089                           ;lcd.c: 111:       lcd_write(*str);
  9090     1726  0874               	movf	i1lcd_puts@str+1,w
  9091     1727  1283               	bcf	3,5	;RP0=0, select bank0
  9092     1728  1303               	bcf	3,6	;RP1=0, select bank0
  9093     1729  00FF               	movwf	btemp+1
  9094     172A  0873               	movf	i1lcd_puts@str,w
  9095     172B  0084               	movwf	4
  9096     172C  120A  118A  2700  160A  118A  	fcall	stringtab
  9097     1731  160A  118A  2436  160A  118A  	fcall	i1_lcd_write
  9098     1736                     i1l7903:
  9099                           
  9100                           ;lcd.c: 112:        _delay((unsigned long)((40)*(4000000/4000000.0)));
  9101     1736  300D               	movlw	13
  9102     1737  00F5               	movwf	??i1_lcd_puts
  9103     1738                     u857_27:
  9104     1738  0BF5               	decfsz	??i1_lcd_puts,f
  9105     1739  2F38               	goto	u857_27
  9106     173A                     i1l7905:
  9107                           
  9108                           ;lcd.c: 115:     str++;
  9109     173A  3001               	movlw	1
  9110     173B  07F3               	addwf	i1lcd_puts@str,f
  9111     173C  1803               	skipnc
  9112     173D  0AF4               	incf	i1lcd_puts@str+1,f
  9113     173E  3000               	movlw	0
  9114     173F  07F4               	addwf	i1lcd_puts@str+1,f
  9115     1740                     i1l7907:
  9116                           
  9117                           ;lcd.c: 69:   while (*str) {
  9118     1740  0874               	movf	i1lcd_puts@str+1,w
  9119     1741  1283               	bcf	3,5	;RP0=0, select bank0
  9120     1742  1303               	bcf	3,6	;RP1=0, select bank0
  9121     1743  00FF               	movwf	btemp+1
  9122     1744  0873               	movf	i1lcd_puts@str,w
  9123     1745  0084               	movwf	4
  9124     1746  120A  118A  2700  160A  118A  	fcall	stringtab
  9125     174B  3A00               	xorlw	0
  9126     174C  1D03               	skipz
  9127     174D  2F4F               	goto	u778_21
  9128     174E  2F50               	goto	u778_20
  9129     174F                     u778_21:
  9130     174F  2F0A               	goto	i1l7895
  9131     1750                     u778_20:
  9132     1750                     i1l99:
  9133     1750  0008               	return
  9134     1751                     __end_ofi1_lcd_puts:
  9135                           
  9136                           	psect	text39
  9137     148D                     __ptext39:	
  9138 ;; *************** function i1_lcd_goto *****************
  9139 ;; Defined at:
  9140 ;;		line 47 in file "lcd.c"
  9141 ;; Parameters:    Size  Location     Type
  9142 ;;  y               1    wreg     unsigned char 
  9143 ;;  x               1    2[COMMON] unsigned char 
  9144 ;; Auto vars:     Size  Location     Type
  9145 ;;  y               1    5[COMMON] unsigned char 
  9146 ;; Return value:  Size  Location     Type
  9147 ;;                  1    wreg      void 
  9148 ;; Registers used:
  9149 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9150 ;; Tracked objects:
  9151 ;;		On entry : 0/0
  9152 ;;		On exit  : 0/0
  9153 ;;		Unchanged: 0/0
  9154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9155 ;;      Params:         1       0       0       0       0
  9156 ;;      Locals:         1       0       0       0       0
  9157 ;;      Temps:          2       0       0       0       0
  9158 ;;      Totals:         4       0       0       0       0
  9159 ;;Total ram usage:        4 bytes
  9160 ;; Hardware stack levels used: 1
  9161 ;; Hardware stack levels required when called: 1
  9162 ;; This function calls:
  9163 ;;		i1_lcd_write
  9164 ;; This function is called by:
  9165 ;;		_adcon_mostra
  9166 ;;		_estado_executa_muda
  9167 ;; This function uses a non-reentrant model
  9168 ;;
  9169                           
  9170     148D                     i1_lcd_goto:	
  9171                           ;psect for function i1_lcd_goto
  9172                           
  9173                           
  9174                           ;incstack = 0
  9175 ;; hardware stack exceeded
  9176                           ; Regs used in i1_lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9177                           ;i1lcd_goto@y stored from wreg
  9178     148D  00F5               	movwf	i1lcd_goto@y
  9179     148E                     i1l7875:
  9180                           
  9181                           ;lcd.c: 48:     RC0 = 0;
  9182     148E  1283               	bcf	3,5	;RP0=0, select bank0
  9183     148F  1303               	bcf	3,6	;RP1=0, select bank0
  9184     1490  1007               	bcf	7,0	;volatile
  9185                           
  9186                           ;lcd.c: 49:     switch (y) {
  9187     1491  2CA0               	goto	i1l7883
  9188     1492                     i1l7877:
  9189                           
  9190                           ;lcd.c: 51:             lcd_write(8);
  9191     1492  3008               	movlw	8
  9192     1493  160A  118A  2436  160A  118A  	fcall	i1_lcd_write
  9193                           
  9194                           ;lcd.c: 52:             break;
  9195     1498  2CB0               	goto	i1l7885
  9196     1499                     i1l7879:
  9197                           
  9198                           ;lcd.c: 54:             lcd_write(0xc);
  9199     1499  300C               	movlw	12
  9200     149A  160A  118A  2436  160A  118A  	fcall	i1_lcd_write
  9201                           
  9202                           ;lcd.c: 55:             break;
  9203     149F  2CB0               	goto	i1l7885
  9204     14A0                     i1l7883:
  9205     14A0  0875               	movf	i1lcd_goto@y,w
  9206     14A1  00F3               	movwf	??i1_lcd_goto
  9207     14A2  01F4               	clrf	??i1_lcd_goto+1
  9208                           
  9209                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9210                           ; Switch size 1, requested type "simple"
  9211                           ; Number of cases is 1, Range of values is 0 to 0
  9212                           ; switch strategies available:
  9213                           ; Name         Instructions Cycles
  9214                           ; simple_byte            4     3 (average)
  9215                           ; direct_byte           11     8 (fixed)
  9216                           ; jumptable            260     6 (fixed)
  9217                           ;	Chosen strategy is simple_byte
  9218     14A3  0874               	movf	??i1_lcd_goto+1,w
  9219     14A4  3A00               	xorlw	0	; case 0
  9220     14A5  1903               	skipnz
  9221     14A6  2CA8               	goto	i1l8897
  9222     14A7  2CB0               	goto	i1l7885
  9223     14A8                     i1l8897:
  9224                           
  9225                           ; Switch size 1, requested type "simple"
  9226                           ; Number of cases is 2, Range of values is 1 to 2
  9227                           ; switch strategies available:
  9228                           ; Name         Instructions Cycles
  9229                           ; simple_byte            7     4 (average)
  9230                           ; direct_byte           17    11 (fixed)
  9231                           ; jumptable            263     9 (fixed)
  9232                           ;	Chosen strategy is simple_byte
  9233     14A8  0873               	movf	??i1_lcd_goto,w
  9234     14A9  3A01               	xorlw	1	; case 1
  9235     14AA  1903               	skipnz
  9236     14AB  2C92               	goto	i1l7877
  9237     14AC  3A03               	xorlw	3	; case 2
  9238     14AD  1903               	skipnz
  9239     14AE  2C99               	goto	i1l7879
  9240     14AF  2CB0               	goto	i1l7885
  9241     14B0                     i1l7885:
  9242                           
  9243                           ;lcd.c: 57:     lcd_write(x);
  9244     14B0  0872               	movf	i1lcd_goto@x,w
  9245     14B1  160A  118A  2436  160A  118A  	fcall	i1_lcd_write
  9246     14B6                     i1l7887:
  9247                           
  9248                           ;lcd.c: 58:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  9249     14B6  300D               	movlw	13
  9250     14B7  00F3               	movwf	??i1_lcd_goto
  9251     14B8                     u858_27:
  9252     14B8  0BF3               	decfsz	??i1_lcd_goto,f
  9253     14B9  2CB8               	goto	u858_27
  9254     14BA                     i1l93:
  9255     14BA  0008               	return
  9256     14BB                     __end_ofi1_lcd_goto:
  9257                           
  9258                           	psect	text40
  9259     1436                     __ptext40:	
  9260 ;; *************** function i1_lcd_write *****************
  9261 ;; Defined at:
  9262 ;;		line 14 in file "lcd.c"
  9263 ;; Parameters:    Size  Location     Type
  9264 ;;  c               1    wreg     unsigned char 
  9265 ;; Auto vars:     Size  Location     Type
  9266 ;;  c               1    1[COMMON] unsigned char 
  9267 ;; Return value:  Size  Location     Type
  9268 ;;                  1    wreg      void 
  9269 ;; Registers used:
  9270 ;;		wreg
  9271 ;; Tracked objects:
  9272 ;;		On entry : 0/0
  9273 ;;		On exit  : 0/0
  9274 ;;		Unchanged: 0/0
  9275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9276 ;;      Params:         0       0       0       0       0
  9277 ;;      Locals:         1       0       0       0       0
  9278 ;;      Temps:          1       0       0       0       0
  9279 ;;      Totals:         2       0       0       0       0
  9280 ;;Total ram usage:        2 bytes
  9281 ;; Hardware stack levels used: 1
  9282 ;; This function calls:
  9283 ;;		Nothing
  9284 ;; This function is called by:
  9285 ;;		_lcd_clear
  9286 ;;		i1_lcd_goto
  9287 ;;		i1_lcd_puts
  9288 ;; This function uses a non-reentrant model
  9289 ;;
  9290                           
  9291     1436                     i1_lcd_write:	
  9292                           ;psect for function i1_lcd_write
  9293                           
  9294                           
  9295                           ;incstack = 0
  9296 ;; hardware stack exceeded
  9297                           ; Regs used in i1_lcd_write: [wreg]
  9298                           ;i1lcd_write@c stored from wreg
  9299     1436  00F1               	movwf	i1lcd_write@c
  9300     1437                     i1l7713:
  9301                           
  9302                           ;lcd.c: 15:     if (c & 0b00000001) {
  9303     1437  1C71               	btfss	i1lcd_write@c,0
  9304     1438  2C3A               	goto	u756_21
  9305     1439  2C3B               	goto	u756_20
  9306     143A                     u756_21:
  9307     143A  2C3F               	goto	i1l75
  9308     143B                     u756_20:
  9309     143B                     i1l7715:
  9310                           
  9311                           ;lcd.c: 16:         RC2 = 1;
  9312     143B  1283               	bcf	3,5	;RP0=0, select bank0
  9313     143C  1303               	bcf	3,6	;RP1=0, select bank0
  9314     143D  1507               	bsf	7,2	;volatile
  9315                           
  9316                           ;lcd.c: 17:     } else {
  9317     143E  2C42               	goto	i1l76
  9318     143F                     i1l75:
  9319                           
  9320                           ;lcd.c: 18:         RC2 = 0;
  9321     143F  1283               	bcf	3,5	;RP0=0, select bank0
  9322     1440  1303               	bcf	3,6	;RP1=0, select bank0
  9323     1441  1107               	bcf	7,2	;volatile
  9324     1442                     i1l76:	
  9325                           ;lcd.c: 19:     }
  9326                           
  9327                           
  9328                           ;lcd.c: 20:     if (c & 0b00000010) {
  9329     1442  1CF1               	btfss	i1lcd_write@c,1
  9330     1443  2C45               	goto	u757_21
  9331     1444  2C46               	goto	u757_20
  9332     1445                     u757_21:
  9333     1445  2C48               	goto	i1l77
  9334     1446                     u757_20:
  9335     1446                     i1l7717:
  9336                           
  9337                           ;lcd.c: 21:         RB2 = 1;
  9338     1446  1506               	bsf	6,2	;volatile
  9339                           
  9340                           ;lcd.c: 22:     } else {
  9341     1447  2C49               	goto	i1l78
  9342     1448                     i1l77:
  9343                           
  9344                           ;lcd.c: 23:         RB2 = 0;
  9345     1448  1106               	bcf	6,2	;volatile
  9346     1449                     i1l78:	
  9347                           ;lcd.c: 24:     }
  9348                           
  9349                           
  9350                           ;lcd.c: 25:     if (c & 0b00000100) {
  9351     1449  1D71               	btfss	i1lcd_write@c,2
  9352     144A  2C4C               	goto	u758_21
  9353     144B  2C4D               	goto	u758_20
  9354     144C                     u758_21:
  9355     144C  2C4F               	goto	i1l79
  9356     144D                     u758_20:
  9357     144D                     i1l7719:
  9358                           
  9359                           ;lcd.c: 26:         RB1 = 1;
  9360     144D  1486               	bsf	6,1	;volatile
  9361                           
  9362                           ;lcd.c: 27:     } else {
  9363     144E  2C50               	goto	i1l80
  9364     144F                     i1l79:
  9365                           
  9366                           ;lcd.c: 28:         RB1 = 0;
  9367     144F  1086               	bcf	6,1	;volatile
  9368     1450                     i1l80:	
  9369                           ;lcd.c: 29:     }
  9370                           
  9371                           
  9372                           ;lcd.c: 30:     if (c & 0b00001000) {
  9373     1450  1DF1               	btfss	i1lcd_write@c,3
  9374     1451  2C53               	goto	u759_21
  9375     1452  2C54               	goto	u759_20
  9376     1453                     u759_21:
  9377     1453  2C56               	goto	i1l81
  9378     1454                     u759_20:
  9379     1454                     i1l7721:
  9380                           
  9381                           ;lcd.c: 31:         RB0 = 1;
  9382     1454  1406               	bsf	6,0	;volatile
  9383                           
  9384                           ;lcd.c: 32:     } else {
  9385     1455  2C57               	goto	i1l7723
  9386     1456                     i1l81:
  9387                           
  9388                           ;lcd.c: 33:         RB0 = 0;
  9389     1456  1006               	bcf	6,0	;volatile
  9390     1457                     i1l7723:
  9391                           
  9392                           ;lcd.c: 35:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  9393     1457  300D               	movlw	13
  9394     1458  00F0               	movwf	??i1_lcd_write
  9395     1459                     u859_27:
  9396     1459  0BF0               	decfsz	??i1_lcd_write,f
  9397     145A  2C59               	goto	u859_27
  9398     145B                     i1l7725:
  9399                           
  9400                           ;lcd.c: 36:     RC1 = 1;
  9401     145B  1283               	bcf	3,5	;RP0=0, select bank0
  9402     145C  1303               	bcf	3,6	;RP1=0, select bank0
  9403     145D  1487               	bsf	7,1	;volatile
  9404     145E                     i1l7727:
  9405                           
  9406                           ;lcd.c: 37:     RC1 = 0;
  9407     145E  1087               	bcf	7,1	;volatile
  9408     145F                     i1l83:
  9409     145F  0008               	return
  9410     1460                     __end_ofi1_lcd_write:
  9411                           
  9412                           	psect	text41
  9413     1377                     __ptext41:	
  9414 ;; *************** function _sprintf *****************
  9415 ;; Defined at:
  9416 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprintf.c"
  9417 ;; Parameters:    Size  Location     Type
  9418 ;;  wh              1    wreg     PTR unsigned char 
  9419 ;;		 -> estado_executa_muda@tmp(17), mq_mostra@temp_str(16), adcon_mostra@temp_str(9), 
  9420 ;;  f               2   15[BANK0 ] PTR const unsigned char 
  9421 ;;		 -> STR_46(10), STR_45(10), STR_43(9), STR_22(7), 
  9422 ;;		 -> STR_17(9), 
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;  wh              1   23[BANK0 ] PTR unsigned char 
  9425 ;;		 -> estado_executa_muda@tmp(17), mq_mostra@temp_str(16), adcon_mostra@temp_str(9), 
  9426 ;;  pb              2   26[BANK0 ] struct __prbuf
  9427 ;;  ap              2   24[BANK0 ] PTR void [1]
  9428 ;;		 -> ?_sprintf(2), ?_printf(2), 
  9429 ;; Return value:  Size  Location     Type
  9430 ;;                  2   15[BANK0 ] int 
  9431 ;; Registers used:
  9432 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9433 ;; Tracked objects:
  9434 ;;		On entry : 0/0
  9435 ;;		On exit  : 0/0
  9436 ;;		Unchanged: 0/0
  9437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9438 ;;      Params:         0       8       0       0       0
  9439 ;;      Locals:         0       5       0       0       0
  9440 ;;      Temps:          0       0       0       0       0
  9441 ;;      Totals:         0      13       0       0       0
  9442 ;;Total ram usage:       13 bytes
  9443 ;; Hardware stack levels used: 1
  9444 ;; Hardware stack levels required when called: 2
  9445 ;; This function calls:
  9446 ;;		i1__doprnt
  9447 ;; This function is called by:
  9448 ;;		_adcon_mostra
  9449 ;;		_estado_executa_muda
  9450 ;;		_mq_mostra
  9451 ;; This function uses a non-reentrant model
  9452 ;;
  9453                           
  9454     1377                     _sprintf:	
  9455                           ;psect for function _sprintf
  9456                           
  9457                           
  9458                           ;incstack = 0
  9459 ;; hardware stack exceeded
  9460                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9461                           ;sprintf@wh stored from wreg
  9462     1377  1283               	bcf	3,5	;RP0=0, select bank0
  9463     1378  1303               	bcf	3,6	;RP1=0, select bank0
  9464     1379  00B7               	movwf	sprintf@wh
  9465     137A                     i1l7847:
  9466     137A  0837               	movf	sprintf@wh,w
  9467     137B  00BA               	movwf	sprintf@pb
  9468     137C                     i1l7849:
  9469     137C  01BB               	clrf	low ((sprintf@pb| 0+1))
  9470     137D                     i1l7851:
  9471     137D  3031               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  9472     137E  00B8               	movwf	sprintf@ap
  9473     137F  3000               	movlw	0
  9474     1380  00B9               	movwf	sprintf@ap+1
  9475     1381                     i1l7853:
  9476     1381  303A               	movlw	(low (sprintf@pb| 0))& (0+255)
  9477     1382  00A0               	movwf	i1__doprnt@pb
  9478     1383  3000               	movlw	0
  9479     1384  00A1               	movwf	i1__doprnt@pb+1
  9480     1385  082F               	movf	sprintf@f,w
  9481     1386  00A2               	movwf	i1__doprnt@f
  9482     1387  0830               	movf	sprintf@f+1,w
  9483     1388  00A3               	movwf	i1__doprnt@f+1
  9484     1389  3038               	movlw	(low (sprintf@ap| 0))& (0+255)
  9485     138A  00A4               	movwf	i1__doprnt@ap
  9486     138B  3000               	movlw	0
  9487     138C  00A5               	movwf	i1__doprnt@ap+1
  9488     138D  120A  118A  2534  160A  118A  	fcall	i1__doprnt
  9489     1392                     i1l7855:
  9490     1392  1283               	bcf	3,5	;RP0=0, select bank0
  9491     1393  1303               	bcf	3,6	;RP1=0, select bank0
  9492     1394  083A               	movf	sprintf@pb,w
  9493     1395  0084               	movwf	4
  9494     1396  1383               	bcf	3,7	;select IRP bank0
  9495     1397  0180               	clrf	0
  9496     1398                     i1l1255:
  9497     1398  0008               	return
  9498     1399                     __end_of_sprintf:
  9499                           
  9500                           	psect	text42
  9501     0534                     __ptext42:	
  9502 ;; *************** function i1__doprnt *****************
  9503 ;; Defined at:
  9504 ;;		line 471 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  9505 ;; Parameters:    Size  Location     Type
  9506 ;;  pb              2    0[BANK0 ] PTR struct __prbuf
  9507 ;;		 -> sprintf@pb(2), printf@pb(2), 
  9508 ;;  f               2    2[BANK0 ] PTR const unsigned char 
  9509 ;;		 -> STR_46(10), STR_45(10), STR_43(9), STR_22(7), 
  9510 ;;		 -> STR_17(9), STR_1(6), 
  9511 ;;  ap              2    4[BANK0 ] PTR PTR void 
  9512 ;;		 -> sprintf@ap(2), printf@ap(2), 
  9513 ;; Auto vars:     Size  Location     Type
  9514 ;;  tmpval          4    0        struct .
  9515 ;;  val             2   12[BANK0 ] unsigned int 
  9516 ;;  cp              2    0        PTR const unsigned char 
  9517 ;;  len             2    0        unsigned int 
  9518 ;;  c               1   14[BANK0 ] unsigned char 
  9519 ;;  flag            1   11[BANK0 ] unsigned char 
  9520 ;;  prec            1   10[BANK0 ] char 
  9521 ;; Return value:  Size  Location     Type
  9522 ;;                  2    0[BANK0 ] int 
  9523 ;; Registers used:
  9524 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9525 ;; Tracked objects:
  9526 ;;		On entry : 0/0
  9527 ;;		On exit  : 0/0
  9528 ;;		Unchanged: 0/0
  9529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9530 ;;      Params:         0       6       0       0       0
  9531 ;;      Locals:         0       5       0       0       0
  9532 ;;      Temps:          0       4       0       0       0
  9533 ;;      Totals:         0      15       0       0       0
  9534 ;;Total ram usage:       15 bytes
  9535 ;; Hardware stack levels used: 1
  9536 ;; Hardware stack levels required when called: 1
  9537 ;; This function calls:
  9538 ;;		NULL
  9539 ;;		i1___lwdiv
  9540 ;;		i1___lwmod
  9541 ;;		i1_putch
  9542 ;; This function is called by:
  9543 ;;		_sprintf
  9544 ;; This function uses a non-reentrant model
  9545 ;;
  9546                           
  9547     0534                     i1__doprnt:	
  9548                           ;psect for function i1__doprnt
  9549                           
  9550     0534                     i1l7753:	
  9551                           ;incstack = 0
  9552 ;; hardware stack exceeded
  9553                           ; Regs used in i1__doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9554                           
  9555                           
  9556                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 471: _doprnt(stru
      +                          ct __prbuf * pb, register const char * f, register va_list ap);C:\Program Files\Microchi
      +                          p\xc8\v2.41\pic\sources\c90\common\doprnt.c: 472: {;C:\Program Files\Microchip\xc8\v2.41
      +                          \pic\sources\c90\common\doprnt.c: 512:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files\Microchip\xc8\v2.
      +                          41\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;;C:\Program Files\Microchip
      +                          \xc8\v2.41\pic\sources\c90\common\doprnt.c: 543:  } tmpval;
  9557     0534  2ECF               	goto	i1l7819
  9558     0535                     i1l7755:
  9559                           
  9560                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  9561     0535  3025               	movlw	37
  9562     0536  062E               	xorwf	i1__doprnt@c,w
  9563     0537  1903               	btfsc	3,2
  9564     0538  2D3A               	goto	u764_21
  9565     0539  2D3B               	goto	u764_20
  9566     053A                     u764_21:
  9567     053A  2D77               	goto	i1l7765
  9568     053B                     u764_20:
  9569     053B                     i1l7757:
  9570     053B  0820               	movf	i1__doprnt@pb,w
  9571     053C  3E01               	addlw	1
  9572     053D  00A6               	movwf	??i1__doprnt
  9573     053E  0821               	movf	i1__doprnt@pb+1,w
  9574     053F  1803               	skipnc
  9575     0540  3E01               	addlw	1
  9576     0541  3E00               	addlw	0
  9577     0542  00A7               	movwf	??i1__doprnt+1
  9578     0543  0826               	movf	??i1__doprnt,w
  9579     0544  0084               	movwf	4
  9580     0545  1783               	bsf	3,7
  9581     0546  1C27               	btfss	??i1__doprnt+1,0
  9582     0547  1383               	bcf	3,7
  9583     0548  0800               	movf	0,w
  9584     0549  1903               	btfsc	3,2
  9585     054A  2D4C               	goto	u765_21
  9586     054B  2D4D               	goto	u765_20
  9587     054C                     u765_21:
  9588     054C  2D63               	goto	i1l7761
  9589     054D                     u765_20:
  9590     054D                     i1l7759:
  9591     054D  082E               	movf	i1__doprnt@c,w
  9592     054E  00F0               	movwf	i1putch@c
  9593     054F  0820               	movf	i1__doprnt@pb,w
  9594     0550  3E01               	addlw	1
  9595     0551  00A6               	movwf	??i1__doprnt
  9596     0552  0821               	movf	i1__doprnt@pb+1,w
  9597     0553  1803               	skipnc
  9598     0554  3E01               	addlw	1
  9599     0555  3E00               	addlw	0
  9600     0556  00A7               	movwf	??i1__doprnt+1
  9601     0557  0826               	movf	??i1__doprnt,w
  9602     0558  0084               	movwf	4
  9603     0559  1783               	bsf	3,7
  9604     055A  1C27               	btfss	??i1__doprnt+1,0
  9605     055B  1383               	bcf	3,7
  9606     055C  0800               	movf	0,w
  9607     055D  120A  118A  2042  120A  118A  	fcall	i1fptable
  9608     0562  2D34               	goto	i1l7753
  9609     0563                     i1l7761:
  9610     0563  0820               	movf	i1__doprnt@pb,w
  9611     0564  0084               	movwf	4
  9612     0565  1783               	bsf	3,7
  9613     0566  1C21               	btfss	i1__doprnt@pb+1,0
  9614     0567  1383               	bcf	3,7
  9615     0568  0800               	movf	0,w
  9616     0569  0084               	movwf	4
  9617     056A  082E               	movf	i1__doprnt@c,w
  9618     056B  1383               	bcf	3,7	;select IRP bank0
  9619     056C  0080               	movwf	0
  9620     056D                     i1l7763:
  9621     056D  3001               	movlw	1
  9622     056E  00FF               	movwf	btemp+1
  9623     056F  0820               	movf	i1__doprnt@pb,w
  9624     0570  0084               	movwf	4
  9625     0571  1783               	bsf	3,7
  9626     0572  1C21               	btfss	i1__doprnt@pb+1,0
  9627     0573  1383               	bcf	3,7
  9628     0574  087F               	movf	btemp+1,w
  9629     0575  0780               	addwf	0,f
  9630     0576  2D34               	goto	i1l7753
  9631     0577                     i1l7765:
  9632                           
  9633                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  9634     0577  01AB               	clrf	i1__doprnt@flag
  9635                           
  9636                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  9637     0578  2D7B               	goto	i1l7769
  9638     0579                     i1l1225:	
  9639                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 843:   case 'u':
  9640                           
  9641                           
  9642                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          x40;
  9643     0579  172B               	bsf	i1__doprnt@flag,6
  9644                           
  9645                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 845:    break;
  9646     057A  2DA1               	goto	i1l1223
  9647     057B                     i1l7769:
  9648     057B  0823               	movf	i1__doprnt@f+1,w
  9649     057C  00A7               	movwf	??i1__doprnt+1
  9650     057D  0822               	movf	i1__doprnt@f,w
  9651     057E  00A6               	movwf	??i1__doprnt
  9652     057F  0AA2               	incf	i1__doprnt@f,f
  9653     0580  1903               	skipnz
  9654     0581  0AA3               	incf	i1__doprnt@f+1,f
  9655     0582  0827               	movf	??i1__doprnt+1,w
  9656     0583  00FF               	movwf	btemp+1
  9657     0584  0826               	movf	??i1__doprnt,w
  9658     0585  0084               	movwf	4
  9659     0586  120A  118A  2700  120A  118A  	fcall	stringtab
  9660     058B  00AE               	movwf	i1__doprnt@c
  9661     058C  00A8               	movwf	??i1__doprnt+2
  9662     058D  01A9               	clrf	??i1__doprnt+3
  9663                           
  9664                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9665                           ; Switch size 1, requested type "simple"
  9666                           ; Number of cases is 1, Range of values is 0 to 0
  9667                           ; switch strategies available:
  9668                           ; Name         Instructions Cycles
  9669                           ; simple_byte            4     3 (average)
  9670                           ; direct_byte           11     8 (fixed)
  9671                           ; jumptable            260     6 (fixed)
  9672                           ;	Chosen strategy is simple_byte
  9673     058E  0829               	movf	??i1__doprnt+3,w
  9674     058F  3A00               	xorlw	0	; case 0
  9675     0590  1903               	skipnz
  9676     0591  2D93               	goto	i1l8899
  9677     0592  2ECF               	goto	i1l7819
  9678     0593                     i1l8899:
  9679                           
  9680                           ; Switch size 1, requested type "simple"
  9681                           ; Number of cases is 4, Range of values is 0 to 117
  9682                           ; switch strategies available:
  9683                           ; Name         Instructions Cycles
  9684                           ; simple_byte           13     7 (average)
  9685                           ; jumptable            260     6 (fixed)
  9686                           ;	Chosen strategy is simple_byte
  9687     0593  0828               	movf	??i1__doprnt+2,w
  9688     0594  3A00               	xorlw	0	; case 0
  9689     0595  1903               	skipnz
  9690     0596  2EE7               	goto	i1l1245
  9691     0597  3A64               	xorlw	100	; case 100
  9692     0598  1903               	skipnz
  9693     0599  2DA1               	goto	i1l1223
  9694     059A  3A0D               	xorlw	13	; case 105
  9695     059B  1903               	skipnz
  9696     059C  2DA1               	goto	i1l1223
  9697     059D  3A1C               	xorlw	28	; case 117
  9698     059E  1903               	skipnz
  9699     059F  2D79               	goto	i1l1225
  9700     05A0  2ECF               	goto	i1l7819
  9701     05A1                     i1l1223:
  9702                           
  9703                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x40) == 0x00)
  9704     05A1  1B2B               	btfsc	i1__doprnt@flag,6
  9705     05A2  2DA4               	goto	u766_21
  9706     05A3  2DA5               	goto	u766_20
  9707     05A4                     u766_21:
  9708     05A4  2DCD               	goto	i1l7779
  9709     05A5                     u766_20:
  9710     05A5                     i1l7771:
  9711                           
  9712                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  9713     05A5  0824               	movf	i1__doprnt@ap,w
  9714     05A6  0084               	movwf	4
  9715     05A7  1783               	bsf	3,7
  9716     05A8  1C25               	btfss	i1__doprnt@ap+1,0
  9717     05A9  1383               	bcf	3,7
  9718     05AA  0800               	movf	0,w
  9719     05AB  00A6               	movwf	??i1__doprnt
  9720     05AC  3002               	movlw	2
  9721     05AD  0780               	addwf	0,f
  9722     05AE  0A84               	incf	4,f
  9723     05AF  0800               	movf	0,w
  9724     05B0  00A7               	movwf	??i1__doprnt+1
  9725     05B1  3000               	movlw	0
  9726     05B2  1803               	skipnc
  9727     05B3  0A80               	incf	0,f
  9728     05B4  0780               	addwf	0,f
  9729     05B5  0826               	movf	??i1__doprnt,w
  9730     05B6  0084               	movwf	4
  9731     05B7  1783               	bsf	3,7
  9732     05B8  1C27               	btfss	??i1__doprnt+1,0
  9733     05B9  1383               	bcf	3,7
  9734     05BA  0800               	movf	0,w
  9735     05BB  00AC               	movwf	i1__doprnt@val
  9736     05BC  0A84               	incf	4,f
  9737     05BD  0800               	movf	0,w
  9738     05BE  00AD               	movwf	i1__doprnt@val+1
  9739     05BF                     i1l7773:
  9740                           
  9741                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  9742     05BF  1FAD               	btfss	i1__doprnt@val+1,7
  9743     05C0  2DC2               	goto	u767_21
  9744     05C1  2DC3               	goto	u767_20
  9745     05C2                     u767_21:
  9746     05C2  2DE7               	goto	i1l7781
  9747     05C3                     u767_20:
  9748     05C3                     i1l7775:
  9749                           
  9750                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  9751     05C3  3003               	movlw	3
  9752     05C4  00FF               	movwf	btemp+1
  9753     05C5  087F               	movf	btemp+1,w
  9754     05C6  04AB               	iorwf	i1__doprnt@flag,f
  9755     05C7                     i1l7777:
  9756                           
  9757                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  9758     05C7  09AC               	comf	i1__doprnt@val,f
  9759     05C8  09AD               	comf	i1__doprnt@val+1,f
  9760     05C9  0AAC               	incf	i1__doprnt@val,f
  9761     05CA  1903               	skipnz
  9762     05CB  0AAD               	incf	i1__doprnt@val+1,f
  9763     05CC  2DE7               	goto	i1l7781
  9764     05CD                     i1l7779:
  9765                           
  9766                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  9767     05CD  0824               	movf	i1__doprnt@ap,w
  9768     05CE  0084               	movwf	4
  9769     05CF  1783               	bsf	3,7
  9770     05D0  1C25               	btfss	i1__doprnt@ap+1,0
  9771     05D1  1383               	bcf	3,7
  9772     05D2  0800               	movf	0,w
  9773     05D3  00A6               	movwf	??i1__doprnt
  9774     05D4  3002               	movlw	2
  9775     05D5  0780               	addwf	0,f
  9776     05D6  0A84               	incf	4,f
  9777     05D7  0800               	movf	0,w
  9778     05D8  00A7               	movwf	??i1__doprnt+1
  9779     05D9  3000               	movlw	0
  9780     05DA  1803               	skipnc
  9781     05DB  0A80               	incf	0,f
  9782     05DC  0780               	addwf	0,f
  9783     05DD  0826               	movf	??i1__doprnt,w
  9784     05DE  0084               	movwf	4
  9785     05DF  1783               	bsf	3,7
  9786     05E0  1C27               	btfss	??i1__doprnt+1,0
  9787     05E1  1383               	bcf	3,7
  9788     05E2  0800               	movf	0,w
  9789     05E3  00AC               	movwf	i1__doprnt@val
  9790     05E4  0A84               	incf	4,f
  9791     05E5  0800               	movf	0,w
  9792     05E6  00AD               	movwf	i1__doprnt@val+1
  9793     05E7                     i1l7781:
  9794                           
  9795                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  9796     05E7  01AE               	clrf	i1__doprnt@c
  9797     05E8  0AAE               	incf	i1__doprnt@c,f
  9798     05E9                     i1l7787:
  9799                           
  9800                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  9801     05E9  082E               	movf	i1__doprnt@c,w
  9802     05EA  00A6               	movwf	??i1__doprnt
  9803     05EB  0726               	addwf	??i1__doprnt,w
  9804     05EC  3E3A               	addlw	low (_dpowers| (0+32768))
  9805     05ED  0084               	movwf	4
  9806     05EE  3087               	movlw	high (_dpowers| (0+32768))
  9807     05EF  1803               	skipnc
  9808     05F0  3E01               	addlw	1
  9809     05F1  00FF               	movwf	btemp+1
  9810     05F2  120A  118A  2700  120A  118A  	fcall	stringtab
  9811     05F7  00A7               	movwf	??i1__doprnt+1
  9812     05F8  120A  118A  2700  120A  118A  	fcall	stringtab
  9813     05FD  00A8               	movwf	??i1__doprnt+2
  9814     05FE  0828               	movf	??i1__doprnt+2,w
  9815     05FF  022D               	subwf	i1__doprnt@val+1,w
  9816     0600  1D03               	skipz
  9817     0601  2E04               	goto	u768_25
  9818     0602  0827               	movf	??i1__doprnt+1,w
  9819     0603  022C               	subwf	i1__doprnt@val,w
  9820     0604                     u768_25:
  9821     0604  1803               	skipnc
  9822     0605  2E07               	goto	u768_21
  9823     0606  2E08               	goto	u768_20
  9824     0607                     u768_21:
  9825     0607  2E09               	goto	i1l7791
  9826     0608                     u768_20:
  9827     0608  2E13               	goto	i1l7795
  9828     0609                     i1l7791:
  9829     0609  3001               	movlw	1
  9830     060A  00FF               	movwf	btemp+1
  9831     060B  087F               	movf	btemp+1,w
  9832     060C  07AE               	addwf	i1__doprnt@c,f
  9833     060D                     i1l7793:
  9834     060D  3005               	movlw	5
  9835     060E  062E               	xorwf	i1__doprnt@c,w
  9836     060F  1D03               	btfss	3,2
  9837     0610  2E12               	goto	u769_21
  9838     0611  2E13               	goto	u769_20
  9839     0612                     u769_21:
  9840     0612  2DE9               	goto	i1l7787
  9841     0613                     u769_20:
  9842     0613                     i1l7795:
  9843                           
  9844                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  9845     0613  082B               	movf	i1__doprnt@flag,w
  9846     0614  3903               	andlw	3
  9847     0615  1903               	btfsc	3,2
  9848     0616  2E18               	goto	u770_21
  9849     0617  2E19               	goto	u770_20
  9850     0618                     u770_21:
  9851     0618  2E54               	goto	i1l7805
  9852     0619                     u770_20:
  9853     0619                     i1l7797:
  9854     0619  0820               	movf	i1__doprnt@pb,w
  9855     061A  3E01               	addlw	1
  9856     061B  00A6               	movwf	??i1__doprnt
  9857     061C  0821               	movf	i1__doprnt@pb+1,w
  9858     061D  1803               	skipnc
  9859     061E  3E01               	addlw	1
  9860     061F  3E00               	addlw	0
  9861     0620  00A7               	movwf	??i1__doprnt+1
  9862     0621  0826               	movf	??i1__doprnt,w
  9863     0622  0084               	movwf	4
  9864     0623  1783               	bsf	3,7
  9865     0624  1C27               	btfss	??i1__doprnt+1,0
  9866     0625  1383               	bcf	3,7
  9867     0626  0800               	movf	0,w
  9868     0627  1903               	btfsc	3,2
  9869     0628  2E2A               	goto	u771_21
  9870     0629  2E2B               	goto	u771_20
  9871     062A                     u771_21:
  9872     062A  2E41               	goto	i1l7801
  9873     062B                     u771_20:
  9874     062B                     i1l7799:
  9875     062B  302D               	movlw	45
  9876     062C  00F0               	movwf	i1putch@c
  9877     062D  0820               	movf	i1__doprnt@pb,w
  9878     062E  3E01               	addlw	1
  9879     062F  00A6               	movwf	??i1__doprnt
  9880     0630  0821               	movf	i1__doprnt@pb+1,w
  9881     0631  1803               	skipnc
  9882     0632  3E01               	addlw	1
  9883     0633  3E00               	addlw	0
  9884     0634  00A7               	movwf	??i1__doprnt+1
  9885     0635  0826               	movf	??i1__doprnt,w
  9886     0636  0084               	movwf	4
  9887     0637  1783               	bsf	3,7
  9888     0638  1C27               	btfss	??i1__doprnt+1,0
  9889     0639  1383               	bcf	3,7
  9890     063A  0800               	movf	0,w
  9891     063B  120A  118A  2042  120A  118A  	fcall	i1fptable
  9892     0640  2E54               	goto	i1l7805
  9893     0641                     i1l7801:
  9894     0641  0820               	movf	i1__doprnt@pb,w
  9895     0642  0084               	movwf	4
  9896     0643  1783               	bsf	3,7
  9897     0644  1C21               	btfss	i1__doprnt@pb+1,0
  9898     0645  1383               	bcf	3,7
  9899     0646  0800               	movf	0,w
  9900     0647  0084               	movwf	4
  9901     0648  302D               	movlw	45
  9902     0649  1383               	bcf	3,7	;select IRP bank0
  9903     064A  0080               	movwf	0
  9904     064B                     i1l7803:
  9905     064B  3001               	movlw	1
  9906     064C  00FF               	movwf	btemp+1
  9907     064D  0820               	movf	i1__doprnt@pb,w
  9908     064E  0084               	movwf	4
  9909     064F  1783               	bsf	3,7
  9910     0650  1C21               	btfss	i1__doprnt@pb+1,0
  9911     0651  1383               	bcf	3,7
  9912     0652  087F               	movf	btemp+1,w
  9913     0653  0780               	addwf	0,f
  9914     0654                     i1l7805:
  9915                           
  9916                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  9917     0654  1283               	bcf	3,5	;RP0=0, select bank0
  9918     0655  1303               	bcf	3,6	;RP1=0, select bank0
  9919     0656  082E               	movf	i1__doprnt@c,w
  9920     0657  00AA               	movwf	i1__doprnt@prec
  9921                           
  9922                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  9923     0658  2EC4               	goto	i1l7817
  9924     0659                     i1l7807:
  9925                           
  9926                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  9927     0659  300A               	movlw	10
  9928     065A  00F7               	movwf	i1___lwmod@divisor
  9929     065B  3000               	movlw	0
  9930     065C  00F8               	movwf	i1___lwmod@divisor+1
  9931     065D  082A               	movf	i1__doprnt@prec,w
  9932     065E  00A6               	movwf	??i1__doprnt
  9933     065F  0726               	addwf	??i1__doprnt,w
  9934     0660  3E3A               	addlw	low (_dpowers| (0+32768))
  9935     0661  0084               	movwf	4
  9936     0662  3087               	movlw	high (_dpowers| (0+32768))
  9937     0663  1803               	skipnc
  9938     0664  3E01               	addlw	1
  9939     0665  00FF               	movwf	btemp+1
  9940     0666  120A  118A  2700  120A  118A  	fcall	stringtab
  9941     066B  00F0               	movwf	i1___lwdiv@divisor
  9942     066C  120A  118A  2700  120A  118A  	fcall	stringtab
  9943     0671  00F1               	movwf	i1___lwdiv@divisor+1
  9944     0672  082D               	movf	i1__doprnt@val+1,w
  9945     0673  00F3               	movwf	i1___lwdiv@dividend+1
  9946     0674  082C               	movf	i1__doprnt@val,w
  9947     0675  00F2               	movwf	i1___lwdiv@dividend
  9948     0676  160A  118A  267C  120A  118A  	fcall	i1___lwdiv
  9949     067B  0871               	movf	?i1___lwdiv+1,w
  9950     067C  00FA               	movwf	i1___lwmod@dividend+1
  9951     067D  0870               	movf	?i1___lwdiv,w
  9952     067E  00F9               	movwf	i1___lwmod@dividend
  9953     067F  160A  118A  258A  120A  118A  	fcall	i1___lwmod
  9954     0684  0877               	movf	?i1___lwmod,w
  9955     0685  3E30               	addlw	48
  9956     0686  1283               	bcf	3,5	;RP0=0, select bank0
  9957     0687  1303               	bcf	3,6	;RP1=0, select bank0
  9958     0688  00AE               	movwf	i1__doprnt@c
  9959     0689                     i1l7809:
  9960     0689  0820               	movf	i1__doprnt@pb,w
  9961     068A  3E01               	addlw	1
  9962     068B  00A6               	movwf	??i1__doprnt
  9963     068C  0821               	movf	i1__doprnt@pb+1,w
  9964     068D  1803               	skipnc
  9965     068E  3E01               	addlw	1
  9966     068F  3E00               	addlw	0
  9967     0690  00A7               	movwf	??i1__doprnt+1
  9968     0691  0826               	movf	??i1__doprnt,w
  9969     0692  0084               	movwf	4
  9970     0693  1783               	bsf	3,7
  9971     0694  1C27               	btfss	??i1__doprnt+1,0
  9972     0695  1383               	bcf	3,7
  9973     0696  0800               	movf	0,w
  9974     0697  1903               	btfsc	3,2
  9975     0698  2E9A               	goto	u772_21
  9976     0699  2E9B               	goto	u772_20
  9977     069A                     u772_21:
  9978     069A  2EB1               	goto	i1l7813
  9979     069B                     u772_20:
  9980     069B                     i1l7811:
  9981     069B  082E               	movf	i1__doprnt@c,w
  9982     069C  00F0               	movwf	i1putch@c
  9983     069D  0820               	movf	i1__doprnt@pb,w
  9984     069E  3E01               	addlw	1
  9985     069F  00A6               	movwf	??i1__doprnt
  9986     06A0  0821               	movf	i1__doprnt@pb+1,w
  9987     06A1  1803               	skipnc
  9988     06A2  3E01               	addlw	1
  9989     06A3  3E00               	addlw	0
  9990     06A4  00A7               	movwf	??i1__doprnt+1
  9991     06A5  0826               	movf	??i1__doprnt,w
  9992     06A6  0084               	movwf	4
  9993     06A7  1783               	bsf	3,7
  9994     06A8  1C27               	btfss	??i1__doprnt+1,0
  9995     06A9  1383               	bcf	3,7
  9996     06AA  0800               	movf	0,w
  9997     06AB  120A  118A  2042  120A  118A  	fcall	i1fptable
  9998     06B0  2EC4               	goto	i1l7817
  9999     06B1                     i1l7813:
 10000     06B1  0820               	movf	i1__doprnt@pb,w
 10001     06B2  0084               	movwf	4
 10002     06B3  1783               	bsf	3,7
 10003     06B4  1C21               	btfss	i1__doprnt@pb+1,0
 10004     06B5  1383               	bcf	3,7
 10005     06B6  0800               	movf	0,w
 10006     06B7  0084               	movwf	4
 10007     06B8  082E               	movf	i1__doprnt@c,w
 10008     06B9  1383               	bcf	3,7	;select IRP bank0
 10009     06BA  0080               	movwf	0
 10010     06BB                     i1l7815:
 10011     06BB  3001               	movlw	1
 10012     06BC  00FF               	movwf	btemp+1
 10013     06BD  0820               	movf	i1__doprnt@pb,w
 10014     06BE  0084               	movwf	4
 10015     06BF  1783               	bsf	3,7
 10016     06C0  1C21               	btfss	i1__doprnt@pb+1,0
 10017     06C1  1383               	bcf	3,7
 10018     06C2  087F               	movf	btemp+1,w
 10019     06C3  0780               	addwf	0,f
 10020     06C4                     i1l7817:
 10021                           
 10022                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 10023     06C4  30FF               	movlw	255
 10024     06C5  00FF               	movwf	btemp+1
 10025     06C6  087F               	movf	btemp+1,w
 10026     06C7  1283               	bcf	3,5	;RP0=0, select bank0
 10027     06C8  1303               	bcf	3,6	;RP1=0, select bank0
 10028     06C9  07AA               	addwf	i1__doprnt@prec,f
 10029     06CA  0A2A               	incf	i1__doprnt@prec,w
 10030     06CB  1D03               	btfss	3,2
 10031     06CC  2ECE               	goto	u773_21
 10032     06CD  2ECF               	goto	u773_20
 10033     06CE                     u773_21:
 10034     06CE  2E59               	goto	i1l7807
 10035     06CF                     u773_20:
 10036     06CF                     i1l7819:
 10037                           
 10038                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 10039     06CF  1283               	bcf	3,5	;RP0=0, select bank0
 10040     06D0  1303               	bcf	3,6	;RP1=0, select bank0
 10041     06D1  0823               	movf	i1__doprnt@f+1,w
 10042     06D2  00A7               	movwf	??i1__doprnt+1
 10043     06D3  0822               	movf	i1__doprnt@f,w
 10044     06D4  00A6               	movwf	??i1__doprnt
 10045     06D5  0AA2               	incf	i1__doprnt@f,f
 10046     06D6  1903               	skipnz
 10047     06D7  0AA3               	incf	i1__doprnt@f+1,f
 10048     06D8  0827               	movf	??i1__doprnt+1,w
 10049     06D9  00FF               	movwf	btemp+1
 10050     06DA  0826               	movf	??i1__doprnt,w
 10051     06DB  0084               	movwf	4
 10052     06DC  120A  118A  2700  120A  118A  	fcall	stringtab
 10053     06E1  00AE               	movwf	i1__doprnt@c
 10054     06E2  082E               	movf	i1__doprnt@c,w
 10055     06E3  1D03               	btfss	3,2
 10056     06E4  2EE6               	goto	u774_21
 10057     06E5  2EE7               	goto	u774_20
 10058     06E6                     u774_21:
 10059     06E6  2D35               	goto	i1l7755
 10060     06E7                     u774_20:
 10061     06E7                     i1l1245:
 10062     06E7  0008               	return
 10063     06E8                     __end_ofi1__doprnt:
 10064                           
 10065                           	psect	text43
 10066     0003                     __ptext43:	
 10067 ;; *************** function i1_putch *****************
 10068 ;; Defined at:
 10069 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\putch.c"
 10070 ;; Parameters:    Size  Location     Type
 10071 ;;  c               1    0[COMMON] unsigned char 
 10072 ;; Auto vars:     Size  Location     Type
 10073 ;;		None
 10074 ;; Return value:  Size  Location     Type
 10075 ;;                  1    wreg      void 
 10076 ;; Registers used:
 10077 ;;		None
 10078 ;; Tracked objects:
 10079 ;;		On entry : 0/0
 10080 ;;		On exit  : 0/0
 10081 ;;		Unchanged: 0/0
 10082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10083 ;;      Params:         1       0       0       0       0
 10084 ;;      Locals:         0       0       0       0       0
 10085 ;;      Temps:          0       0       0       0       0
 10086 ;;      Totals:         1       0       0       0       0
 10087 ;;Total ram usage:        1 bytes
 10088 ;; Hardware stack levels used: 1
 10089 ;; This function calls:
 10090 ;;		Nothing
 10091 ;; This function is called by:
 10092 ;;		i1__doprnt
 10093 ;;		__doprnt
 10094 ;; This function uses a non-reentrant model
 10095 ;;
 10096                           
 10097     0003                     i1_putch:	
 10098                           ;psect for function i1_putch
 10099                           
 10100     0003                     i1l1248:	
 10101                           ;incstack = 0
 10102 ;; hardware stack exceeded
 10103                           ; Regs used in i1_putch: []
 10104                           
 10105     0003  0008               	return
 10106     0004                     __end_ofi1_putch:
 10107                           
 10108                           	psect	text44
 10109     158A                     __ptext44:	
 10110 ;; *************** function i1___lwmod *****************
 10111 ;; Defined at:
 10112 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
 10113 ;; Parameters:    Size  Location     Type
 10114 ;;  divisor         2    7[COMMON] unsigned int 
 10115 ;;  dividend        2    9[COMMON] unsigned int 
 10116 ;; Auto vars:     Size  Location     Type
 10117 ;;  counter         1   11[COMMON] unsigned char 
 10118 ;; Return value:  Size  Location     Type
 10119 ;;                  2    7[COMMON] unsigned int 
 10120 ;; Registers used:
 10121 ;;		wreg, status,2, status,0, btemp+1
 10122 ;; Tracked objects:
 10123 ;;		On entry : 0/0
 10124 ;;		On exit  : 0/0
 10125 ;;		Unchanged: 0/0
 10126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10127 ;;      Params:         4       0       0       0       0
 10128 ;;      Locals:         1       0       0       0       0
 10129 ;;      Temps:          0       0       0       0       0
 10130 ;;      Totals:         5       0       0       0       0
 10131 ;;Total ram usage:        5 bytes
 10132 ;; Hardware stack levels used: 1
 10133 ;; This function calls:
 10134 ;;		Nothing
 10135 ;; This function is called by:
 10136 ;;		_estado_executa_muda
 10137 ;;		i1__doprnt
 10138 ;; This function uses a non-reentrant model
 10139 ;;
 10140                           
 10141     158A                     i1___lwmod:	
 10142                           ;psect for function i1___lwmod
 10143                           
 10144     158A                     i1l7609:	
 10145                           ;incstack = 0
 10146                           ; Regs used in i1___lwmod: [wreg+status,2+status,0+btemp+1]
 10147                           
 10148     158A  0877               	movf	i1___lwmod@divisor,w
 10149     158B  0478               	iorwf	i1___lwmod@divisor+1,w
 10150     158C  1903               	btfsc	3,2
 10151     158D  2D8F               	goto	u731_21
 10152     158E  2D90               	goto	u731_20
 10153     158F                     u731_21:
 10154     158F  2DBF               	goto	i1l7627
 10155     1590                     u731_20:
 10156     1590                     i1l7611:
 10157     1590  01FB               	clrf	i1___lwmod@counter
 10158     1591  0AFB               	incf	i1___lwmod@counter,f
 10159     1592  2D9E               	goto	i1l7617
 10160     1593                     i1l7613:
 10161     1593  3001               	movlw	1
 10162     1594                     u732_25:
 10163     1594  1003               	clrc
 10164     1595  0DF7               	rlf	i1___lwmod@divisor,f
 10165     1596  0DF8               	rlf	i1___lwmod@divisor+1,f
 10166     1597  3EFF               	addlw	-1
 10167     1598  1D03               	skipz
 10168     1599  2D94               	goto	u732_25
 10169     159A                     i1l7615:
 10170     159A  3001               	movlw	1
 10171     159B  00FF               	movwf	btemp+1
 10172     159C  087F               	movf	btemp+1,w
 10173     159D  07FB               	addwf	i1___lwmod@counter,f
 10174     159E                     i1l7617:
 10175     159E  1FF8               	btfss	i1___lwmod@divisor+1,7
 10176     159F  2DA1               	goto	u733_21
 10177     15A0  2DA2               	goto	u733_20
 10178     15A1                     u733_21:
 10179     15A1  2D93               	goto	i1l7613
 10180     15A2                     u733_20:
 10181     15A2                     i1l7619:
 10182     15A2  0878               	movf	i1___lwmod@divisor+1,w
 10183     15A3  027A               	subwf	i1___lwmod@dividend+1,w
 10184     15A4  1D03               	skipz
 10185     15A5  2DA8               	goto	u734_25
 10186     15A6  0877               	movf	i1___lwmod@divisor,w
 10187     15A7  0279               	subwf	i1___lwmod@dividend,w
 10188     15A8                     u734_25:
 10189     15A8  1C03               	skipc
 10190     15A9  2DAB               	goto	u734_21
 10191     15AA  2DAC               	goto	u734_20
 10192     15AB                     u734_21:
 10193     15AB  2DB2               	goto	i1l7623
 10194     15AC                     u734_20:
 10195     15AC                     i1l7621:
 10196     15AC  0877               	movf	i1___lwmod@divisor,w
 10197     15AD  02F9               	subwf	i1___lwmod@dividend,f
 10198     15AE  0878               	movf	i1___lwmod@divisor+1,w
 10199     15AF  1C03               	skipc
 10200     15B0  03FA               	decf	i1___lwmod@dividend+1,f
 10201     15B1  02FA               	subwf	i1___lwmod@dividend+1,f
 10202     15B2                     i1l7623:
 10203     15B2  3001               	movlw	1
 10204     15B3                     u735_25:
 10205     15B3  1003               	clrc
 10206     15B4  0CF8               	rrf	i1___lwmod@divisor+1,f
 10207     15B5  0CF7               	rrf	i1___lwmod@divisor,f
 10208     15B6  3EFF               	addlw	-1
 10209     15B7  1D03               	skipz
 10210     15B8  2DB3               	goto	u735_25
 10211     15B9                     i1l7625:
 10212     15B9  3001               	movlw	1
 10213     15BA  02FB               	subwf	i1___lwmod@counter,f
 10214     15BB  1D03               	btfss	3,2
 10215     15BC  2DBE               	goto	u736_21
 10216     15BD  2DBF               	goto	u736_20
 10217     15BE                     u736_21:
 10218     15BE  2DA2               	goto	i1l7619
 10219     15BF                     u736_20:
 10220     15BF                     i1l7627:
 10221     15BF  087A               	movf	i1___lwmod@dividend+1,w
 10222     15C0  00F8               	movwf	?i1___lwmod+1
 10223     15C1  0879               	movf	i1___lwmod@dividend,w
 10224     15C2  00F7               	movwf	?i1___lwmod
 10225     15C3                     i1l943:
 10226     15C3  0008               	return
 10227     15C4                     __end_ofi1___lwmod:
 10228                           
 10229                           	psect	text45
 10230     167C                     __ptext45:	
 10231 ;; *************** function i1___lwdiv *****************
 10232 ;; Defined at:
 10233 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
 10234 ;; Parameters:    Size  Location     Type
 10235 ;;  divisor         2    0[COMMON] unsigned int 
 10236 ;;  dividend        2    2[COMMON] unsigned int 
 10237 ;; Auto vars:     Size  Location     Type
 10238 ;;  quotient        2    5[COMMON] unsigned int 
 10239 ;;  counter         1    4[COMMON] unsigned char 
 10240 ;; Return value:  Size  Location     Type
 10241 ;;                  2    0[COMMON] unsigned int 
 10242 ;; Registers used:
 10243 ;;		wreg, status,2, status,0, btemp+1
 10244 ;; Tracked objects:
 10245 ;;		On entry : 0/0
 10246 ;;		On exit  : 0/0
 10247 ;;		Unchanged: 0/0
 10248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10249 ;;      Params:         4       0       0       0       0
 10250 ;;      Locals:         3       0       0       0       0
 10251 ;;      Temps:          0       0       0       0       0
 10252 ;;      Totals:         7       0       0       0       0
 10253 ;;Total ram usage:        7 bytes
 10254 ;; Hardware stack levels used: 1
 10255 ;; This function calls:
 10256 ;;		Nothing
 10257 ;; This function is called by:
 10258 ;;		_estado_executa_muda
 10259 ;;		i1__doprnt
 10260 ;; This function uses a non-reentrant model
 10261 ;;
 10262                           
 10263     167C                     i1___lwdiv:	
 10264                           ;psect for function i1___lwdiv
 10265                           
 10266     167C                     i1l7583:	
 10267                           ;incstack = 0
 10268                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0+btemp+1]
 10269                           
 10270     167C  01F5               	clrf	i1___lwdiv@quotient
 10271     167D  01F6               	clrf	i1___lwdiv@quotient+1
 10272     167E                     i1l7585:
 10273     167E  0870               	movf	i1___lwdiv@divisor,w
 10274     167F  0471               	iorwf	i1___lwdiv@divisor+1,w
 10275     1680  1903               	btfsc	3,2
 10276     1681  2E83               	goto	u724_21
 10277     1682  2E84               	goto	u724_20
 10278     1683                     u724_21:
 10279     1683  2EBB               	goto	i1l7605
 10280     1684                     u724_20:
 10281     1684                     i1l7587:
 10282     1684  01F4               	clrf	i1___lwdiv@counter
 10283     1685  0AF4               	incf	i1___lwdiv@counter,f
 10284     1686  2E92               	goto	i1l7593
 10285     1687                     i1l7589:
 10286     1687  3001               	movlw	1
 10287     1688                     u725_25:
 10288     1688  1003               	clrc
 10289     1689  0DF0               	rlf	i1___lwdiv@divisor,f
 10290     168A  0DF1               	rlf	i1___lwdiv@divisor+1,f
 10291     168B  3EFF               	addlw	-1
 10292     168C  1D03               	skipz
 10293     168D  2E88               	goto	u725_25
 10294     168E                     i1l7591:
 10295     168E  3001               	movlw	1
 10296     168F  00FF               	movwf	btemp+1
 10297     1690  087F               	movf	btemp+1,w
 10298     1691  07F4               	addwf	i1___lwdiv@counter,f
 10299     1692                     i1l7593:
 10300     1692  1FF1               	btfss	i1___lwdiv@divisor+1,7
 10301     1693  2E95               	goto	u726_21
 10302     1694  2E96               	goto	u726_20
 10303     1695                     u726_21:
 10304     1695  2E87               	goto	i1l7589
 10305     1696                     u726_20:
 10306     1696                     i1l7595:
 10307     1696  3001               	movlw	1
 10308     1697                     u727_25:
 10309     1697  1003               	clrc
 10310     1698  0DF5               	rlf	i1___lwdiv@quotient,f
 10311     1699  0DF6               	rlf	i1___lwdiv@quotient+1,f
 10312     169A  3EFF               	addlw	-1
 10313     169B  1D03               	skipz
 10314     169C  2E97               	goto	u727_25
 10315     169D  0871               	movf	i1___lwdiv@divisor+1,w
 10316     169E  0273               	subwf	i1___lwdiv@dividend+1,w
 10317     169F  1D03               	skipz
 10318     16A0  2EA3               	goto	u728_25
 10319     16A1  0870               	movf	i1___lwdiv@divisor,w
 10320     16A2  0272               	subwf	i1___lwdiv@dividend,w
 10321     16A3                     u728_25:
 10322     16A3  1C03               	skipc
 10323     16A4  2EA6               	goto	u728_21
 10324     16A5  2EA7               	goto	u728_20
 10325     16A6                     u728_21:
 10326     16A6  2EAE               	goto	i1l7601
 10327     16A7                     u728_20:
 10328     16A7                     i1l7597:
 10329     16A7  0870               	movf	i1___lwdiv@divisor,w
 10330     16A8  02F2               	subwf	i1___lwdiv@dividend,f
 10331     16A9  0871               	movf	i1___lwdiv@divisor+1,w
 10332     16AA  1C03               	skipc
 10333     16AB  03F3               	decf	i1___lwdiv@dividend+1,f
 10334     16AC  02F3               	subwf	i1___lwdiv@dividend+1,f
 10335     16AD                     i1l7599:
 10336     16AD  1475               	bsf	i1___lwdiv@quotient,0
 10337     16AE                     i1l7601:
 10338     16AE  3001               	movlw	1
 10339     16AF                     u729_25:
 10340     16AF  1003               	clrc
 10341     16B0  0CF1               	rrf	i1___lwdiv@divisor+1,f
 10342     16B1  0CF0               	rrf	i1___lwdiv@divisor,f
 10343     16B2  3EFF               	addlw	-1
 10344     16B3  1D03               	skipz
 10345     16B4  2EAF               	goto	u729_25
 10346     16B5                     i1l7603:
 10347     16B5  3001               	movlw	1
 10348     16B6  02F4               	subwf	i1___lwdiv@counter,f
 10349     16B7  1D03               	btfss	3,2
 10350     16B8  2EBA               	goto	u730_21
 10351     16B9  2EBB               	goto	u730_20
 10352     16BA                     u730_21:
 10353     16BA  2E96               	goto	i1l7595
 10354     16BB                     u730_20:
 10355     16BB                     i1l7605:
 10356     16BB  0876               	movf	i1___lwdiv@quotient+1,w
 10357     16BC  00F1               	movwf	?i1___lwdiv+1
 10358     16BD  0875               	movf	i1___lwdiv@quotient,w
 10359     16BE  00F0               	movwf	?i1___lwdiv
 10360     16BF                     i1l933:
 10361     16BF  0008               	return
 10362     16C0                     __end_ofi1___lwdiv:
 10363                           
 10364                           	psect	text46
 10365     14BB                     __ptext46:	
 10366 ;; *************** function _div *****************
 10367 ;; Defined at:
 10368 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\cdiv.c"
 10369 ;; Parameters:    Size  Location     Type
 10370 ;;  number          2    8[COMMON] int 
 10371 ;;  denom           2   10[COMMON] int 
 10372 ;; Auto vars:     Size  Location     Type
 10373 ;;  rv              4    0[BANK0 ] struct .
 10374 ;; Return value:  Size  Location     Type
 10375 ;;                  4    8[COMMON] struct .
 10376 ;; Registers used:
 10377 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10378 ;; Tracked objects:
 10379 ;;		On entry : 0/0
 10380 ;;		On exit  : 0/0
 10381 ;;		Unchanged: 0/0
 10382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10383 ;;      Params:         4       0       0       0       0
 10384 ;;      Locals:         0       4       0       0       0
 10385 ;;      Temps:          0       0       0       0       0
 10386 ;;      Totals:         4       4       0       0       0
 10387 ;;Total ram usage:        8 bytes
 10388 ;; Hardware stack levels used: 1
 10389 ;; Hardware stack levels required when called: 1
 10390 ;; This function calls:
 10391 ;;		___awdiv
 10392 ;;		___awmod
 10393 ;; This function is called by:
 10394 ;;		_adcon_mostra
 10395 ;; This function uses a non-reentrant model
 10396 ;;
 10397                           
 10398     14BB                     _div:	
 10399                           ;psect for function _div
 10400                           
 10401     14BB                     i1l7841:	
 10402                           ;incstack = 0
 10403 ;; hardware stack exceeded
 10404                           ; Regs used in _div: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10405                           
 10406     14BB  087B               	movf	div@denom+1,w
 10407     14BC  00F1               	movwf	___awdiv@divisor+1
 10408     14BD  087A               	movf	div@denom,w
 10409     14BE  00F0               	movwf	___awdiv@divisor
 10410     14BF  0879               	movf	div@number+1,w
 10411     14C0  00F3               	movwf	___awdiv@dividend+1
 10412     14C1  0878               	movf	div@number,w
 10413     14C2  00F2               	movwf	___awdiv@dividend
 10414     14C3  120A  158A  2164  160A  118A  	fcall	___awdiv
 10415     14C8  0871               	movf	?___awdiv+1,w
 10416     14C9  1283               	bcf	3,5	;RP0=0, select bank0
 10417     14CA  1303               	bcf	3,6	;RP1=0, select bank0
 10418     14CB  00A3               	movwf	div@rv+3
 10419     14CC  0870               	movf	?___awdiv,w
 10420     14CD  00A2               	movwf	div@rv+2
 10421     14CE  087B               	movf	div@denom+1,w
 10422     14CF  00F1               	movwf	___awmod@divisor+1
 10423     14D0  087A               	movf	div@denom,w
 10424     14D1  00F0               	movwf	___awmod@divisor
 10425     14D2  0879               	movf	div@number+1,w
 10426     14D3  00F3               	movwf	___awmod@dividend+1
 10427     14D4  0878               	movf	div@number,w
 10428     14D5  00F2               	movwf	___awmod@dividend
 10429     14D6  160A  118A  27A7  160A  118A  	fcall	___awmod
 10430     14DB  0871               	movf	?___awmod+1,w
 10431     14DC  1283               	bcf	3,5	;RP0=0, select bank0
 10432     14DD  1303               	bcf	3,6	;RP1=0, select bank0
 10433     14DE  00A1               	movwf	div@rv+1
 10434     14DF  0870               	movf	?___awmod,w
 10435     14E0  00A0               	movwf	div@rv
 10436     14E1                     i1l7843:
 10437     14E1  0823               	movf	div@rv+3,w
 10438     14E2  00FB               	movwf	?_div+3
 10439     14E3  0822               	movf	div@rv+2,w
 10440     14E4  00FA               	movwf	?_div+2
 10441     14E5  0821               	movf	div@rv+1,w
 10442     14E6  00F9               	movwf	?_div+1
 10443     14E7  0820               	movf	div@rv,w
 10444     14E8  00F8               	movwf	?_div
 10445     14E9                     i1l1112:
 10446     14E9  0008               	return
 10447     14EA                     __end_of_div:
 10448                           
 10449                           	psect	text47
 10450     17A7                     __ptext47:	
 10451 ;; *************** function ___awmod *****************
 10452 ;; Defined at:
 10453 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
 10454 ;; Parameters:    Size  Location     Type
 10455 ;;  divisor         2    0[COMMON] int 
 10456 ;;  dividend        2    2[COMMON] int 
 10457 ;; Auto vars:     Size  Location     Type
 10458 ;;  sign            1    5[COMMON] unsigned char 
 10459 ;;  counter         1    4[COMMON] unsigned char 
 10460 ;; Return value:  Size  Location     Type
 10461 ;;                  2    0[COMMON] int 
 10462 ;; Registers used:
 10463 ;;		wreg, status,2, status,0, btemp+1
 10464 ;; Tracked objects:
 10465 ;;		On entry : 0/0
 10466 ;;		On exit  : 0/0
 10467 ;;		Unchanged: 0/0
 10468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10469 ;;      Params:         4       0       0       0       0
 10470 ;;      Locals:         2       0       0       0       0
 10471 ;;      Temps:          0       0       0       0       0
 10472 ;;      Totals:         6       0       0       0       0
 10473 ;;Total ram usage:        6 bytes
 10474 ;; Hardware stack levels used: 1
 10475 ;; This function calls:
 10476 ;;		Nothing
 10477 ;; This function is called by:
 10478 ;;		_div
 10479 ;; This function uses a non-reentrant model
 10480 ;;
 10481                           
 10482     17A7                     ___awmod:	
 10483                           ;psect for function ___awmod
 10484                           
 10485     17A7                     i1l7675:	
 10486                           ;incstack = 0
 10487 ;; hardware stack exceeded
 10488                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
 10489                           
 10490     17A7  01F5               	clrf	___awmod@sign
 10491     17A8                     i1l7677:
 10492     17A8  1FF3               	btfss	___awmod@dividend+1,7
 10493     17A9  2FAB               	goto	u747_21
 10494     17AA  2FAC               	goto	u747_20
 10495     17AB                     u747_21:
 10496     17AB  2FB3               	goto	i1l7683
 10497     17AC                     u747_20:
 10498     17AC                     i1l7679:
 10499     17AC  09F2               	comf	___awmod@dividend,f
 10500     17AD  09F3               	comf	___awmod@dividend+1,f
 10501     17AE  0AF2               	incf	___awmod@dividend,f
 10502     17AF  1903               	skipnz
 10503     17B0  0AF3               	incf	___awmod@dividend+1,f
 10504     17B1                     i1l7681:
 10505     17B1  01F5               	clrf	___awmod@sign
 10506     17B2  0AF5               	incf	___awmod@sign,f
 10507     17B3                     i1l7683:
 10508     17B3  1FF1               	btfss	___awmod@divisor+1,7
 10509     17B4  2FB6               	goto	u748_21
 10510     17B5  2FB7               	goto	u748_20
 10511     17B6                     u748_21:
 10512     17B6  2FBC               	goto	i1l7687
 10513     17B7                     u748_20:
 10514     17B7                     i1l7685:
 10515     17B7  09F0               	comf	___awmod@divisor,f
 10516     17B8  09F1               	comf	___awmod@divisor+1,f
 10517     17B9  0AF0               	incf	___awmod@divisor,f
 10518     17BA  1903               	skipnz
 10519     17BB  0AF1               	incf	___awmod@divisor+1,f
 10520     17BC                     i1l7687:
 10521     17BC  0870               	movf	___awmod@divisor,w
 10522     17BD  0471               	iorwf	___awmod@divisor+1,w
 10523     17BE  1903               	btfsc	3,2
 10524     17BF  2FC1               	goto	u749_21
 10525     17C0  2FC2               	goto	u749_20
 10526     17C1                     u749_21:
 10527     17C1  2FF1               	goto	i1l7705
 10528     17C2                     u749_20:
 10529     17C2                     i1l7689:
 10530     17C2  01F4               	clrf	___awmod@counter
 10531     17C3  0AF4               	incf	___awmod@counter,f
 10532     17C4  2FD0               	goto	i1l7695
 10533     17C5                     i1l7691:
 10534     17C5  3001               	movlw	1
 10535     17C6                     u750_25:
 10536     17C6  1003               	clrc
 10537     17C7  0DF0               	rlf	___awmod@divisor,f
 10538     17C8  0DF1               	rlf	___awmod@divisor+1,f
 10539     17C9  3EFF               	addlw	-1
 10540     17CA  1D03               	skipz
 10541     17CB  2FC6               	goto	u750_25
 10542     17CC                     i1l7693:
 10543     17CC  3001               	movlw	1
 10544     17CD  00FF               	movwf	btemp+1
 10545     17CE  087F               	movf	btemp+1,w
 10546     17CF  07F4               	addwf	___awmod@counter,f
 10547     17D0                     i1l7695:
 10548     17D0  1FF1               	btfss	___awmod@divisor+1,7
 10549     17D1  2FD3               	goto	u751_21
 10550     17D2  2FD4               	goto	u751_20
 10551     17D3                     u751_21:
 10552     17D3  2FC5               	goto	i1l7691
 10553     17D4                     u751_20:
 10554     17D4                     i1l7697:
 10555     17D4  0871               	movf	___awmod@divisor+1,w
 10556     17D5  0273               	subwf	___awmod@dividend+1,w
 10557     17D6  1D03               	skipz
 10558     17D7  2FDA               	goto	u752_25
 10559     17D8  0870               	movf	___awmod@divisor,w
 10560     17D9  0272               	subwf	___awmod@dividend,w
 10561     17DA                     u752_25:
 10562     17DA  1C03               	skipc
 10563     17DB  2FDD               	goto	u752_21
 10564     17DC  2FDE               	goto	u752_20
 10565     17DD                     u752_21:
 10566     17DD  2FE4               	goto	i1l7701
 10567     17DE                     u752_20:
 10568     17DE                     i1l7699:
 10569     17DE  0870               	movf	___awmod@divisor,w
 10570     17DF  02F2               	subwf	___awmod@dividend,f
 10571     17E0  0871               	movf	___awmod@divisor+1,w
 10572     17E1  1C03               	skipc
 10573     17E2  03F3               	decf	___awmod@dividend+1,f
 10574     17E3  02F3               	subwf	___awmod@dividend+1,f
 10575     17E4                     i1l7701:
 10576     17E4  3001               	movlw	1
 10577     17E5                     u753_25:
 10578     17E5  1003               	clrc
 10579     17E6  0CF1               	rrf	___awmod@divisor+1,f
 10580     17E7  0CF0               	rrf	___awmod@divisor,f
 10581     17E8  3EFF               	addlw	-1
 10582     17E9  1D03               	skipz
 10583     17EA  2FE5               	goto	u753_25
 10584     17EB                     i1l7703:
 10585     17EB  3001               	movlw	1
 10586     17EC  02F4               	subwf	___awmod@counter,f
 10587     17ED  1D03               	btfss	3,2
 10588     17EE  2FF0               	goto	u754_21
 10589     17EF  2FF1               	goto	u754_20
 10590     17F0                     u754_21:
 10591     17F0  2FD4               	goto	i1l7697
 10592     17F1                     u754_20:
 10593     17F1                     i1l7705:
 10594     17F1  0875               	movf	___awmod@sign,w
 10595     17F2  1903               	btfsc	3,2
 10596     17F3  2FF5               	goto	u755_21
 10597     17F4  2FF6               	goto	u755_20
 10598     17F5                     u755_21:
 10599     17F5  2FFB               	goto	i1l7709
 10600     17F6                     u755_20:
 10601     17F6                     i1l7707:
 10602     17F6  09F2               	comf	___awmod@dividend,f
 10603     17F7  09F3               	comf	___awmod@dividend+1,f
 10604     17F8  0AF2               	incf	___awmod@dividend,f
 10605     17F9  1903               	skipnz
 10606     17FA  0AF3               	incf	___awmod@dividend+1,f
 10607     17FB                     i1l7709:
 10608     17FB  0873               	movf	___awmod@dividend+1,w
 10609     17FC  00F1               	movwf	?___awmod+1
 10610     17FD  0872               	movf	___awmod@dividend,w
 10611     17FE  00F0               	movwf	?___awmod
 10612     17FF                     i1l827:
 10613     17FF  0008               	return
 10614     1800                     __end_of___awmod:
 10615                           
 10616                           	psect	text48
 10617     0964                     __ptext48:	
 10618 ;; *************** function ___awdiv *****************
 10619 ;; Defined at:
 10620 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
 10621 ;; Parameters:    Size  Location     Type
 10622 ;;  divisor         2    0[COMMON] int 
 10623 ;;  dividend        2    2[COMMON] int 
 10624 ;; Auto vars:     Size  Location     Type
 10625 ;;  quotient        2    6[COMMON] int 
 10626 ;;  sign            1    5[COMMON] unsigned char 
 10627 ;;  counter         1    4[COMMON] unsigned char 
 10628 ;; Return value:  Size  Location     Type
 10629 ;;                  2    0[COMMON] int 
 10630 ;; Registers used:
 10631 ;;		wreg, status,2, status,0, btemp+1
 10632 ;; Tracked objects:
 10633 ;;		On entry : 0/0
 10634 ;;		On exit  : 0/0
 10635 ;;		Unchanged: 0/0
 10636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10637 ;;      Params:         4       0       0       0       0
 10638 ;;      Locals:         4       0       0       0       0
 10639 ;;      Temps:          0       0       0       0       0
 10640 ;;      Totals:         8       0       0       0       0
 10641 ;;Total ram usage:        8 bytes
 10642 ;; Hardware stack levels used: 1
 10643 ;; This function calls:
 10644 ;;		Nothing
 10645 ;; This function is called by:
 10646 ;;		_div
 10647 ;; This function uses a non-reentrant model
 10648 ;;
 10649                           
 10650     0964                     ___awdiv:	
 10651                           ;psect for function ___awdiv
 10652                           
 10653     0964                     i1l7631:	
 10654                           ;incstack = 0
 10655 ;; hardware stack exceeded
 10656                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
 10657                           
 10658     0964  01F5               	clrf	___awdiv@sign
 10659     0965                     i1l7633:
 10660     0965  1FF1               	btfss	___awdiv@divisor+1,7
 10661     0966  2968               	goto	u737_21
 10662     0967  2969               	goto	u737_20
 10663     0968                     u737_21:
 10664     0968  2970               	goto	i1l7639
 10665     0969                     u737_20:
 10666     0969                     i1l7635:
 10667     0969  09F0               	comf	___awdiv@divisor,f
 10668     096A  09F1               	comf	___awdiv@divisor+1,f
 10669     096B  0AF0               	incf	___awdiv@divisor,f
 10670     096C  1903               	skipnz
 10671     096D  0AF1               	incf	___awdiv@divisor+1,f
 10672     096E                     i1l7637:
 10673     096E  01F5               	clrf	___awdiv@sign
 10674     096F  0AF5               	incf	___awdiv@sign,f
 10675     0970                     i1l7639:
 10676     0970  1FF3               	btfss	___awdiv@dividend+1,7
 10677     0971  2973               	goto	u738_21
 10678     0972  2974               	goto	u738_20
 10679     0973                     u738_21:
 10680     0973  297D               	goto	i1l7645
 10681     0974                     u738_20:
 10682     0974                     i1l7641:
 10683     0974  09F2               	comf	___awdiv@dividend,f
 10684     0975  09F3               	comf	___awdiv@dividend+1,f
 10685     0976  0AF2               	incf	___awdiv@dividend,f
 10686     0977  1903               	skipnz
 10687     0978  0AF3               	incf	___awdiv@dividend+1,f
 10688     0979                     i1l7643:
 10689     0979  3001               	movlw	1
 10690     097A  00FF               	movwf	btemp+1
 10691     097B  087F               	movf	btemp+1,w
 10692     097C  06F5               	xorwf	___awdiv@sign,f
 10693     097D                     i1l7645:
 10694     097D  01F6               	clrf	___awdiv@quotient
 10695     097E  01F7               	clrf	___awdiv@quotient+1
 10696     097F                     i1l7647:
 10697     097F  0870               	movf	___awdiv@divisor,w
 10698     0980  0471               	iorwf	___awdiv@divisor+1,w
 10699     0981  1903               	btfsc	3,2
 10700     0982  2984               	goto	u739_21
 10701     0983  2985               	goto	u739_20
 10702     0984                     u739_21:
 10703     0984  29BC               	goto	i1l7667
 10704     0985                     u739_20:
 10705     0985                     i1l7649:
 10706     0985  01F4               	clrf	___awdiv@counter
 10707     0986  0AF4               	incf	___awdiv@counter,f
 10708     0987  2993               	goto	i1l7655
 10709     0988                     i1l7651:
 10710     0988  3001               	movlw	1
 10711     0989                     u740_25:
 10712     0989  1003               	clrc
 10713     098A  0DF0               	rlf	___awdiv@divisor,f
 10714     098B  0DF1               	rlf	___awdiv@divisor+1,f
 10715     098C  3EFF               	addlw	-1
 10716     098D  1D03               	skipz
 10717     098E  2989               	goto	u740_25
 10718     098F                     i1l7653:
 10719     098F  3001               	movlw	1
 10720     0990  00FF               	movwf	btemp+1
 10721     0991  087F               	movf	btemp+1,w
 10722     0992  07F4               	addwf	___awdiv@counter,f
 10723     0993                     i1l7655:
 10724     0993  1FF1               	btfss	___awdiv@divisor+1,7
 10725     0994  2996               	goto	u741_21
 10726     0995  2997               	goto	u741_20
 10727     0996                     u741_21:
 10728     0996  2988               	goto	i1l7651
 10729     0997                     u741_20:
 10730     0997                     i1l7657:
 10731     0997  3001               	movlw	1
 10732     0998                     u742_25:
 10733     0998  1003               	clrc
 10734     0999  0DF6               	rlf	___awdiv@quotient,f
 10735     099A  0DF7               	rlf	___awdiv@quotient+1,f
 10736     099B  3EFF               	addlw	-1
 10737     099C  1D03               	skipz
 10738     099D  2998               	goto	u742_25
 10739     099E  0871               	movf	___awdiv@divisor+1,w
 10740     099F  0273               	subwf	___awdiv@dividend+1,w
 10741     09A0  1D03               	skipz
 10742     09A1  29A4               	goto	u743_25
 10743     09A2  0870               	movf	___awdiv@divisor,w
 10744     09A3  0272               	subwf	___awdiv@dividend,w
 10745     09A4                     u743_25:
 10746     09A4  1C03               	skipc
 10747     09A5  29A7               	goto	u743_21
 10748     09A6  29A8               	goto	u743_20
 10749     09A7                     u743_21:
 10750     09A7  29AF               	goto	i1l7663
 10751     09A8                     u743_20:
 10752     09A8                     i1l7659:
 10753     09A8  0870               	movf	___awdiv@divisor,w
 10754     09A9  02F2               	subwf	___awdiv@dividend,f
 10755     09AA  0871               	movf	___awdiv@divisor+1,w
 10756     09AB  1C03               	skipc
 10757     09AC  03F3               	decf	___awdiv@dividend+1,f
 10758     09AD  02F3               	subwf	___awdiv@dividend+1,f
 10759     09AE                     i1l7661:
 10760     09AE  1476               	bsf	___awdiv@quotient,0
 10761     09AF                     i1l7663:
 10762     09AF  3001               	movlw	1
 10763     09B0                     u744_25:
 10764     09B0  1003               	clrc
 10765     09B1  0CF1               	rrf	___awdiv@divisor+1,f
 10766     09B2  0CF0               	rrf	___awdiv@divisor,f
 10767     09B3  3EFF               	addlw	-1
 10768     09B4  1D03               	skipz
 10769     09B5  29B0               	goto	u744_25
 10770     09B6                     i1l7665:
 10771     09B6  3001               	movlw	1
 10772     09B7  02F4               	subwf	___awdiv@counter,f
 10773     09B8  1D03               	btfss	3,2
 10774     09B9  29BB               	goto	u745_21
 10775     09BA  29BC               	goto	u745_20
 10776     09BB                     u745_21:
 10777     09BB  2997               	goto	i1l7657
 10778     09BC                     u745_20:
 10779     09BC                     i1l7667:
 10780     09BC  0875               	movf	___awdiv@sign,w
 10781     09BD  1903               	btfsc	3,2
 10782     09BE  29C0               	goto	u746_21
 10783     09BF  29C1               	goto	u746_20
 10784     09C0                     u746_21:
 10785     09C0  29C6               	goto	i1l7671
 10786     09C1                     u746_20:
 10787     09C1                     i1l7669:
 10788     09C1  09F6               	comf	___awdiv@quotient,f
 10789     09C2  09F7               	comf	___awdiv@quotient+1,f
 10790     09C3  0AF6               	incf	___awdiv@quotient,f
 10791     09C4  1903               	skipnz
 10792     09C5  0AF7               	incf	___awdiv@quotient+1,f
 10793     09C6                     i1l7671:
 10794     09C6  0877               	movf	___awdiv@quotient+1,w
 10795     09C7  00F1               	movwf	?___awdiv+1
 10796     09C8  0876               	movf	___awdiv@quotient,w
 10797     09C9  00F0               	movwf	?___awdiv
 10798     09CA                     i1l814:
 10799     09CA  0008               	return
 10800     09CB                     __end_of___awdiv:
 10801                           
 10802                           	psect	text49
 10803     12E3                     __ptext49:	
 10804 ;; *************** function ___bmul *****************
 10805 ;; Defined at:
 10806 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8.c"
 10807 ;; Parameters:    Size  Location     Type
 10808 ;;  multiplier      1    wreg     unsigned char 
 10809 ;;  multiplicand    1    0[COMMON] unsigned char 
 10810 ;; Auto vars:     Size  Location     Type
 10811 ;;  multiplier      1    2[COMMON] unsigned char 
 10812 ;;  product         1    1[COMMON] unsigned char 
 10813 ;; Return value:  Size  Location     Type
 10814 ;;                  1    wreg      unsigned char 
 10815 ;; Registers used:
 10816 ;;		wreg, status,2, status,0, btemp+1
 10817 ;; Tracked objects:
 10818 ;;		On entry : 0/0
 10819 ;;		On exit  : 0/0
 10820 ;;		Unchanged: 0/0
 10821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10822 ;;      Params:         1       0       0       0       0
 10823 ;;      Locals:         2       0       0       0       0
 10824 ;;      Temps:          0       0       0       0       0
 10825 ;;      Totals:         3       0       0       0       0
 10826 ;;Total ram usage:        3 bytes
 10827 ;; Hardware stack levels used: 1
 10828 ;; This function calls:
 10829 ;;		Nothing
 10830 ;; This function is called by:
 10831 ;;		_adcon_captura_grava
 10832 ;;		_adcon_mostra
 10833 ;;		_rs232_transmite
 10834 ;;		_estado_menu_principal
 10835 ;;		_estado_executa_muda
 10836 ;; This function uses a non-reentrant model
 10837 ;;
 10838                           
 10839     12E3                     ___bmul:	
 10840                           ;psect for function ___bmul
 10841                           
 10842                           
 10843                           ;incstack = 0
 10844                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
 10845                           ;___bmul@multiplier stored from wreg
 10846     12E3  00F2               	movwf	___bmul@multiplier
 10847     12E4                     i1l7859:
 10848     12E4  01F1               	clrf	___bmul@product
 10849     12E5                     i1l7861:
 10850     12E5  1C72               	btfss	___bmul@multiplier,0
 10851     12E6  2AE8               	goto	u775_21
 10852     12E7  2AE9               	goto	u775_20
 10853     12E8                     u775_21:
 10854     12E8  2AED               	goto	i1l7865
 10855     12E9                     u775_20:
 10856     12E9                     i1l7863:
 10857     12E9  0870               	movf	___bmul@multiplicand,w
 10858     12EA  00FF               	movwf	btemp+1
 10859     12EB  087F               	movf	btemp+1,w
 10860     12EC  07F1               	addwf	___bmul@product,f
 10861     12ED                     i1l7865:
 10862     12ED  1003               	clrc
 10863     12EE  0DF0               	rlf	___bmul@multiplicand,f
 10864     12EF                     i1l7867:
 10865     12EF  1003               	clrc
 10866     12F0  0CF2               	rrf	___bmul@multiplier,f
 10867     12F1                     i1l7869:
 10868     12F1  0872               	movf	___bmul@multiplier,w
 10869     12F2  1D03               	btfss	3,2
 10870     12F3  2AF5               	goto	u776_21
 10871     12F4  2AF6               	goto	u776_20
 10872     12F5                     u776_21:
 10873     12F5  2AE5               	goto	i1l7861
 10874     12F6                     u776_20:
 10875     12F6                     i1l7871:
 10876     12F6  0871               	movf	___bmul@product,w
 10877     12F7                     i1l687:
 10878     12F7  0008               	return
 10879     12F8                     __end_of___bmul:
 10880                           
 10881                           	psect	text50
 10882     0B0D                     __ptext50:	
 10883 ;; *************** function _adcon_ler_canal *****************
 10884 ;; Defined at:
 10885 ;;		line 81 in file "adcon.c"
 10886 ;; Parameters:    Size  Location     Type
 10887 ;;  cnl             1    wreg     unsigned char 
 10888 ;; Auto vars:     Size  Location     Type
 10889 ;;  cnl             1    6[COMMON] unsigned char 
 10890 ;;  i               2   11[COMMON] unsigned int 
 10891 ;;  acc             4    7[COMMON] unsigned long 
 10892 ;; Return value:  Size  Location     Type
 10893 ;;                  2    0[COMMON] unsigned int 
 10894 ;; Registers used:
 10895 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
 10896 ;; Tracked objects:
 10897 ;;		On entry : 0/0
 10898 ;;		On exit  : 0/0
 10899 ;;		Unchanged: 0/0
 10900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10901 ;;      Params:         2       0       0       0       0
 10902 ;;      Locals:         7       0       0       0       0
 10903 ;;      Temps:          4       0       0       0       0
 10904 ;;      Totals:        13       0       0       0       0
 10905 ;;Total ram usage:       13 bytes
 10906 ;; Hardware stack levels used: 2
 10907 ;; This function calls:
 10908 ;;		Nothing
 10909 ;; This function is called by:
 10910 ;;		_adcon_captura_grava
 10911 ;;		_estado_menu_principal
 10912 ;;		_mq6_calibrar
 10913 ;; This function uses a non-reentrant model
 10914 ;;
 10915                           
 10916     0B0D                     _adcon_ler_canal:	
 10917                           ;psect for function _adcon_ler_canal
 10918                           
 10919                           
 10920                           ;incstack = 0
 10921 ;; using string table level
 10922                           ; Regs used in _adcon_ler_canal: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
 10923                           ;adcon_ler_canal@cnl stored from wreg
 10924     0B0D  00F6               	movwf	adcon_ler_canal@cnl
 10925     0B0E                     i1l7911:
 10926                           
 10927                           ;adcon.c: 94:     uint32_t acc = 0;
 10928     0B0E  3000               	movlw	0
 10929     0B0F  00FA               	movwf	adcon_ler_canal@acc+3
 10930     0B10  3000               	movlw	0
 10931     0B11  00F9               	movwf	adcon_ler_canal@acc+2
 10932     0B12  3000               	movlw	0
 10933     0B13  00F8               	movwf	adcon_ler_canal@acc+1
 10934     0B14  3000               	movlw	0
 10935     0B15  00F7               	movwf	adcon_ler_canal@acc
 10936     0B16                     i1l7913:
 10937                           
 10938                           ;adcon.c: 95:     ADCON0bits.CHS = canais[cnl];
 10939     0B16  0876               	movf	adcon_ler_canal@cnl,w
 10940     0B17  3E4C               	addlw	low (_canais| (0+32768))
 10941     0B18  0084               	movwf	4
 10942     0B19  3087               	movlw	high (_canais| (0+32768))
 10943     0B1A  1803               	skipnc
 10944     0B1B  3E01               	addlw	1
 10945     0B1C  1283               	bcf	3,5	;RP0=0, select bank0
 10946     0B1D  1303               	bcf	3,6	;RP1=0, select bank0
 10947     0B1E  00FF               	movwf	btemp+1
 10948     0B1F  120A  118A  2700  120A  158A  	fcall	stringtab
 10949     0B24  00F2               	movwf	??_adcon_ler_canal
 10950     0B25  0DF2               	rlf	??_adcon_ler_canal,f
 10951     0B26  0DF2               	rlf	??_adcon_ler_canal,f
 10952     0B27  081F               	movf	31,w	;volatile
 10953     0B28  0672               	xorwf	??_adcon_ler_canal,w
 10954     0B29  39C3               	andlw	-61
 10955     0B2A  0672               	xorwf	??_adcon_ler_canal,w
 10956     0B2B  009F               	movwf	31	;volatile
 10957     0B2C                     i1l7915:
 10958                           
 10959                           ;adcon.c: 96:     _delay((unsigned long)((20)*(4000000/4000000.0)));
 10960     0B2C  3006               	movlw	6
 10961     0B2D  00F2               	movwf	??_adcon_ler_canal
 10962     0B2E                     u860_27:
 10963     0B2E  0BF2               	decfsz	??_adcon_ler_canal,f
 10964     0B2F  2B2E               	goto	u860_27
 10965     0B30  0000               	nop
 10966     0B31                     i1l7917:
 10967                           
 10968                           ;adcon.c: 98:     for (uint16_t i = 0; i < 32; i++) {
 10969     0B31  01FB               	clrf	adcon_ler_canal@i
 10970     0B32  01FC               	clrf	adcon_ler_canal@i+1
 10971     0B33                     i1l261:
 10972                           
 10973                           ;adcon.c: 100:         ADCON0bits.GO_nDONE = 1;
 10974     0B33  1283               	bcf	3,5	;RP0=0, select bank0
 10975     0B34  1303               	bcf	3,6	;RP1=0, select bank0
 10976     0B35  149F               	bsf	31,1	;volatile
 10977     0B36                     i1l263:	
 10978                           ;adcon.c: 101:         while (ADCON0bits.GO_nDONE);
 10979                           
 10980     0B36  189F               	btfsc	31,1	;volatile
 10981     0B37  2B39               	goto	u779_21
 10982     0B38  2B3A               	goto	u779_20
 10983     0B39                     u779_21:
 10984     0B39  2B36               	goto	i1l263
 10985     0B3A                     u779_20:
 10986     0B3A                     i1l7923:
 10987                           
 10988                           ;adcon.c: 102:         acc += ((ADRESH << 8) + ADRESL);
 10989     0B3A  1683               	bsf	3,5	;RP0=1, select bank1
 10990     0B3B  1303               	bcf	3,6	;RP1=0, select bank1
 10991     0B3C  081E               	movf	30,w	;volatile
 10992     0B3D  00F2               	movwf	??_adcon_ler_canal
 10993     0B3E  1283               	bcf	3,5	;RP0=0, select bank0
 10994     0B3F  1303               	bcf	3,6	;RP1=0, select bank0
 10995     0B40  081E               	movf	30,w	;volatile
 10996     0B41  00F3               	movwf	??_adcon_ler_canal+1
 10997     0B42  3000               	movlw	0
 10998     0B43  1BF3               	btfsc	??_adcon_ler_canal+1,7
 10999     0B44  30FF               	movlw	255
 11000     0B45  00F4               	movwf	??_adcon_ler_canal+2
 11001     0B46  00F5               	movwf	??_adcon_ler_canal+3
 11002     0B47  0872               	movf	??_adcon_ler_canal,w
 11003     0B48  07F7               	addwf	adcon_ler_canal@acc,f
 11004     0B49  0873               	movf	??_adcon_ler_canal+1,w
 11005     0B4A  1103               	clrz
 11006     0B4B  1803               	skipnc
 11007     0B4C  3E01               	addlw	1
 11008     0B4D  1903               	skipnz
 11009     0B4E  2B50               	goto	u780_21
 11010     0B4F  07F8               	addwf	adcon_ler_canal@acc+1,f
 11011     0B50                     u780_21:
 11012     0B50  0874               	movf	??_adcon_ler_canal+2,w
 11013     0B51  1103               	clrz
 11014     0B52  1803               	skipnc
 11015     0B53  3E01               	addlw	1
 11016     0B54  1903               	skipnz
 11017     0B55  2B57               	goto	u780_22
 11018     0B56  07F9               	addwf	adcon_ler_canal@acc+2,f
 11019     0B57                     u780_22:
 11020     0B57  0875               	movf	??_adcon_ler_canal+3,w
 11021     0B58  1103               	clrz
 11022     0B59  1803               	skipnc
 11023     0B5A  3E01               	addlw	1
 11024     0B5B  1903               	skipnz
 11025     0B5C  2B5E               	goto	u780_23
 11026     0B5D  07FA               	addwf	adcon_ler_canal@acc+3,f
 11027     0B5E                     u780_23:
 11028                           
 11029                           ;adcon.c: 103:     }
 11030     0B5E  3001               	movlw	1
 11031     0B5F  07FB               	addwf	adcon_ler_canal@i,f
 11032     0B60  1803               	skipnc
 11033     0B61  0AFC               	incf	adcon_ler_canal@i+1,f
 11034     0B62  3000               	movlw	0
 11035     0B63  07FC               	addwf	adcon_ler_canal@i+1,f
 11036     0B64  3000               	movlw	0
 11037     0B65  027C               	subwf	adcon_ler_canal@i+1,w
 11038     0B66  3020               	movlw	32
 11039     0B67  1903               	skipnz
 11040     0B68  027B               	subwf	adcon_ler_canal@i,w
 11041     0B69  1C03               	skipc
 11042     0B6A  2B6C               	goto	u781_21
 11043     0B6B  2B6D               	goto	u781_20
 11044     0B6C                     u781_21:
 11045     0B6C  2B33               	goto	i1l261
 11046     0B6D                     u781_20:
 11047     0B6D                     i1l7925:
 11048                           
 11049                           ;adcon.c: 106:     return acc / 32;
 11050     0B6D  0877               	movf	adcon_ler_canal@acc,w
 11051     0B6E  00F2               	movwf	??_adcon_ler_canal
 11052     0B6F  0878               	movf	adcon_ler_canal@acc+1,w
 11053     0B70  00F3               	movwf	??_adcon_ler_canal+1
 11054     0B71  0879               	movf	adcon_ler_canal@acc+2,w
 11055     0B72  00F4               	movwf	??_adcon_ler_canal+2
 11056     0B73  087A               	movf	adcon_ler_canal@acc+3,w
 11057     0B74  00F5               	movwf	??_adcon_ler_canal+3
 11058     0B75  3005               	movlw	5
 11059     0B76                     u782_25:
 11060     0B76  1003               	clrc
 11061     0B77  0CF5               	rrf	??_adcon_ler_canal+3,f
 11062     0B78  0CF4               	rrf	??_adcon_ler_canal+2,f
 11063     0B79  0CF3               	rrf	??_adcon_ler_canal+1,f
 11064     0B7A  0CF2               	rrf	??_adcon_ler_canal,f
 11065     0B7B                     u782_20:
 11066     0B7B  3EFF               	addlw	-1
 11067     0B7C  1D03               	skipz
 11068     0B7D  2B76               	goto	u782_25
 11069     0B7E  0873               	movf	??_adcon_ler_canal+1,w
 11070     0B7F  00F1               	movwf	?_adcon_ler_canal+1
 11071     0B80  0872               	movf	??_adcon_ler_canal,w
 11072     0B81  00F0               	movwf	?_adcon_ler_canal
 11073     0B82                     i1l266:
 11074     0B82  0008               	return
 11075     0B83                     __end_of_adcon_ler_canal:
 11076     0002                     
 11077                           	psect	functab
 11078     0039                     __pfunctab:
 11079     0039                     __fptable:
 11080     0039                     fptable:
 11081     0039  00FF               	movwf	(btemp+1)& (0+127)
 11082     003A  3000               	movlw	high fptable
 11083     003B  008A               	movwf	10
 11084     003C  087F               	movf	(btemp+1)& (0+127),w
 11085     003D  0782               	addwf	2,f
 11086     003E                     fpbase:
 11087     003E  283E               	goto	fpbase	; Call via a null pointer and you will get stuck here.
 11088     003F                     fp__putch:
 11089     003F  120A  118A  2EFF   	ljmp	_putch
 11090     0042                     __end_of__fptable:
 11091     0042                     __i1fptable:
 11092     0042                     i1fptable:
 11093     0042  00FF               	movwf	(btemp+1)& (0+127)
 11094     0043  3000               	movlw	high i1fptable
 11095     0044  008A               	movwf	10
 11096     0045  087F               	movf	(btemp+1)& (0+127),w
 11097     0046  0782               	addwf	2,f
 11098     0047                     i1fpbase:
 11099     0047  2847               	goto	i1fpbase	; Call via a null pointer and you will get stuck here.
 11100     0048                     fp_i1_putch:
 11101     0048  120A  118A  2803   	ljmp	i1_putch
 11102     004B                     __end_of__i1fptable:
 11103     007E                     btemp	set	126	;btemp
 11104     007E                     wtemp0	set	126
 11105                           
 11106                           	psect	idloc
 11107                           
 11108                           ;Config register IDLOC0 @ 0x2000
 11109                           ;	unspecified, using default values
 11110     2000                     	org	8192
 11111     2000  3FFF               	dw	16383
 11112                           
 11113                           ;Config register IDLOC1 @ 0x2001
 11114                           ;	unspecified, using default values
 11115     2001                     	org	8193
 11116     2001  3FFF               	dw	16383
 11117                           
 11118                           ;Config register IDLOC2 @ 0x2002
 11119                           ;	unspecified, using default values
 11120     2002                     	org	8194
 11121     2002  3FFF               	dw	16383
 11122                           
 11123                           ;Config register IDLOC3 @ 0x2003
 11124                           ;	unspecified, using default values
 11125     2003                     	org	8195
 11126     2003  3FFF               	dw	16383
 11127                           
 11128                           	psect	config
 11129                           
 11130                           ;Config register CONFIG1 @ 0x2007
 11131                           ;	Oscillator Selection bits
 11132                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
 11133                           ;	Watchdog Timer Enable bit
 11134                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11135                           ;	Power-up Timer Enable bit
 11136                           ;	PWRTE = ON, PWRT enabled
 11137                           ;	RE3/MCLR pin function select bit
 11138                           ;	MCLRE = 0x1, unprogrammed default
 11139                           ;	Code Protection bit
 11140                           ;	CP = OFF, Program memory code protection is disabled
 11141                           ;	Data Code Protection bit
 11142                           ;	CPD = 0x1, unprogrammed default
 11143                           ;	Brown Out Reset Selection bits
 11144                           ;	BOREN = OFF, BOR disabled
 11145                           ;	Internal External Switchover bit
 11146                           ;	IESO = 0x1, unprogrammed default
 11147                           ;	Fail-Safe Clock Monitor Enabled bit
 11148                           ;	FCMEN = 0x1, unprogrammed default
 11149                           ;	Low Voltage Programming Enable bit
 11150                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11151                           ;	In-Circuit Debugger Mode bit
 11152                           ;	DEBUG = 0x1, unprogrammed default
 11153     2007                     	org	8199
 11154     2007  2CE1               	dw	11489
 11155                           
 11156                           ;Config register CONFIG2 @ 0x2008
 11157                           ;	unspecified, using default values
 11158                           ;	Brown-out Reset Selection bit
 11159                           ;	BOR4V = 0x1, unprogrammed default
 11160                           ;	Flash Program Memory Self Write Enable bits
 11161                           ;	WRT = 0x3, unprogrammed default
 11162     2008                     	org	8200
 11163     2008  3FFF               	dw	16383

Data Sizes:
    Strings     273
    Constant    140
    Data        14
    BSS         68
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     32      65
    BANK3            96     15      64
    BANK2            96      0       0

Pointer List with Targets:

    i1__doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
		 -> NULL(), putch(), 

    i1__doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 17
		 -> NULL(NULL[0]), estado_executa_muda@tmp(BANK0[17]), mq_mostra@temp_str(BANK0[16]), adcon_mostra@temp_str(BANK0[9]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_46(CODE[10]), STR_45(CODE[10]), STR_43(CODE[9]), STR_22(CODE[7]), 
		 -> STR_17(CODE[9]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK3[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 17
		 -> estado_executa_muda@tmp(BANK0[17]), mq_mostra@temp_str(BANK0[16]), adcon_mostra@temp_str(BANK0[9]), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> NULL(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 17
		 -> NULL(NULL[0]), estado_executa_muda@tmp(BANK0[17]), mq_mostra@temp_str(BANK0[16]), adcon_mostra@temp_str(BANK0[9]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), printf@ap(BANK3[2]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_46(CODE[10]), STR_45(CODE[10]), STR_43(CODE[9]), STR_22(CODE[7]), 
		 -> STR_17(CODE[9]), STR_1(CODE[6]), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> NULL(), putch(), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 17
		 -> NULL(NULL[0]), estado_executa_muda@tmp(BANK0[17]), mq_mostra@temp_str(BANK0[16]), adcon_mostra@temp_str(BANK0[9]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 3
		 -> sprintf@pb(BANK0[2]), printf@pb(BANK3[2]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK3[2]), 

    S1538__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> NULL(), putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> i1_putch(), NULL(), putch(), 

    S1538__prbuf$ptr	PTR unsigned char  size(1) Largest target is 17
		 -> NULL(NULL[0]), estado_executa_muda@tmp(BANK0[17]), mq_mostra@temp_str(BANK0[16]), adcon_mostra@temp_str(BANK0[9]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 17
		 -> NULL(NULL[0]), estado_executa_muda@tmp(BANK0[17]), mq_mostra@temp_str(BANK0[16]), adcon_mostra@temp_str(BANK0[9]), 

    menu_inicial	PTR const unsigned char [7] size(2) Largest target is 15
		 -> STR_29(CODE[15]), STR_28(CODE[14]), STR_27(CODE[7]), STR_26(CODE[8]), 
		 -> STR_25(CODE[10]), STR_24(CODE[15]), STR_23(CODE[9]), 

    S503$str_quant_sensores	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_33(CODE[11]), STR_32(CODE[11]), STR_31(CODE[11]), STR_30(CODE[9]), 
		 -> STR_21(CODE[11]), STR_20(CODE[11]), STR_19(CODE[11]), STR_18(CODE[9]), 
		 -> STR_15(CODE[11]), STR_14(CODE[11]), STR_13(CODE[11]), STR_12(CODE[9]), 

    menu_quant_sensores.str_quant_sensores	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_33(CODE[11]), STR_32(CODE[11]), STR_31(CODE[11]), STR_30(CODE[9]), 
		 -> STR_21(CODE[11]), STR_20(CODE[11]), STR_19(CODE[11]), STR_18(CODE[9]), 
		 -> STR_15(CODE[11]), STR_14(CODE[11]), STR_13(CODE[11]), STR_12(CODE[9]), 

    S327$str_tempo_amostra	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_40(CODE[7]), STR_39(CODE[7]), STR_38(CODE[7]), STR_37(CODE[6]), 
		 -> STR_36(CODE[7]), STR_35(CODE[7]), STR_34(CODE[6]), STR_11(CODE[7]), 
		 -> STR_10(CODE[7]), STR_9(CODE[7]), STR_8(CODE[6]), STR_7(CODE[7]), 
		 -> STR_6(CODE[7]), STR_5(CODE[6]), 

    menu_tempo_amostra.str_tempo_amostra	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_40(CODE[7]), STR_39(CODE[7]), STR_38(CODE[7]), STR_37(CODE[6]), 
		 -> STR_36(CODE[7]), STR_35(CODE[7]), STR_34(CODE[6]), STR_11(CODE[7]), 
		 -> STR_10(CODE[7]), STR_9(CODE[7]), STR_8(CODE[6]), STR_7(CODE[7]), 
		 -> STR_6(CODE[7]), STR_5(CODE[6]), 

    lcd_puts@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_47(CODE[11]), STR_44(CODE[12]), STR_42(CODE[12]), estado_executa_muda@tmp(BANK0[17]), 
		 -> STR_41(CODE[14]), STR_40(CODE[7]), STR_39(CODE[7]), STR_38(CODE[7]), 
		 -> STR_37(CODE[6]), STR_36(CODE[7]), STR_35(CODE[7]), STR_34(CODE[6]), 
		 -> STR_33(CODE[11]), STR_32(CODE[11]), STR_31(CODE[11]), STR_30(CODE[9]), 
		 -> STR_29(CODE[15]), STR_28(CODE[14]), STR_27(CODE[7]), STR_26(CODE[8]), 
		 -> STR_25(CODE[10]), STR_24(CODE[15]), STR_23(CODE[9]), mq_mostra@temp_str(BANK0[16]), 
		 -> STR_21(CODE[11]), STR_20(CODE[11]), STR_19(CODE[11]), STR_18(CODE[9]), 
		 -> adcon_mostra@temp_str(BANK0[9]), STR_16(CODE[14]), STR_15(CODE[11]), STR_14(CODE[11]), 
		 -> STR_13(CODE[11]), STR_12(CODE[9]), STR_11(CODE[7]), STR_10(CODE[7]), 
		 -> STR_9(CODE[7]), STR_8(CODE[6]), STR_7(CODE[7]), STR_6(CODE[7]), 
		 -> STR_5(CODE[6]), STR_4(CODE[11]), STR_3(CODE[2]), STR_2(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _handler in COMMON

    _handler->_adcon_captura_grava
    _rs232_transmite->___bmul
    _estado_maquina->_estado_menu_conf_quant_sensores
    _estado_maquina->_estado_menu_conf_tempo_amostra
    _estado_maquina->_estado_ver_todos
    ___lbdiv->i1_eeprom_read
    _estado_menu_principal->_adcon_ler_canal
    _estado_executa_muda->i1___lwmod
    _adcon_captura_grava->_adcon_ler_canal
    i1_eeprom_gravar_word->i1_eeprom_write
    _lcd_clear->i1_lcd_write
    _eeprom_ler_word->i1_eeprom_read
    _adcon_mostra->_div
    i1_lcd_puts->___bmul
    i1_lcd_goto->i1_lcd_write
    i1__doprnt->i1___lwmod
    i1___lwmod->i1___lwdiv
    _div->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _handler in BANK0

    _estado_maquina->_estado_menu_principal
    _estado_ver_todos->_estado_executa_muda
    _estado_menu_principal->_estado_executa_muda
    _estado_menu_limpar->_estado_executa_muda
    _estado_menu_conf_tempo_amostra->_estado_executa_muda
    _estado_menu_conf_quant_sensores->_estado_executa_muda
    _estado_max_min->_estado_executa_muda
    _estado_inicial->_estado_executa_muda
    _estado_captura_mostra->_estado_executa_muda
    _estado_executa_muda->_sprintf
    _adcon_captura_grava->_adcon_mostra
    _adcon_mostra->_sprintf
    _sprintf->i1__doprnt

Critical Paths under _main in BANK1

    _printf->__doprnt
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _lcd_puts->_lcd_write
    _lcd_init->_lcd_write
    _lcd_goto->_lcd_write
    _eeprom_gravar_word->_eeprom_write

Critical Paths under _handler in BANK1

    _handler->_estado_maquina

Critical Paths under _main in BANK3

    _main->_printf
    _printf->__doprnt

Critical Paths under _handler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _handler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   10994
                                             31 BANK1      1     1      0
                         _adcon_init
                          _btns_init
                 _eeprom_gravar_word
                        _eeprom_read
                       _eeprom_write
                           _lcd_goto
                           _lcd_init
                           _lcd_puts
                             _printf
                         _rs232_init
                        _timer0_init
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rs232_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     4      2    5217
                                              9 BANK3      6     4      2
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             23    17      6    4453
                                             25 BANK1      6     0      6
                                              0 BANK3      9     9      0
                                NULL *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     0      1     237
                                             13 BANK1      1     0      1
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     896
                                             20 BANK1      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     914
                                             13 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (10) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             4     2      2    1492
                                             15 BANK1      4     2      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     168
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             4     3      1     644
                                             15 BANK1      4     3      1
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            2     2      0     168
                                             13 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _eeprom_read                                          1     1      0      42
                                             13 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _eeprom_gravar_word                                   3     1      2    2166
                                             15 BANK1      3     1      2
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (1) _eeprom_write                                         2     1      1    1080
                                             13 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (1) _btns_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcon_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _handler                                             10    10      0  136003
                                              3 BANK1     10    10      0
                _adcon_captura_grava
                         _btns_testa
                    _eeprom_ler_word
                     _estado_maquina
                    _rs232_transmite
 ---------------------------------------------------------------------------------
 (5) _rs232_transmite                                      7     7      0     798
                                              3 COMMON     7     7      0
                             ___bmul
                      i1_eeprom_read
 ---------------------------------------------------------------------------------
 (5) _estado_maquina                                       3     3      0  120193
                                              0 BANK1      3     3      0
              _estado_captura_mostra
                     _estado_inicial
                     _estado_max_min
    _estado_menu_conf_quant_sensores
     _estado_menu_conf_tempo_amostra
                 _estado_menu_limpar
              _estado_menu_principal
                   _estado_ver_todos
 ---------------------------------------------------------------------------------
 (6) _estado_ver_todos                                     3     3      0   13302
                                             12 COMMON     2     2      0
                                             66 BANK0      1     1      0
                            ___lbdiv
                _estado_executa_muda
                      i1_eeprom_read
 ---------------------------------------------------------------------------------
 (7) ___lbdiv                                              4     3      1     335
                                              1 COMMON     4     3      1
                      i1_eeprom_read (ARG)
 ---------------------------------------------------------------------------------
 (6) _estado_menu_principal                               14    14      0   27589
                                             66 BANK0     14    14      0
                             ___bmul
                    _adcon_ler_canal
                       _adcon_mostra
                    _eeprom_ler_word
                _estado_executa_muda
                          _lcd_clear
               i1_eeprom_gravar_word
                      i1_eeprom_read
                     i1_eeprom_write
                         i1_lcd_puts
 ---------------------------------------------------------------------------------
 (6) _estado_menu_limpar                                   1     1      0   12936
                                             12 COMMON     1     1      0
                _estado_executa_muda
 ---------------------------------------------------------------------------------
 (6) _estado_menu_conf_tempo_amostra                       3     3      0   13816
                                             12 COMMON     2     2      0
                                             66 BANK0      1     1      0
                _estado_executa_muda
               i1_eeprom_gravar_word
 ---------------------------------------------------------------------------------
 (6) _estado_menu_conf_quant_sensores                      3     3      0   13302
                                             12 COMMON     2     2      0
                                             66 BANK0      1     1      0
                _estado_executa_muda
                     i1_eeprom_write
 ---------------------------------------------------------------------------------
 (6) _estado_max_min                                       1     1      0   12936
                                             12 COMMON     1     1      0
                _estado_executa_muda
 ---------------------------------------------------------------------------------
 (6) _estado_inicial                                       1     1      0   12881
                _estado_executa_muda
 ---------------------------------------------------------------------------------
 (6) _estado_captura_mostra                                1     1      0   12936
                                             12 COMMON     1     1      0
                _estado_executa_muda
 ---------------------------------------------------------------------------------
 (7) _estado_executa_muda                                 38    38      0   12881
                                             28 BANK0     38    38      0
                             ___bmul
                    _eeprom_ler_word
                          _lcd_clear
                            _sprintf
                          i1___lwdiv
                          i1___lwmod
               i1_eeprom_gravar_word
                      i1_eeprom_read
                     i1_eeprom_write
                         i1_lcd_goto
                         i1_lcd_puts
 ---------------------------------------------------------------------------------
 (5) _btns_testa                                           3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) _adcon_captura_grava                                 14    14      0   14598
                                             13 COMMON     1     1      0
                                             48 BANK0     13    13      0
                             ___bmul
                    _adcon_ler_canal
                       _adcon_mostra
                    _eeprom_ler_word
                          _lcd_clear
               i1_eeprom_gravar_word
                      i1_eeprom_read
                     i1_eeprom_write
                         i1_lcd_puts
 ---------------------------------------------------------------------------------
 (8) i1_eeprom_gravar_word                                 3     1      2     880
                                              2 COMMON     3     1      2
                     i1_eeprom_write
 ---------------------------------------------------------------------------------
 (8) i1_eeprom_write                                       2     1      1     366
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (8) _lcd_clear                                            2     2      0     124
                                              2 COMMON     2     2      0
                        i1_lcd_write
 ---------------------------------------------------------------------------------
 (8) _eeprom_ler_word                                      7     5      2     164
                                              1 COMMON     7     5      2
                      i1_eeprom_read
 ---------------------------------------------------------------------------------
 (6) i1_eeprom_read                                        1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _adcon_mostra                                        20    17      3   10440
                                             28 BANK0     20    17      3
                             ___bmul
                                _div
                            _sprintf
                         i1_lcd_goto
                         i1_lcd_puts
 ---------------------------------------------------------------------------------
 (8) i1_lcd_puts                                           4     2      2     722
                                              3 COMMON     4     2      2
                             ___bmul (ARG)
                        i1_lcd_write
 ---------------------------------------------------------------------------------
 (8) i1_lcd_goto                                           4     3      1     303
                                              2 COMMON     4     3      1
                        i1_lcd_write
 ---------------------------------------------------------------------------------
 (9) i1_lcd_write                                          2     2      0     124
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _sprintf                                             13     5      8    5681
                                             15 BANK0     13     5      8
                             ___bmul (ARG)
                          i1__doprnt
 ---------------------------------------------------------------------------------
 (9) i1__doprnt                                           23    17      6    4083
                                              0 BANK0     15     9      6
                                NULL *
                          i1___lwdiv
                          i1___lwmod
                            i1_putch *
 ---------------------------------------------------------------------------------
 (10) i1_putch                                             1     0      1     177
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) i1___lwmod                                            5     1      4     907
                                              7 COMMON     5     1      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) i1___lwdiv                                            7     3      4     937
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (10) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 (8) _div                                                  8     4      4    1621
                                              8 COMMON     4     0      4
                                              0 BANK0      4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     613
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              8     4      4     625
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (6) ___bmul                                               3     2      1     460
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (8) _adcon_ler_canal                                     13    11      2     136
                                              0 COMMON    13    11      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcon_init
   _btns_init
   _eeprom_gravar_word
     _eeprom_write
   _eeprom_read
   _eeprom_write
   _lcd_goto
     _lcd_write
   _lcd_init
     _lcd_write
   _lcd_puts
     _lcd_write
   _printf
     __doprnt
       NULL(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       _putch *
   _rs232_init
   _timer0_init

 _handler (ROOT)
   _adcon_captura_grava
     ___bmul
     _adcon_ler_canal
     _adcon_mostra
       ___bmul
       _div
         ___awdiv
         ___awmod
       _sprintf
         ___bmul (ARG)
         i1__doprnt (ARG)
           NULL(Fake) *
           i1___lwdiv *
           i1___lwmod *
             i1___lwdiv (ARG)
           i1_putch *
       i1_lcd_goto
         i1_lcd_write
       i1_lcd_puts
         ___bmul (ARG)
         i1_lcd_write (ARG)
     _eeprom_ler_word
       i1_eeprom_read
     _lcd_clear
       i1_lcd_write
     i1_eeprom_gravar_word
       i1_eeprom_write
     i1_eeprom_read
     i1_eeprom_write
     i1_lcd_puts
   _btns_testa
   _eeprom_ler_word
   _estado_maquina
     _estado_captura_mostra
       _estado_executa_muda
         ___bmul
         _eeprom_ler_word
         _lcd_clear
         _sprintf
         i1___lwdiv
         i1___lwmod
         i1_eeprom_gravar_word
         i1_eeprom_read
         i1_eeprom_write
         i1_lcd_goto
         i1_lcd_puts
     _estado_inicial
       _estado_executa_muda
     _estado_max_min
       _estado_executa_muda
     _estado_menu_conf_quant_sensores
       _estado_executa_muda
       i1_eeprom_write
     _estado_menu_conf_tempo_amostra
       _estado_executa_muda
       i1_eeprom_gravar_word
     _estado_menu_limpar
       _estado_executa_muda
     _estado_menu_principal
       ___bmul
       _adcon_ler_canal
       _adcon_mostra
       _eeprom_ler_word
       _estado_executa_muda
       _lcd_clear
       i1_eeprom_gravar_word
       i1_eeprom_read
       i1_eeprom_write
       i1_lcd_puts
     _estado_ver_todos
       ___lbdiv
         i1_eeprom_read (ARG)
       _estado_executa_muda
       i1_eeprom_read
   _rs232_transmite
     ___bmul
     i1_eeprom_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      F      40       9       66.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     20      41       7       81.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      DF      12        0.0%
ABS                  0      0      DF       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Aug 30 18:49:48 2023

                                      pc 0002                           ___bmul@product 0071  
                                     l41 0D53                                       l42 0D53  
                                     l80 1663                                       l81 166D  
                                     l83 167B                                       l75 1646  
                                     l76 1649                                       l77 1653  
                                     l93 1589                                       l78 1656  
                                     l79 1660                                       l99 0A9C  
                           ___awdiv@sign 0075                                       fsr 0004  
           _gl_item_menu_config_sensores 00CF                                      l102 15FE  
                                    l140 151D                                      l321 1359  
                                    l274 1340                                      l284 06FE  
                                    l196 1283                                      l631 135D  
                                    l633 1376                                      l650 1521  
                                    l651 1521                                      l654 1541  
                                    l657 1552                                      l933 1705  
                                    l943 163A                                      _RB0 0030  
                                    _RB1 0031                                      _RB2 0032  
                                    _RC0 0038                                      _RC1 0039  
                                    _RC2 003A                                      _RB4 0034  
                                    _RB5 0035                                      _RB6 0036  
                                    _RB7 0037                                      _TX9 04C6  
                                    _div 14BB                                      fsr0 0004  
                                    indf 0000                             ___awmod@sign 0075  
                 estado_menu_principal@i 006C                               i1_lcd_goto 148D  
                             i1_lcd_puts 1706                              i1__doprnt@c 002E  
                            i1__doprnt@f 0022                   estado_executa_muda@tmp 0040  
                                   l1204 13BD                                     l1223 0387  
                                   l1225 034B                                     l1245 0533  
                                   l1248 06FF                                     ?_div 0078  
                                   l7021 1512                                     l7101 127B  
                                   l7023 151C                                     l7031 1356  
                                   l7103 127E                                     l7033 15C4  
                                   l7025 1341                                     l7105 127F  
                                   l7019 14EA                                     l7035 15D4  
                                   l7051 0A54                                     l7027 1353  
                                   l7107 1281                                     l7053 0A5A  
                                   l7061 0A86                                     l7029 1355  
                                   l7109 1282                                     l7071 1568  
                                   l7063 1556                                     l7055 0A61  
                                   l7047 0A34                                     l7081 1366  
                                   l7073 157A                                     l7065 155A  
                                   l7057 0A77                                     l7049 0A38  
                                   l7091 1333                                     l7075 1582  
                                   l7067 1561                                     l7059 0A7E  
                                   l7093 1334                                     l6701 1533  
                                   l7085 06EB                                     l8301 03B7  
                                   l7095 133A                                     l7087 1328  
                                   l6711 1549                                     l6703 1539  
                                   l8303 03D5                                     l7097 133D  
                                   l7089 1330                                     l6713 154A  
                                   l6705 153C                                     l6721 1642  
                                   l8321 0429                                     l8313 03FF  
                                   l6715 154B                                     l6707 1540  
                                   l6731 1677                                     l6723 164F  
                                   l6651 16C0                                     l8331 04A9  
                                   l8323 0447                                     l8315 0403  
                                   l7099 1277                                     l6717 1551  
                                   l6709 1545                                     l6733 167A  
                                   l6725 165C                                     l6661 16D8  
                                   l6653 16C4                                     l8333 04C3  
                                   l8325 0453                                     l8317 0409  
                                   l8309 03D7                                     l8341 0505  
                                   l8501 0D2C                                     l6727 1669  
                                   l6719 163E                                     l6671 16FB  
                                   l6663 16DC                                     l6655 16CA  
                                   l8335 04E1                                     l8319 040F  
                                   l8327 045C                                     l8343 052F  
                                   l8351 1399                                     l8511 0D52  
                                   l8503 0D34                      _menu_quant_sensores 072E  
                                   l6729 1670                                     l6665 16ED  
                                   l6657 16CD                                     l6673 1701  
                                   l6681 160A                                     l8337 04EF  
                                   l8329 0461                                     l8281 0311  
                                   l8353 139C                                     l8505 0D3A  
                                   l6667 16F3                                     l6659 16D4  
                                   l6691 1629                                     l6683 1611  
                                   l8339 04FA                                     l8291 034D  
                                   l8283 032F                                     l8275 02F0  
                                   l8355 139E                                     l8507 0D40  
                                   l6669 16F4                                     l6693 1630  
                                   l6685 1615                                     l6677 15FF  
                                   l8293 038B                                     l8285 033D  
                                   l8277 02F1                                     l8357 13A2  
                                   l8509 0D48                                     l6687 1619  
                                   l6679 1607                                     l6695 1636  
                                   l8295 03A9                                     l8279 02F7  
                                   l8287 0349                                     l6689 1623  
                                   l8297 03AD                                     l8481 0CB5  
                                   l6699 1527                                     l8299 03B1  
                                   l8491 0CEA                                     l8483 0CC0  
                                   l8493 0CF5                                     l8485 0CCB  
                                   l8477 0CA0                                     l8495 0D29  
                                   l8487 0CD6                                     l8479 0CA6  
                                   l8489 0CDF                                     l8881 1572  
                                   l8879 0379                                     STR_1 08A7  
                                   STR_2 07D8                                     STR_3 08AD  
                                   STR_4 081E                                     STR_5 089B  
                                   STR_6 087F                                     STR_7 0886  
                                   STR_8 08A1                                     STR_9 088D  
                                   _BRGH 04C2                                     _CREN 00C4  
                                   _IOCB 0096                                     u7000 0A9C  
                                   u7001 0A9B                                     u7010 1366  
                                   u7011 1363                                     _RBIE 005B  
                                   _RBIF 0058                                     u6500 16DC  
                                   u6501 16DB                                     u8110 02F7  
                                   u8111 02F6                                     i1l80 1450  
                                   u6520 16ED                                     u6600 1636  
                                   u8200 0505                                     u8120 0311  
                                   i1l81 1456                                     u6521 16EC  
                                   u6601 1635                                     u8201 0504  
                                   u8121 0310                                     u6610 1527  
                                   u8210 052F                                     u8130 038B  
                                   i1l83 145F                                     i1l75 143F  
                                   u6611 1526                                     u6515 16DD  
                                   u8211 052E                                     u8131 038A  
                                   i1l76 1442                                     u6620 1540  
                                   u6540 1701                                     u8140 03AD  
                                   u8300 0CF5                                     i1l77 1448  
                                   i1l93 14BA                                     u6621 153F  
                                   u6541 1700                                     u6525 16E9  
                                   u8141 03AC                                     u8301 0CF4  
                                   i1l78 1449                                     i1l86 1327  
                                   u6630 1551                                     u6550 1607  
                                   u8150 03FE                                     u8310 0D40  
                                   i1l79 144F                                     u6631 1550  
                                   u6535 16F5                                     u6551 1606  
                                   u8151 03FD                                     u8311 0D3F  
                                   u6640 1642                                     u6480 16CA  
                                   u8160 0409                                     u6641 1641  
                                   u6481 16C9                                     u8161 0408  
                                   u6650 164F                                     u6570 1619  
                                   u8170 040F                                     i1l99 1750  
                                   u6651 164E                                     u6571 1618  
                                   u8171 040E                                     u8155 03FA  
                                   u6660 165C                                     u6580 1623  
                                   u8180 0429                                     u6661 165B  
                                   u6581 1622                                     u6565 160B  
                                   u8181 0428                                     u6670 1669  
                                   u8190 04C3                                     u6671 1668  
                                   u6495 16CE                                     u8191 04C2  
                                   u6585 161F                                     u6595 162A  
                                   u6950 14FA                                     u6951 14F6  
                                   u6960 1504                                     u6961 1500  
                                   u6970 150E                                     u6971 150A  
                                   u8467 0A5E                                     u6964 14FD  
                                   u8477 0A7B                                     u6974 1507  
                                   u8487 1586                                     u6984 1511  
                                   u8497 1674                                     u6995 0A4D  
                                   _TMR0 0001                                     _SPEN 00C7  
                                   _TXEN 04C5                                     _SYNC 04C4  
                                   _WPUB 0095                           ??_eeprom_write 00AE  
                      ??_adcon_ler_canal 0072                                     _main 0CA0  
                                   btemp 007E                              lcd_puts@cmd 00B2  
                            lcd_puts@str 00AF                                     start 0012  
                        __end_ofi1_putch 0004                         _estado_ver_todos 08AF  
                 ?_estado_menu_principal 0070                        ___bmul@multiplier 0072  
                            i1_lcd_write 1436                             i1__doprnt@ap 0024  
                           i1__doprnt@pb 0020               __end_of_menu_tempo_amostra 072E  
                     eeprom_ler_word@end 0075                                    ??_div 007C  
                                  ?_main 0070                          __end_of___awdiv 09CB  
                        __end_of___lbdiv 1436                                    _EEADR 010D  
                                  STR_10 0894                                    STR_11 0878  
                                  STR_12 0859                                    STR_13 07FD  
                                  STR_22 0871                                    STR_14 0808  
                                  STR_30 0859                                    STR_15 0813  
                                  STR_31 07FD                                    STR_23 0847  
                                  STR_16 07CA                                    _BRG16 0C3B  
                                  STR_32 0808                                    STR_40 0878  
                                  STR_24 079E                                    STR_41 07CA  
                                  STR_17 0850                                    STR_33 0813  
                                  STR_25 083D                                    STR_42 07E6  
                                  STR_34 089B                                    STR_26 0862  
                                  STR_43 0850                                    STR_35 087F  
                                  STR_27 086A                                    STR_44 07E6  
                                  STR_36 0886                                    STR_28 07BC  
                        __end_of___awmod 1800                                    STR_45 0833  
                                  STR_37 08A1                                    STR_29 07AD  
                                  STR_46 0829                                    STR_38 088D  
                                  STR_47 07F2                                    STR_39 0894  
                                  _ANSEL 0188                          ___awdiv@divisor 0070  
                        __end_of___lwdiv 1706                                    i1l133 13F9  
                                  i1l134 140C                                    i1l135 13FF  
                                  i1l136 1405                                    i1l261 0B33  
                                  i1l263 0B36                                    i1l271 0C09  
                                  i1l327 0B0C                                    i1l440 129F  
                                  i1l281 13E3                                    i1l257 0E23  
                                  i1l521 0080                                    i1l513 17A6  
                                  i1l433 0A33                          __end_of___lwmod 163B  
                                  i1l266 0B82                                    i1l258 0E59  
                                  i1l522 0082                                    i1l187 0C93  
                                  i1l284 12CF                                    i1l444 12BC  
                                  i1l436 126E                                    i1l631 12F9  
                                  i1l633 130E                                    i1l473 0FFF  
                                  i1l650 1461                                    i1l538 02EF  
                                  i1l651 1461                                    i1l467 0F54  
                                  i1l483 0901                                    i1l814 09CA  
                                  i1l654 147B                                    i1l487 1291  
                                  i1l657 148C                                    i1l498 0963  
                                  i1l827 17FF                                    i1l933 16BF  
                                  i1l687 12F7                                    i1l943 15C3  
                                  i1l867 1435                          ___awdiv@counter 0074  
                                  _RCREG 001A                                    _SPBRG 0099  
                        __end_of__doprnt 0534                                    _TRISA 0085  
                                  _TXREG 0019                          __end_of_handler 0CA0  
                     i1___lwmod@dividend 0079                          __end_of_dpowers 0744  
                                  _errno 00C9                                    div@rv 0020  
                                  _putch 06FF                                    main@i 00BF  
                                  fpbase 003E                       _estado_menu_limpar 1292  
                                  pclath 000A                                    status 0003  
                                  wtemp0 007E                          __end_of_sprintf 1399  
               estado_menu_principal@opt 0064                          ___lbdiv@divisor 0071  
                        ___lbdiv@counter 0073                      ?_estado_menu_limpar 0070  
               estado_executa_muda@F1404 0190                          __initialization 0015  
                           __end_of_main 0D57        estado_menu_conf_tempo_amostra@opt 0062  
                            i1lcd_goto@x 0072                              i1lcd_goto@y 0075  
                          i1__doprnt@val 002C                 estado_executa_muda@i_945 005C  
                                 ??_main 00BF                 estado_executa_muda@maior 0058  
               estado_executa_muda@menor 005A                  i1eeprom_gravar_word@end 0074  
                   ??_estado_menu_limpar 007C                              ?i1_lcd_goto 0072  
                           _adcon_mostra 0B83                              ?i1_lcd_puts 0073  
                    _estado_executa_muda 004B            __end_of_estado_captura_mostra 12BD  
                                 _ADRESH 001E                                   _ADRESL 009E  
                                 _EEDATA 010C                                   _EECON1 018C  
                                 _EECON2 018D                         ___awdiv@dividend 0072  
                                 ?_putch 00AD                                   _ANSELH 0189  
                                 i1l1112 14E9                                   i1l1223 05A1  
                                 i1l1225 0579                                   i1l1245 06E7  
                                 i1l1255 1398                                   i1l1248 0003  
                                 i1l4203 1409                                   i1l4207 140B  
                                 i1l4191 13F7                                   i1l4195 13FD  
                                 i1l4187 13E4                                   i1l4189 13F1  
                                 i1l4199 1403                                   i1l8001 0211  
                                 i1l8011 0248                                   i1l8003 021B  
                                 i1l8021 026B                                   i1l8013 0250  
                                 i1l8005 0245                                   i1l8101 0ED7  
                                 i1l8023 0270                                   i1l8015 0256  
                                 i1l8031 02C7                                   i1l8111 0F0C  
                                 i1l8103 0EE0                                   i1l8025 029A  
                                 i1l8017 025C                                   i1l8033 02E9  
                                 i1l8121 0F2A                                   i1l8113 0F0D  
                                 i1l8105 0EEC                                   i1l8041 140E  
                                 i1l8027 029F                                   i1l8019 0261  
                                 i1l8211 1293                                   i1l8131 0F69  
                                 i1l8123 0F34                                   i1l8115 0F12  
                                 i1l8107 0EF8                                   i1l8051 141D  
                                 i1l8043 140F                                   i1l8221 0914  
                                 i1l8213 1299                                   i1l8141 0F91  
                                 i1l8133 0F71                                   i1l8125 0F3E  
                                 i1l8109 0EFA                                   i1l8061 142E  
                                 i1l8053 1421                                   i1l8045 1414  
                                 i1l8207 1285                                   i1l8231 093A  
                                 i1l8223 091B                                   i1l8215 0905  
                                 i1l8151 0FB9                                   i1l8143 0F98  
                                 i1l8135 0F7E                                   i1l8127 0F4A  
                                 i1l8119 0F1C                                   i1l8071 0E5E  
                                 i1l8055 1429                                   i1l8047 1417  
                                 i1l8063 1434                                   i1l7601 16AE  
                                 i1l8401 0D98                                   i1l8209 128B  
                                 i1l8233 0946                                   i1l8225 0926  
                                 i1l8217 0906                                   i1l8153 0FC2  
                                 i1l8145 0F9F                                   i1l8129 0F63  
                                 i1l8137 0F84                                   i1l8081 0E7A  
                                 i1l8073 0E65                                   i1l8161 0FEC  
                                 i1l8057 142B                                   i1l8049 1419  
                                 i1l7603 16B5                                   i1l7611 1590  
                                 i1l8411 0DC6                                   i1l8403 0D9D  
                                 i1l8067 1268                                   i1l8251 175E  
                                 i1l8227 092C                                   i1l8219 090E  
                                 i1l8147 0FA6                                   i1l8139 0F8A  
                                 i1l8091 0EA8                                   i1l8083 0E81  
                                 i1l8075 0E67                                   i1l8059 142C  
                                 i1l7701 17E4                                   i1l7605 16BB  
                                 i1l7621 15AC                                   i1l7613 1593  
                                 i1l8421 0DDE                                   i1l8405 0DA5  
                                 i1l8413 0DCD                                   i1l8261 177F  
                                 i1l8253 1765                                   i1l8245 1754  
                                 i1l8229 0933                                   i1l8237 094D  
                                 i1l8157 0FC9                                   i1l8149 0FB2  
                                 i1l8093 0EBF                                   i1l8085 0E86  
                                 i1l8077 0E6E                                   i1l8069 0E5D  
                                 i1l8181 08B2                                   i1l7631 0964  
                                 i1l7703 17EB                                   i1l7623 15B2  
                                 i1l7615 159A                                   i1l8431 0E03  
                                 i1l8423 0DE3                                   i1l8415 0DD3  
                                 i1l8407 0DA9                                   i1l8175 12AF  
                                 i1l8263 1789                                   i1l8255 176D  
                                 i1l8247 1755                                   i1l8095 0EC5  
                                 i1l8087 0E8F                                   i1l8079 0E76  
                                 i1l8191 08DC                                   i1l8183 08B3  
                                 i1l7641 0974                                   i1l7633 0965  
                                 i1l7705 17F1                                   i1l7625 15B9  
                                 i1l7617 159E                                   i1l7609 158A  
                                 i1l7801 0641                                   i1l7721 1454  
                                 i1l7713 1437                                   i1l8441 0E40  
                                 i1l8433 0E0D                                   i1l8417 0DD7  
                                 i1l8409 0DC0                                   i1l8177 12B5  
                                 i1l8257 1771                                   i1l8249 175C  
                                 i1l8097 0ECB                                   i1l8089 0EA6  
                                 i1l8193 08E0                                   i1l8185 08BA  
                                 i1l8361 0A9D                                   i1l8521 0C1F  
                                 i1l8513 0C0A                                   i1l7651 0988  
                                 i1l7643 0979                                   i1l7635 0969  
                                 i1l7707 17F6                                   i1l7619 15A2  
                                 i1l7627 15BF                                   i1l7811 069B  
                                 i1l7803 064B                                   i1l7723 1457  
                                 i1l7715 143B                                   i1l8443 0E4D  
                                 i1l8435 0E19                                   i1l8419 0DDD  
                                 i1l8427 0DED                                   i1l8179 12B6  
                                 i1l8259 1778                                   i1l8267 1790  
                                 i1l8099 0ED2                                   i1l8195 08E7  
                                 i1l8187 08BC                                   i1l8451 09D6  
                                 i1l8371 0AC7                                   i1l8363 0A9E  
                                 i1l8531 0C62                                   i1l8523 0C23  
                                 i1l8515 0C0E                                   i1l7661 09AE  
                                 i1l7653 098F                                   i1l7645 097D  
                                 i1l7637 096E                                   i1l7709 17FB  
                                 i1l7813 06B1                                   i1l7805 0654  
                                 i1l7725 145B                                   i1l7717 1446  
                                 i1l7901 1726                                   i1l7741 147A  
                                 i1l7733 1467                                   i1l8437 0E32  
                                 i1l8429 0DF9                                   i1l8445 0E53  
                                 i1l8189 08C3                                   i1l8461 09F9  
                                 i1l8453 09DD                                   i1l8381 0AE7  
                                 i1l8373 0ACF                                   i1l8365 0AA5  
                                 i1l8533 0C69                                   i1l8525 0C27  
                                 i1l8541 0C77                                   i1l8517 0C14  
                                 i1l7911 0B0E                                   i1l7671 09C6  
                                 i1l7663 09AF                                   i1l7655 0993  
                                 i1l7647 097F                                   i1l7639 0970  
                                 i1l7591 168E                                   i1l7583 167C  
                                 i1l7815 06BB                                   i1l7807 0659  
                                 i1l7727 145E                                   i1l7719 144D  
                                 i1l7903 1736                                   i1l7831 13BF  
                                 i1l7751 148B                                   i1l7743 147F  
                                 i1l7735 146D                                   i1l8439 0E38  
                                 i1l8391 0D57                                   i1l8199 08EE  
                                 i1l8463 0A00                                   i1l8455 09E4  
                                 i1l8447 09CE                                   i1l8383 0AF7  
                                 i1l8375 0AD2                                   i1l8367 0AA9  
                                 i1l8551 0C92                                   i1l8543 0C7B  
                                 i1l8535 0C6E                                   i1l8527 0C33  
                                 i1l8519 0C1A                                   i1l7913 0B16  
                                 i1l7665 09B6                                   i1l7657 0997  
                                 i1l7649 0985                                   i1l7681 17B1  
                                 i1l7841 14BB                                   i1l7593 1692  
                                 i1l7585 167E                                   i1l7809 0689  
                                 i1l7817 06C4                                   i1l7761 0563  
                                 i1l7753 0534                                   i1l7905 173A  
                                 i1l7729 1300                                   i1l7833 13BF  
                                 i1l7825 130F                                   i1l7745 1483  
                                 i1l7737 1473                                   i1l8393 0D60  
                                 i1l8465 0A07                                   i1l8457 09EB  
                                 i1l8449 09CF                                   i1l8385 0AFB  
                                 i1l8377 0ADB                                   i1l8369 0AB0  
                                 i1l8545 0C7F                                   i1l8537 0C72  
                                 i1l8529 0C58                                   i1l7923 0B3A  
                                 i1l7915 0B2C                                   i1l7659 09A8  
                                 i1l7667 09BC                                   i1l7691 17C5  
                                 i1l7683 17B3                                   i1l7675 17A7  
                                 i1l7843 14E1                                   i1l7595 1696  
                                 i1l7587 1684                                   i1l7771 05A5  
                                 i1l7763 056D                                   i1l7755 0535  
                                 i1l7819 06CF                                   i1l7851 137D  
                                 i1l7907 1740                                   i1l7931 0B9A  
                                 i1l7835 13CC                                   i1l7827 1312  
                                 i1l7747 1484                                   i1l7739 1476  
                                 i1l8395 0D77                                   i1l8459 09F2  
                                 i1l8387 0B03                                   i1l8379 0AE3  
                                 i1l8547 0C87                                   i1l8539 0C76  
                                 i1l7925 0B6D                                   i1l7917 0B31  
                                 i1l7861 12E5                                   i1l7669 09C1  
                                 i1l7693 17CC                                   i1l7685 17B7  
                                 i1l7677 17A8                                   i1l7597 16A7  
                                 i1l7589 1687                                   i1l7781 05E7  
                                 i1l7773 05BF                                   i1l7757 053B  
                                 i1l7765 0577                                   i1l7853 1381  
                                 i1l7933 0BB1                                   i1l7837 13DF  
                                 i1l7829 131E                                   i1l7749 1485  
                                 i1l7909 12BE                                   i1l8397 0D80  
                                 i1l7941 0065                                   i1l8469 0A0E  
                                 i1l8389 0B06                                   i1l8549 0C8C  
                                 i1l7871 12F6                                   i1l7863 12E9  
                                 i1l7695 17D0                                   i1l7687 17BC  
                                 i1l7679 17AC                                   i1l7599 16AD  
                                 i1l7791 0609                                   i1l7775 05C3  
                                 i1l7759 054D                                   i1l7855 1392  
                                 i1l7847 137A                                   i1l7935 0BDD  
                                 i1l8399 0D8C                                   i1l7951 0097  
                                 i1l7943 006A                                   i1l7865 12ED  
                                 i1l7697 17D4                                   i1l7689 17C2  
                                 i1l7793 060D                                   i1l7777 05C7  
                                 i1l7769 057B                                   i1l7849 137C  
                                 i1l7937 0C00                                   i1l7929 0B83  
                                 i1l7961 00D3                                   i1l7953 00A1  
                                 i1l7945 0084                                   i1l7867 12EF  
                                 i1l7859 12E4                                   i1l7699 17DE  
                                 i1l7795 0613                                   i1l7787 05E9  
                                 i1l7779 05CD                                   i1l7883 14A0  
                                 i1l7875 148E                                   i1l7971 014F  
                                 i1l7963 0105                                   i1l7955 00AA  
                                 i1l7947 0089                                   i1l7939 004E  
                                 i1l7869 12F1                                   i1l7797 0619  
                                 i1l7885 14B0                                   i1l7877 1492  
                                 i1l7893 1706                                   i1l7981 0177  
                                 i1l7965 011E                                   i1l7973 0153  
                                 i1l7957 00C1                                   i1l7949 0092  
                                 i1l7799 062B                                   i1l7887 14B6  
                                 i1l7879 1499                                   i1l7895 170A  
                                 i1l7991 01C7                                   i1l7983 017D  
                                 i1l7975 015A                                   i1l7967 0141  
                                 i1l7959 00D1                                   i1l7897 171C  
                                 i1l7993 01D0                                   i1l7985 0185  
                                 i1l7977 015F                                   i1l7969 014A  
                                 i1l7899 1722                                   i1l7995 01D7  
                                 i1l7987 018F                                   i1l7979 016B  
                                 i1l8891 0955                                   i1l8883 0A16  
                                 i1l7997 01EC                                   i1l7989 01B5  
                                 i1l8893 1798                                   i1l8885 08F6  
                                 i1l8895 02CF                                   i1l7999 01FF  
                                 i1l8887 0FD5                                   i1l8897 14A8  
                                 i1l8889 0FF4                                   i1l8899 0593  
                                 u800_20 0F4A                                   u800_21 0F49  
                                 u800_25 0F46                                   u801_20 0F8A  
                                 u801_21 0F89                                   u730_20 16BB  
                                 u802_20 12B5                                   u810_20 176D  
                                 u730_21 16BA                                   u802_21 12B4  
                                 u810_21 176C                                   u731_20 1590  
                                 u395_20 13F7                                   u803_20 08BA  
                                 u731_21 158F                                   u395_21 13F6  
                                 u803_21 08B9                                   u724_20 1684  
                                 u396_20 13FD                                   u804_20 08DC  
                                 u724_21 1683                                   u396_21 13FC  
                                 u804_21 08DB                                   u740_25 0989  
                                 u732_25 1594                                   u741_20 0997  
                                 u733_20 15A2                                   u397_20 1403  
                                 u805_20 128B                                   u741_21 0996  
                                 u733_21 15A1                                   u397_21 1402  
                                 u805_21 128A                                ??i1_putch 0071  
                                 u725_25 1688                                   u726_20 1696  
                                 u734_20 15AC                                   u398_20 1409  
                                 u806_20 1299                                   u822_20 0B0C  
                                 u726_21 1695                                   u734_21 15AB  
                                 u398_21 1408                                   u806_21 1298  
                                 u822_21 0B0B                                   u742_25 0998  
                                 u750_25 17C6                                   u734_25 15A8  
                                 u743_20 09A8                                   u751_20 17D4  
                                 u823_20 0DA5                                   u807_20 090E  
                                 u743_21 09A7                                   u751_21 17D3  
                                 u823_21 0DA4                                   u807_21 090D  
                                 u743_25 09A4                                   u727_25 1697  
                                 u735_25 15B3                                   u752_20 17DE  
                                 u728_20 16A7                                   u736_20 15BF  
                                 u760_20 1300                                   u824_20 0DCC  
                                 u808_20 0926                                   u840_20 0C7F  
                                 u832_20 0C0E                                   u752_21 17DD  
                                 u728_21 16A6                                   u736_21 15BE  
                                 u760_21 12FF                                   u824_21 0DCB  
                                 u808_21 0925                                   u840_21 0C7E  
                                 u832_21 0C0D                                   u744_25 09B0  
                                 u752_25 17DA                                   u728_25 16A3  
                                 u745_20 09BC                                   u737_20 0969  
                                 u761_20 1467                                   u825_20 0DD3  
                                 u809_20 175C                                   u841_20 0C8C  
                                 u833_20 0C14                                   u745_21 09BB  
                                 u737_21 0968                                   u761_21 1466  
                                 u825_21 0DD2                                   u809_21 175B  
                                 u841_21 0C8B                                   u833_21 0C13  
                                 u753_25 17E5                                   u729_25 16AF  
                                 u746_20 09C1                                   u738_20 0974  
                                 u754_20 17F1                                   u770_20 0619  
                                 u762_20 147A                                   u826_20 0DDD  
                                 u834_20 0C1A                                   u746_21 09C0  
                                 u738_21 0973                                   u754_21 17F0  
                                 u770_21 0618                                   u762_21 1479  
                                 u826_21 0DDC                                   u834_21 0C19  
                             __i1fptable 0042                                   u850_27 0ACB  
                                 u739_20 0985                                   u755_20 17F6  
                                 u747_20 17AC                                   u771_20 062B  
                                 u763_20 148B                                   u827_20 0E03  
                                 u835_20 0C23                                   u739_21 0984  
                                 u755_21 17F5                                   u747_21 17AB  
                                 u771_21 062A                                   u763_21 148A  
                                 u827_21 0E02                                   u835_21 0C22  
                                 u827_25 0DFF                                   u851_27 0AD6  
                                 u748_20 17B7                                   u772_20 069B  
                                 u764_20 053B                                   u756_20 143B  
                                 u828_20 0E19                                   u836_20 0C27  
                                 u780_21 0B50                                   u748_21 17B6  
                                 u772_21 069A                                   u764_21 053A  
                                 u756_21 143A                                   u828_21 0E18  
                                 u836_21 0C26                                   u780_22 0B57  
                                 u780_23 0B5E                                   u828_25 0E15  
                                 u860_27 0B2E                                   u852_27 0AEB  
                                 u781_20 0B6D                                   u749_20 17C2  
                                 u773_20 06CF                                   u765_20 054D  
                                 u757_20 1446                                   u829_20 0E59  
                                 u781_21 0B6C                                   u749_21 17C1  
                                 u773_21 06CE                                   u765_21 054C  
                                 u757_21 1445                                   u829_21 0E58  
                                 u837_25 0C36                                   u853_27 0AFF  
                                 u782_20 0B7B                                   u774_20 06E7  
                                 u766_20 05A5                                   u758_20 144D  
                                 u838_20 0C62                                   u774_21 06E6  
                                 u766_21 05A4                                   u758_21 144C  
                                 u838_21 0C61                                   u782_25 0B76  
                                 u790_25 0277                                   u838_25 0C5E  
                                 u854_27 13EA                                   u775_20 12E9  
                                 u767_20 05C3                                   u759_20 1454  
                                 u783_20 0B8D                                   u791_20 1414  
                                 u839_20 0C7B                                   u775_21 12E8  
                                 u767_21 05C2                                   u759_21 1453  
                                 u791_21 1413                                   u839_21 0C7A  
                                 u855_27 1322                                   u776_20 12F6  
                                 u768_20 0608                                   u784_20 0056  
                                 u792_20 1421                                   u776_21 12F5  
                                 u768_21 0607                                   u792_21 1420  
                                 u768_25 0604                                   u856_27 1724  
                                 u769_20 0613                                   u785_20 0097  
                                 u793_20 1429                                   u769_21 0612  
                                 u785_21 0096                                   u793_21 1428  
                                 u777_25 1715                                   u857_27 1738  
                                 u778_20 1750                                   u786_20 0159  
                                 u794_20 1434                                   u778_21 174F  
                                 u786_21 0158                                   u794_21 1433  
                                 u858_27 14B8                                   u779_20 0B3A  
                                 u787_20 017D                                   u795_20 0E65  
                                 u779_21 0B39                                   u787_21 017C  
                                 u795_21 0E64                                   u859_27 1459  
                                 u788_20 0185                                   u796_20 0E76  
                                 u788_21 0184                                   u796_21 0E75  
                                 u789_20 025C                                   u797_20 0ECB  
                                 u789_21 025B                                   u797_21 0ECA  
                                 u798_20 0F0C                                   u798_21 0F0B  
                                 u798_25 0F08                                   u799_20 0F34  
                                 u799_21 0F33                                   u799_25 0F30  
                                 _TRISB0 0430                                   _TRISB1 0431  
                                 _TRISC0 0438                                   _TRISB2 0432  
                                 _TRISC1 0439                                   _TRISC2 043A  
                                 _TRISB4 0434                                   _TRISB5 0435  
                                 _TRISB6 0436                                   _TRISB7 0437  
                                 _TRISC6 043E                                   _TRISC7 043F  
                       __end_of__fptable 0042                         __end_of_lcd_init 15FF  
                       __end_of_lcd_goto 158A                                   ___bmul 12E3  
                       __end_of_lcd_puts 0A9D                     ?_estado_executa_muda 0070  
                                 _canais 074C                                ??___awdiv 0074  
                              ??___lbdiv 0072                                ??___awmod 0074  
                           ?_timer0_init 0070                         estado_maquina@op 00A2  
                              ??___lwdiv 00B1                                ??___lwmod 00B8  
     estado_menu_conf_quant_sensores@opt 0062                                ??__doprnt 01C1  
                       ___awdiv@quotient 0076                          ___awmod@divisor 0070  
                       __end_of_mq_gl_r0 079E                     __end_of_eeprom_write 1553  
                           __doprnt@flag 01C6                          ___awmod@counter 0074  
                                 _printf 1399                                ??_handler 00A3  
                           __doprnt@prec 01C5                      _adcon_captura_grava 0D57  
                                 fptable 0039                        __end_ofi1___lwdiv 16C0  
                                 fptotal 0002                        __end_ofi1___lwmod 15C4  
                      __end_ofi1__doprnt 06E8                                   saved_w 007E  
                                 putch@c 00AD                                ??_sprintf 007C  
                       ___lbdiv@dividend 0072                         __end_ofexp@coeff 0778  
                       __end_oflog@coeff 079C                  __end_of__initialization 0035  
             estado_menu_principal@i_916 006D                          eeprom_read@addr 00AD  
                   ?_adcon_captura_grava 0070               estado_menu_principal@maior 0065  
           __end_ofi1_eeprom_gravar_word 12D0               estado_menu_principal@menor 0067  
                   estado_executa_muda@i 0061               estado_menu_principal@t_int 006E  
                          i1_eeprom_read 12F8                      ___bmul@multiplicand 0070  
                  ??_estado_executa_muda 003C                           __pcstackCOMMON 0070  
                           __pidataBANK1 12A0            estado_menu_principal@qtd_sens 006A  
                          __end_of_putch 0700                         ___lbdiv@quotient 0074  
                             _adcon_init 1328                           i1__doprnt@flag 002B  
                         _OPTION_REGbits 0081                           i1__doprnt@prec 002A  
                        _adcon_ler_canal 0B0D                 __end_of_estado_ver_todos 0902  
                             _rs232_init 1341                             i1lcd_write@c 0071  
                      eeprom_write@value 00AD                    eeprom_gravar_word@end 00B1  
                             __doprnt@ap 00BD                               __doprnt@pb 00B9  
                                ??_putch 00AE                               __pbssBANK1 00C0  
                             __pbssBANK3 0190                      estado_ver_todos@opt 0062  
               i1eeprom_gravar_word@dado 0072                    ??_adcon_captura_grava 007D  
                ??_estado_menu_principal 0062                          handler@count_t0 00CD  
                         ?i1_eeprom_read 0070                               __pmaintext 0CA0  
                                ?___bmul 0070                             ?i1_lcd_write 0070  
                       adcon_ler_canal@i 007B                               __pintentry 0004  
                        handler@pos_taxa 00AA                        ??_eeprom_ler_word 0073  
                                ?_printf 01CA                       adcon_ler_canal@acc 0077  
                     adcon_ler_canal@cnl 0076                       _menu_tempo_amostra 0712  
                              ?_lcd_init 0070                                ?_lcd_goto 00AF  
                              ?_lcd_puts 00AF                               __stringtab 0700  
               estado_captura_mostra@opt 007C                        ??_rs232_transmite 0073  
                                i1_putch 0003                        estado_inicial@opt 0070  
                                i1fpbase 0047                               _btns_testa 13E4  
                      __end_of_lcd_clear 1328               estado_executa_muda@qtd_val 0051  
             __end_of_eeprom_gravar_word 06FF               estado_executa_muda@posicao 0052  
                      estado_max_min@opt 007C                 adcon_captura_grava@i_644 005A  
                                ___awdiv 0964                                  ___lbdiv 140D  
                                ___awmod 17A7                        __end_of_lcd_write 167C  
                                ___lwdiv 16C0                                  ___lwmod 15FF  
                __end_of_adcon_ler_canal 0B83                                  __doprnt 02F0  
               adcon_captura_grava@maior 0050                 adcon_captura_grava@menor 0052  
                      __end_of_btns_init 151E                 adcon_captura_grava@t_int 005B  
                                _handler 0C0A                 rs232_transmite@qtd_bytes 0077  
                                __ptext1 1277                                  __ptext2 1341  
                                __ptext3 1399                                  __ptext4 02F0  
                                __ptext5 06FF                                  __ptext6 15FF  
                                __ptext7 16C0                                  __ptext8 0A34  
                                __ptext9 15C4                      __size_of__i1fptable 0009  
                            ?_adcon_init 0070           estado_executa_muda@novo_estado 0053  
                                _dpowers 073A                        i1___lwdiv@divisor 0070  
                      i1___lwdiv@counter 0074                         ___awmod@dividend 0072  
                   i1_eeprom_gravar_word 12BD                              ?_rs232_init 0070  
                           ??i1_lcd_goto 0073                             ??i1_lcd_puts 0075  
             adcon_captura_grava@qtd_val 0058               adcon_captura_grava@posicao 0056  
                                _sprintf 1377                                  clrloop0 1270  
                             ??_lcd_init 00AF                               ??_lcd_goto 00B0  
                             ??_lcd_puts 00B1                     end_of_initialization 0035  
                eeprom_ler_word@temp_int 0076                          ??i1_eeprom_read 0070  
                           _eeprom_write 151E              __end_of_menu_quant_sensores 073A  
                             fp_i1_putch 0048                     adcon_captura_grava@i 0059  
                   adcon_captura_grava@x 0054         ??_estado_menu_conf_tempo_amostra 007C  
        ?_estado_menu_conf_tempo_amostra 0070                                _RCSTAbits 0018  
                                printf@f 01CA                       __end_ofi1_lcd_goto 14BB  
                           __pstringtext 0700                       __end_ofi1_lcd_puts 1751  
                  ?i1_eeprom_gravar_word 0072                 _estado_executa_muda$1885 005D  
               _estado_executa_muda$1886 005F                           _estado_inicial 1268  
                         _estado_max_min 1284                                i1___lwdiv 167C  
                         _estado_maquina 09CB                                i1___lwmod 158A  
                              i1__doprnt 0534                    _estado_captura_mostra 12AE  
                          ??_eeprom_read 00AD                                _TXSTAbits 0098  
                            ?_btns_testa 0070                           i1_eeprom_write 1460  
                             lcd_write@c 00AE                           __end_of___bmul 12F8  
                         __end_of_canais 0750                         ?_adcon_ler_canal 0070  
                      i1___lwmod@divisor 0077                        i1___lwmod@counter 007B  
                         __end_of_printf 13BE                   __end_of_estado_inicial 126F  
                    start_initialization 0015                   __end_of_estado_max_min 1292  
                 __end_of_estado_maquina 0A34                        ?_estado_ver_todos 0070  
                            __end_of_div 14EA                               ?i1___lwdiv 0070  
                             ?i1___lwmod 0077                               ?i1__doprnt 0020  
                     ??_estado_ver_todos 007C                   __end_ofi1_eeprom_write 148D  
            __end_of_estado_executa_muda 02F0                          _eeprom_ler_word 13BE  
                          i1lcd_puts@cmd 0076                            i1lcd_puts@str 0073  
          __end_of_estado_menu_principal 1000                   eeprom_gravar_word@dado 00AF  
                               ??___bmul 0071                      __end_of_eeprom_read 1377  
                             init_fetch0 12D0                      __end_of_LCD_POSICAO 074C  
                            __doprnt@val 01C7                              __pdataBANK1 00D3  
                               ??_printf 00BF                   ??i1_eeprom_gravar_word 0074  
                        _rs232_transmite 0A9D                       __end_of__i1fptable 004B  
                        ?_estado_inicial 0070                                ___latbits 0002  
                        ?_estado_max_min 0070                            __pcstackBANK0 0020  
                          __pcstackBANK1 00A0                            __pcstackBANK3 01C1  
                        ?_estado_maquina 0070             estado_menu_principal@qtd_val 006B  
           estado_menu_principal@posicao 0069                        __size_of__fptable 0009  
                 _gl_item_menu_principal 00D1              __end_of_adcon_captura_grava 0E5A  
                 _gl_item_menu_ver_todos 00D0                   ?_estado_captura_mostra 0070  
                       eeprom_write@addr 00AE                                 ?i1_putch 0070  
                              __doprnt@c 01C9                                __doprnt@f 00BB  
                        ?i1_eeprom_write 0070                         rs232_transmite@i 0079  
                       rs232_transmite@x 0078                         ___lwdiv@dividend 00AF  
                    i1eeprom_write@value 0070                                __pfunctab 0039  
                               ?___awdiv 0070                                 ?___lbdiv 0071  
                               ?___awmod 0070                                 ?___lwdiv 00AD  
                               ?___lwmod 00B4                                 ?__doprnt 00B9  
                              _lcd_clear 130F                                _gl_estado 00D2  
                           _menu_inicial 00D3                                 ?_handler 0070  
                              _lcd_write 163B                             ??_adcon_init 00AD  
                              _btns_init 14EA                       _eeprom_gravar_word 06E8  
                           ??_rs232_init 00AD                            ?_adcon_mostra 003C  
                         mq_mostra@F1381 01B1                           mq_mostra@F1383 01A1  
                       ___lwdiv@quotient 00B2                              ??i1___lwdiv 0074  
                            ??i1___lwmod 007B                  __end_of_eeprom_ler_word 13E4  
                               ?_sprintf 002F                              ??i1__doprnt 0026  
                rs232_transmite@qtd_sens 0076                      ?_eeprom_gravar_word 00AF  
                      interrupt_function 0004                                clear_ram0 126F  
                            _eeprom_read 135A                                div@number 0078  
                               _PIE1bits 008C                              _LCD_POSICAO 0744  
                     __end_of_adcon_init 1341                                 _PIR1bits 000C  
                          ??_timer0_init 00AD                       __end_of_rs232_init 135A  
                __end_of_rs232_transmite 0B0D                     ??_eeprom_gravar_word 00B1  
                             ?_lcd_clear 0070                               _ADCON0bits 001F  
                            __stringbase 0712                               _ADCON1bits 009F  
                             ?_lcd_write 0070                                lcd_goto@x 00AF  
                              lcd_goto@y 00B2                               ?_btns_init 0070  
                         ??_adcon_mostra 003F   __end_of_estado_menu_conf_tempo_amostra 0964  
         _estado_menu_conf_tempo_amostra 0902                                 i1fptable 0042  
                               i1fptotal 0002              estado_executa_muda@endereco 0057  
                               i1putch@c 0070                             ??_btns_testa 0070  
                  __end_ofi1_eeprom_read 130F                               _EECON1bits 018C  
            estado_executa_muda@temp_int 0054              estado_executa_muda@qtd_sens 0056  
                     __end_of__stringtab 0712               __end_of_estado_menu_limpar 12A0  
                    __end_of_timer0_init 1284                                 __fptable 0039  
                     i1eeprom_write@addr 0071  __end_of_estado_menu_conf_quant_sensores 17A7  
      ??_estado_menu_conf_quant_sensores 007C         ?_estado_menu_conf_quant_sensores 0070  
        _estado_menu_conf_quant_sensores 1751                       __end_of_btns_testa 140D  
                        ___lwdiv@divisor 00AD                          ___lwdiv@counter 00B1  
                          handler@option 00AC                                 __ptext10 1553  
                               __ptext11 163B                                 __ptext20 08AF  
                               __ptext12 135A                                 __ptext21 140D  
                               __ptext13 06E8                                 __ptext30 13E4  
                               __ptext22 0E5A                                 __ptext14 151E  
                               __ptext31 0D57                                 __ptext23 1292  
                               __ptext15 14EA                                 __ptext40 1436  
                               __ptext32 12BD                                 __ptext24 0902  
                               __ptext16 1328                                 __ptext41 1377  
                               __ptext33 1460                                 __ptext25 1751  
                               __ptext17 0C0A                                 __ptext50 0B0D  
                               __ptext42 0534                                 __ptext34 130F  
                               __ptext26 1284                                 __ptext18 0A9D  
                               __ptext43 0003                                 __ptext35 13BE  
                               __ptext27 1268                                 __ptext19 09CB  
                               __ptext44 158A                                 __ptext36 12F8  
                               __ptext28 12AE                                 __ptext45 167C  
                               __ptext37 0B83                                 __ptext29 004B  
                               __ptext46 14BB                                 __ptext38 1706  
                               __ptext47 17A7                                 __ptext39 148D  
                               __ptext48 0964                                 __ptext49 12E3  
                               _lcd_init 15C4                                 _lcd_goto 1553  
                       ?_eeprom_ler_word 0071                                 _lcd_puts 0A34  
                      i1eeprom_read@addr 0070                       i1___lwdiv@dividend 0072  
                 rs232_transmite@qtd_val 0075                                 _mq_gl_r0 079C  
                               div@denom 007A                            ??i1_lcd_write 0070  
                       ?_rs232_transmite 0070              adcon_captura_grava@qtd_sens 0057  
                               fp__putch 003F                              ??_lcd_clear 0072  
                       ??_estado_inicial 007C                         ??_estado_max_min 007C  
                       ??_estado_maquina 00A0                              ??_lcd_write 00AD  
                               exp@coeff 0750                       i1___lwdiv@quotient 0075  
                               log@coeff 0778                              ??_btns_init 00AD  
                             _INTCONbits 000B                  ??_estado_captura_mostra 007C  
                               init_ram0 12D4                         ??i1_eeprom_write 0071  
                               intlevel1 0039                                sprintf@ap 0038  
                              sprintf@pb 003A                                sprintf@wh 0037  
                       ___lwmod@dividend 00B6                                stringcode 070A  
                   __end_of_adcon_mostra 0C0A                            adcon_mostra@i 003E  
                  _estado_menu_principal 0E5A                                 printf@ap 01CC  
                               printf@pb 01CE                              _timer0_init 1277  
                  estado_menu_limpar@opt 007C                      __end_ofi1_lcd_write 1460  
                               sprintf@f 002F                          ___lwmod@divisor 00B4  
                        ___lwmod@counter 00B8                                 stringtab 0700  
                      adcon_mostra@F1474 00C0                     handler@tempo_amostra 00A8  
                   adcon_mostra@temp_div 004C                     adcon_mostra@temp_str 0043  
                          ?_eeprom_write 00AD                               _STATUSbits 0003  
                           ?_eeprom_read 0070              _gl_item_menu_config_amostra 00CB  
                      adcon_mostra@t_int 003C  
